/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.Towrevo;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int abc_tooltip_enter=0x7f01000a;
    public static final int abc_tooltip_exit=0x7f01000b;
    public static final int btn_checkbox_to_checked_box_inner_merged_animation=0x7f01000c;
    public static final int btn_checkbox_to_checked_box_outer_merged_animation=0x7f01000d;
    public static final int btn_checkbox_to_checked_icon_null_animation=0x7f01000e;
    public static final int btn_checkbox_to_unchecked_box_inner_merged_animation=0x7f01000f;
    public static final int btn_checkbox_to_unchecked_check_path_merged_animation=0x7f010010;
    public static final int btn_checkbox_to_unchecked_icon_null_animation=0x7f010011;
    public static final int btn_radio_to_off_mtrl_dot_group_animation=0x7f010012;
    public static final int btn_radio_to_off_mtrl_ring_outer_animation=0x7f010013;
    public static final int btn_radio_to_off_mtrl_ring_outer_path_animation=0x7f010014;
    public static final int btn_radio_to_on_mtrl_dot_group_animation=0x7f010015;
    public static final int btn_radio_to_on_mtrl_ring_outer_animation=0x7f010016;
    public static final int btn_radio_to_on_mtrl_ring_outer_path_animation=0x7f010017;
    public static final int design_bottom_sheet_slide_in=0x7f010018;
    public static final int design_bottom_sheet_slide_out=0x7f010019;
    public static final int design_snackbar_in=0x7f01001a;
    public static final int design_snackbar_out=0x7f01001b;
    public static final int fragment_close_enter=0x7f01001c;
    public static final int fragment_close_exit=0x7f01001d;
    public static final int fragment_fade_enter=0x7f01001e;
    public static final int fragment_fade_exit=0x7f01001f;
    public static final int fragment_fast_out_extra_slow_in=0x7f010020;
    public static final int fragment_open_enter=0x7f010021;
    public static final int fragment_open_exit=0x7f010022;
    public static final int mtrl_bottom_sheet_slide_in=0x7f010023;
    public static final int mtrl_bottom_sheet_slide_out=0x7f010024;
    public static final int mtrl_card_lowers_interpolator=0x7f010025;
    public static final int nav_default_enter_anim=0x7f010026;
    public static final int nav_default_exit_anim=0x7f010027;
    public static final int nav_default_pop_enter_anim=0x7f010028;
    public static final int nav_default_pop_exit_anim=0x7f010029;
    public static final int slide_in_bottom=0x7f01002a;
    public static final int slide_out_bottom=0x7f01002b;
    public static final int ucrop_loader_circle_path=0x7f01002c;
    public static final int ucrop_loader_circle_scale=0x7f01002d;
  }
  public static final class animator {
    public static final int design_appbar_state_list_animator=0x7f020000;
    public static final int design_fab_hide_motion_spec=0x7f020001;
    public static final int design_fab_show_motion_spec=0x7f020002;
    public static final int fastscroll__default_hide=0x7f020003;
    public static final int fastscroll__default_show=0x7f020004;
    public static final int linear_indeterminate_line1_head_interpolator=0x7f020005;
    public static final int linear_indeterminate_line1_tail_interpolator=0x7f020006;
    public static final int linear_indeterminate_line2_head_interpolator=0x7f020007;
    public static final int linear_indeterminate_line2_tail_interpolator=0x7f020008;
    public static final int mtrl_btn_state_list_anim=0x7f020009;
    public static final int mtrl_btn_unelevated_state_list_anim=0x7f02000a;
    public static final int mtrl_card_state_list_anim=0x7f02000b;
    public static final int mtrl_chip_state_list_anim=0x7f02000c;
    public static final int mtrl_extended_fab_change_size_collapse_motion_spec=0x7f02000d;
    public static final int mtrl_extended_fab_change_size_expand_motion_spec=0x7f02000e;
    public static final int mtrl_extended_fab_hide_motion_spec=0x7f02000f;
    public static final int mtrl_extended_fab_show_motion_spec=0x7f020010;
    public static final int mtrl_extended_fab_state_list_animator=0x7f020011;
    public static final int mtrl_fab_hide_motion_spec=0x7f020012;
    public static final int mtrl_fab_show_motion_spec=0x7f020013;
    public static final int mtrl_fab_transformation_sheet_collapse_spec=0x7f020014;
    public static final int mtrl_fab_transformation_sheet_expand_spec=0x7f020015;
  }
  public static final class attr {
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int OtpCursorColor=0x7f030000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int OtpCursorWidth=0x7f030001;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int OtpHideLineWhenFilled=0x7f030002;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int OtpItemCount=0x7f030003;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int OtpItemHeight=0x7f030004;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int OtpItemRadius=0x7f030005;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int OtpItemSpacing=0x7f030006;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int OtpItemWidth=0x7f030007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int OtpLineColor=0x7f030008;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int OtpLineWidth=0x7f030009;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int OtpMaskingChar=0x7f03000a;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int OtpRtlTextDirection=0x7f03000b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int OtpState_filled=0x7f03000c;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>line</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>2</td><td></td></tr>
     * <tr><td>rectangle</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int OtpViewType=0x7f03000d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int action=0x7f03000e;
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f03000f;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f030010;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f030011;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f030012;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f030013;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f030014;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f030015;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f030016;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f030017;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f030018;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f030019;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f03001a;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f03001b;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f03001c;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f03001d;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f03001e;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f03001f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f030020;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f030021;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f030022;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f030023;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f030024;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f030025;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f030026;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f030027;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f030028;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f030029;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f03002a;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f03002b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f03002c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f03002d;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f03002e;
    /**
     * Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int actionTextColorAlpha=0x7f03002f;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f030030;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f030031;
    /**
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int adjustable=0x7f030032;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int album_dropdown_count_color=0x7f030033;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int album_dropdown_title_color=0x7f030034;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int album_element_color=0x7f030035;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int album_emptyView=0x7f030036;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int album_emptyView_textColor=0x7f030037;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int album_thumbnail_placeholder=0x7f030038;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f030039;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f03003a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f03003b;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f03003c;
    /**
     * Whether the preference allows displaying divider on top
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAbove=0x7f03003d;
    /**
     * Whether a divider is allowed to draw after the last item
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAfterLastItem=0x7f03003e;
    /**
     * Whether the preference allows displaying divider below it
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerBelow=0x7f03003f;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f030040;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f030041;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f030042;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int altSrc=0x7f030043;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ambientEnabled=0x7f030044;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int amount=0x7f030045;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int animate_relativeTo=0x7f030046;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>left</td><td>ffffffff</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int animationDirection=0x7f030047;
    /**
     * Sets the enter and exit animations for a Snackbar.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>Mode that corresponds to the fade in and out animations.</td></tr>
     * <tr><td>slide</td><td>0</td><td>Mode that corresponds to the slide in and out animations.</td></tr>
     * </table>
     */
    public static final int animationMode=0x7f030048;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int appBarLayoutStyle=0x7f030049;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int applyMotionScene=0x7f03004a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>2</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>1</td><td></td></tr>
     * <tr><td>startVertical</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int arcMode=0x7f03004b;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int argType=0x7f03004c;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f03004d;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f03004e;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int attributeName=0x7f03004f;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f030050;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f030051;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f030052;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f030053;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f030054;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f030055;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>animateToEnd</td><td>4</td><td></td></tr>
     * <tr><td>animateToStart</td><td>3</td><td></td></tr>
     * <tr><td>jumpToEnd</td><td>2</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int autoTransition=0x7f030056;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f030057;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundColor=0x7f030058;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetBottom=0x7f030059;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetEnd=0x7f03005a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetStart=0x7f03005b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetTop=0x7f03005c;
    /**
     * Alpha level for the color that is overlaid on top of the background color. Ignored if
     * backgroundTint is set.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int backgroundOverlayColorAlpha=0x7f03005d;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f03005e;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f03005f;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f030060;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f030061;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BOTTOM_END</td><td>800055</td><td>Gravity.BOTTOM | Gravity.END</td></tr>
     * <tr><td>BOTTOM_START</td><td>800053</td><td>Gravity.BOTTOM | Gravity.START</td></tr>
     * <tr><td>TOP_END</td><td>800035</td><td>Gravity.TOP | Gravity.END</td></tr>
     * <tr><td>TOP_START</td><td>800033</td><td>Gravity.TOP | Gravity.START</td></tr>
     * </table>
     */
    public static final int badgeGravity=0x7f030062;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int badgeStyle=0x7f030063;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int badgeTextColor=0x7f030064;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f030065;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int bar_active_color=0x7f030066;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int bar_enabled=0x7f030067;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int bar_error_color=0x7f030068;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_height=0x7f030069;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int bar_inactive_color=0x7f03006a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_margin=0x7f03006b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_margin_bottom=0x7f03006c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_margin_left=0x7f03006d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_margin_right=0x7f03006e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_margin_top=0x7f03006f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int bar_success_color=0x7f030070;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int barrierAllowsGoneWidgets=0x7f030071;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int barrierDirection=0x7f030072;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barrierMargin=0x7f030073;
    /**
     * Whether the FAB should automatically hide when there is no space for it.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_autoHide=0x7f030074;
    /**
     * Whether the extended FAB should automatically shrink when there is no space for it.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_autoShrink=0x7f030075;
    /**
     * Whether this bottom sheet is draggable. If not, the app will have to supply different
     * means to expand and collapse the sheet
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_draggable=0x7f030076;
    /**
     * The top offset of the BottomSheet in the expanded-state when fitsToContent is false.
     * The default value is 0, which results in the sheet matching the parent's top.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int behavior_expandedOffset=0x7f030077;
    /**
     * Whether height of expanded sheet wraps content or not
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_fitToContents=0x7f030078;
    /**
     * The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false. Defaults to true half, 0.5, if not explicitly set. Ratio must be a
     * float value between 0 and 1 and produce a half-expanded state height larger than the
     * peek height for the half-expanded state to be operational
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int behavior_halfExpandedRatio=0x7f030079;
    /**
     * Whether this bottom sheet can be hidden by dragging it further downwards
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_hideable=0x7f03007a;
    /**
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int behavior_overlapTop=0x7f03007b;
    /**
     * The height of the bottom sheet when it is collapsed.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     */
    public static final int behavior_peekHeight=0x7f03007c;
    /**
     * Behavior properties will be saved and restored by evaluating each flag.
     * usage: app:behavior_saveFlags=”hideable|skipCollapsed”
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>ffffffff</td><td>This flag will preserve the all the aforementioned values on configuration change.</td></tr>
     * <tr><td>fitToContents</td><td>2</td><td>This flag will preserve the fitToContents boolean value on configuration change.</td></tr>
     * <tr><td>hideable</td><td>4</td><td>This flag will preserve the hideable boolean value on configuration change.</td></tr>
     * <tr><td>none</td><td>0</td><td>This flag will not preserve the aforementioned values on configuration change. The only
     * value preserved will be the positional state, e.g. collapsed, hidden, expanded, etc.
     * This is the default behavior.</td></tr>
     * <tr><td>peekHeight</td><td>1</td><td>This flag will preserve the peekHeight on configuration change.</td></tr>
     * <tr><td>skipCollapsed</td><td>8</td><td>This flag will preserve the skipCollapsed boolean value on configuration change.</td></tr>
     * </table>
     */
    public static final int behavior_saveFlags=0x7f03007d;
    /**
     * Skip the collapsed state once expanded; no effect unless it is hideable
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_skipCollapsed=0x7f03007e;
    /**
     * The width of the border around the FAB.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int borderWidth=0x7f03007f;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f030080;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomAppBarStyle=0x7f030081;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomNavigationStyle=0x7f030082;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetDialogTheme=0x7f030083;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetStyle=0x7f030084;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int bottomToolbar_apply_textColor=0x7f030085;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int bottomToolbar_bg=0x7f030086;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int bottomToolbar_preview_textColor=0x7f030087;
    /**
     * The color to use for the box's background color when in filled box mode.
     * If a non-stateful color resource is specified, default colors will be used for the hover
     * and disabled states.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxBackgroundColor=0x7f030088;
    /**
     * Whether the text input area should be drawn as a filled box, an outline box, or not as a box.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td>Filled box mode for the text input box.</td></tr>
     * <tr><td>none</td><td>0</td><td>Specifies that there should be no box set on the text input area.</td></tr>
     * <tr><td>outline</td><td>2</td><td>Outline box mode for the text input box.</td></tr>
     * </table>
     */
    public static final int boxBackgroundMode=0x7f030089;
    /**
     * Value to use for the EditText's collapsed top padding in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCollapsedPaddingTop=0x7f03008a;
    /**
     * The value to use for the box's bottom end corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomEnd=0x7f03008b;
    /**
     * The value to use for the box's bottom start corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomStart=0x7f03008c;
    /**
     * The value to use for the box's top end corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopEnd=0x7f03008d;
    /**
     * The value to use for the box's top start corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopStart=0x7f03008e;
    /**
     * The color to use for the box's stroke when in outline box mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxStrokeColor=0x7f03008f;
    /**
     * The color to use for the box's stroke in outline box mode when an error
     * is being displayed. If not set, it defaults to errorTextColor if on
     * error state, or to counterOverflowTextColor if on overflow state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxStrokeErrorColor=0x7f030090;
    /**
     * The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxStrokeWidth=0x7f030091;
    /**
     * The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxStrokeWidthFocused=0x7f030092;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int box_margin=0x7f030093;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int box_margin_bottom=0x7f030094;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int box_margin_left=0x7f030095;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int box_margin_right=0x7f030096;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int box_margin_top=0x7f030097;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int brightness=0x7f030098;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f030099;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f03009a;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f03009b;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f03009c;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f03009d;
    /**
     * Compat attr to load backported drawable types
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonCompat=0x7f03009e;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f03009f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int buttonIconDimen=0x7f0300a0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f0300a1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>icon_only</td><td>2</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * <tr><td>wide</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int buttonSize=0x7f0300a2;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f0300a3;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f0300a4;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f0300a5;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f0300a6;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cameraBearing=0x7f0300a7;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cameraMaxZoomPreference=0x7f0300a8;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cameraMinZoomPreference=0x7f0300a9;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cameraTargetLat=0x7f0300aa;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cameraTargetLng=0x7f0300ab;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cameraTilt=0x7f0300ac;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cameraZoom=0x7f0300ad;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int capture_textColor=0x7f0300ae;
    /**
     * Background color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardBackgroundColor=0x7f0300af;
    /**
     * Corner radius for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardCornerRadius=0x7f0300b0;
    /**
     * Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardElevation=0x7f0300b1;
    /**
     * Foreground color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardForegroundColor=0x7f0300b2;
    /**
     * Maximum Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardMaxElevation=0x7f0300b3;
    /**
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardPreventCornerOverlap=0x7f0300b4;
    /**
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardUseCompatPadding=0x7f0300b5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int cardViewStyle=0x7f0300b6;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccpDialog_allowSearch=0x7f0300b7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ccpDialog_background=0x7f0300b8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ccpDialog_backgroundColor=0x7f0300b9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ccpDialog_fastScroller_bubbleColor=0x7f0300ba;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ccpDialog_fastScroller_bubbleTextAppearance=0x7f0300bb;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ccpDialog_fastScroller_handleColor=0x7f0300bc;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccpDialog_initialScrollToSelection=0x7f0300bd;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccpDialog_keyboardAutoPopup=0x7f0300be;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ccpDialog_searchEditTextTint=0x7f0300bf;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccpDialog_showCloseIcon=0x7f0300c0;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccpDialog_showFastScroller=0x7f0300c1;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccpDialog_showFlag=0x7f0300c2;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccpDialog_showNameCode=0x7f0300c3;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccpDialog_showPhoneCode=0x7f0300c4;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccpDialog_showTitle=0x7f0300c5;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ccpDialog_textColor=0x7f0300c6;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_areaCodeDetectedCountry=0x7f0300c7;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ccp_arrowColor=0x7f0300c8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int ccp_arrowSize=0x7f0300c9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_autoDetectCountry=0x7f0300ca;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_autoDetectLanguage=0x7f0300cb;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_autoFormatNumber=0x7f0300cc;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_clickable=0x7f0300cd;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ccp_contentColor=0x7f0300ce;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>LOCALE_NETWORK</td><td>20</td><td></td></tr>
     * <tr><td>LOCALE_NETWORK_SIM</td><td>141</td><td></td></tr>
     * <tr><td>LOCALE_ONLY</td><td>3</td><td></td></tr>
     * <tr><td>LOCALE_SIM</td><td>1f</td><td></td></tr>
     * <tr><td>LOCALE_SIM_NETWORK</td><td>138</td><td></td></tr>
     * <tr><td>NETWORK_LOCALE</td><td>17</td><td></td></tr>
     * <tr><td>NETWORK_LOCALE_SIM</td><td>e7</td><td></td></tr>
     * <tr><td>NETWORK_ONLY</td><td>2</td><td></td></tr>
     * <tr><td>NETWORK_SIM</td><td>15</td><td></td></tr>
     * <tr><td>NETWORK_SIM_LOCALE</td><td>d5</td><td></td></tr>
     * <tr><td>SIM_LOCALE</td><td>d</td><td></td></tr>
     * <tr><td>SIM_LOCALE_NETWORK</td><td>84</td><td></td></tr>
     * <tr><td>SIM_NETWORK</td><td>c</td><td></td></tr>
     * <tr><td>SIM_NETWORK_LOCALE</td><td>7b</td><td></td></tr>
     * <tr><td>SIM_ONLY</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int ccp_countryAutoDetectionPref=0x7f0300cf;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ccp_countryPreference=0x7f0300d0;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ccp_customMasterCountries=0x7f0300d1;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>AFRIKAANS</td><td>0</td><td></td></tr>
     * <tr><td>ARABIC</td><td>1</td><td></td></tr>
     * <tr><td>BENGALI</td><td>2</td><td></td></tr>
     * <tr><td>CHINESE_SIMPLIFIED</td><td>3</td><td></td></tr>
     * <tr><td>CHINESE_TRADITIONAL</td><td>4</td><td></td></tr>
     * <tr><td>CZECH</td><td>5</td><td></td></tr>
     * <tr><td>DANISH</td><td>6</td><td></td></tr>
     * <tr><td>DUTCH</td><td>7</td><td></td></tr>
     * <tr><td>ENGLISH</td><td>8</td><td></td></tr>
     * <tr><td>FARSI</td><td>9</td><td></td></tr>
     * <tr><td>FRENCH</td><td>a</td><td></td></tr>
     * <tr><td>GERMAN</td><td>b</td><td></td></tr>
     * <tr><td>GREEK</td><td>c</td><td></td></tr>
     * <tr><td>GUJARATI</td><td>d</td><td></td></tr>
     * <tr><td>HEBREW</td><td>e</td><td></td></tr>
     * <tr><td>HINDI</td><td>f</td><td></td></tr>
     * <tr><td>INDONESIA</td><td>10</td><td></td></tr>
     * <tr><td>ITALIAN</td><td>11</td><td></td></tr>
     * <tr><td>JAPANESE</td><td>12</td><td></td></tr>
     * <tr><td>KAZAKH</td><td>13</td><td></td></tr>
     * <tr><td>KOREAN</td><td>14</td><td></td></tr>
     * <tr><td>MARATHI</td><td>15</td><td></td></tr>
     * <tr><td>POLISH</td><td>16</td><td></td></tr>
     * <tr><td>PORTUGUESE</td><td>17</td><td></td></tr>
     * <tr><td>PUNJABI</td><td>18</td><td></td></tr>
     * <tr><td>RUSSIAN</td><td>19</td><td></td></tr>
     * <tr><td>SLOVAK</td><td>1a</td><td></td></tr>
     * <tr><td>SLOVENIAN</td><td>1b</td><td></td></tr>
     * <tr><td>SPANISH</td><td>1c</td><td></td></tr>
     * <tr><td>SWEDISH</td><td>1d</td><td></td></tr>
     * <tr><td>TAGALOG</td><td>1e</td><td></td></tr>
     * <tr><td>TURKISH</td><td>1f</td><td></td></tr>
     * <tr><td>UKRAINIAN</td><td>20</td><td></td></tr>
     * <tr><td>URDU</td><td>21</td><td></td></tr>
     * <tr><td>UZBEK</td><td>22</td><td></td></tr>
     * <tr><td>VIETNAMESE</td><td>23</td><td></td></tr>
     * </table>
     */
    public static final int ccp_defaultLanguage=0x7f0300d2;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ccp_defaultNameCode=0x7f0300d3;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ccp_defaultPhoneCode=0x7f0300d4;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ccp_excludedCountries=0x7f0300d5;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ccp_flagBorderColor=0x7f0300d6;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_hintExampleNumber=0x7f0300d7;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>FIXED_LINE</td><td>1</td><td></td></tr>
     * <tr><td>FIXED_LINE_OR_MOBILE</td><td>2</td><td></td></tr>
     * <tr><td>MOBILE</td><td>0</td><td></td></tr>
     * <tr><td>PAGER</td><td>8</td><td></td></tr>
     * <tr><td>PERSONAL_NUMBER</td><td>7</td><td></td></tr>
     * <tr><td>PREMIUM_RATE</td><td>4</td><td></td></tr>
     * <tr><td>SHARED_COST</td><td>5</td><td></td></tr>
     * <tr><td>TOLL_FREE</td><td>3</td><td></td></tr>
     * <tr><td>UAN</td><td>9</td><td></td></tr>
     * <tr><td>UNKNOWN</td><td>b</td><td></td></tr>
     * <tr><td>VOICEMAIL</td><td>a</td><td></td></tr>
     * <tr><td>VOIP</td><td>6</td><td></td></tr>
     * </table>
     */
    public static final int ccp_hintExampleNumberType=0x7f0300d8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_internationalFormattingOnly=0x7f0300d9;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int ccp_padding=0x7f0300da;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_rememberLastSelection=0x7f0300db;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ccp_selectionMemoryTag=0x7f0300dc;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_showArrow=0x7f0300dd;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_showFlag=0x7f0300de;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_showFullName=0x7f0300df;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_showNameCode=0x7f0300e0;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_showPhoneCode=0x7f0300e1;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>CENTER</td><td>0</td><td></td></tr>
     * <tr><td>LEFT</td><td>ffffffff</td><td></td></tr>
     * <tr><td>RIGHT</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int ccp_textGravity=0x7f0300e2;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int ccp_textSize=0x7f0300e3;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_useDummyEmojiForPreview=0x7f0300e4;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ccp_useFlagEmoji=0x7f0300e5;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chainUseRtl=0x7f0300e6;
    /**
     * Default style for CheckBoxPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkBoxPreferenceStyle=0x7f0300e7;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f0300e8;
    /**
     * The id of the child button that should be checked by default within this button group.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedButton=0x7f0300e9;
    /**
     * The id of the child chip that should be checked by default within this chip group.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedChip=0x7f0300ea;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedIcon=0x7f0300eb;
    /**
     * Deprecated. Use checkedIconVisible instead
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconEnabled=0x7f0300ec;
    /**
     * Check icon margin for Checkable Cards
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int checkedIconMargin=0x7f0300ed;
    /**
     * Check icon size for Checkable Cards
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int checkedIconSize=0x7f0300ee;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int checkedIconTint=0x7f0300ef;
    /**
     * Whether to show the checked icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconVisible=0x7f0300f0;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f0300f1;
    /**
     * Background color to apply to the chip.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipBackgroundColor=0x7f0300f2;
    /**
     * Corner radius to apply to the chip's shape.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipCornerRadius=0x7f0300f3;
    /**
     * Padding at the end of the chip, after the close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipEndPadding=0x7f0300f4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipGroupStyle=0x7f0300f5;
    /**
     * Icon drawable to display at the start of the chip.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipIcon=0x7f0300f6;
    /**
     * Deprecated. Use chipIconVisible instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconEnabled=0x7f0300f7;
    /**
     * Size of the chip's icon and checked icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipIconSize=0x7f0300f8;
    /**
     * Tint to apply to the chip icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipIconTint=0x7f0300f9;
    /**
     * Whether to show the chip icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconVisible=0x7f0300fa;
    /**
     * Min height to apply to the chip. Total height includes stroke width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipMinHeight=0x7f0300fb;
    /**
     * Minimum size of chip's touch target, by default, Android recommended 48dp.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipMinTouchTargetSize=0x7f0300fc;
    /**
     * Horizontal and vertical spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacing=0x7f0300fd;
    /**
     * Horizontal spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingHorizontal=0x7f0300fe;
    /**
     * Vertical spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingVertical=0x7f0300ff;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStandaloneStyle=0x7f030100;
    /**
     * Padding at the start of the chip, before the icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStartPadding=0x7f030101;
    /**
     * Stroke color to apply to the chip's outline.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipStrokeColor=0x7f030102;
    /**
     * Stroke width to apply to the chip's outline.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStrokeWidth=0x7f030103;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStyle=0x7f030104;
    /**
     * Do not expose publicly because there is no public getter/setter and the user doesn't need
     * to configure this.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipSurfaceColor=0x7f030105;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int circleCrop=0x7f030106;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int circleRadius=0x7f030107;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int circularProgressIndicatorStyle=0x7f030108;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int civ_border_color=0x7f030109;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int civ_border_overlay=0x7f03010a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int civ_border_width=0x7f03010b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int civ_circle_background_color=0x7f03010c;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>jumpToEnd</td><td>100</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1000</td><td></td></tr>
     * <tr><td>toggle</td><td>11</td><td></td></tr>
     * <tr><td>transitionToEnd</td><td>1</td><td></td></tr>
     * <tr><td>transitionToStart</td><td>10</td><td></td></tr>
     * </table>
     */
    public static final int clickAction=0x7f03010d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int clockFaceBackgroundColor=0x7f03010e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int clockHandColor=0x7f03010f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int clockIcon=0x7f030110;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int clockNumberTextColor=0x7f030111;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f030112;
    /**
     * Deprecated. Use closeIconVisible instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconEnabled=0x7f030113;
    /**
     * Padding at the end of the close icon, before the end of the chip. If close icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconEndPadding=0x7f030114;
    /**
     * Size of the chip's close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconSize=0x7f030115;
    /**
     * Padding at the start of the close icon, after the text. If close icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconStartPadding=0x7f030116;
    /**
     * Tint to apply to the chip's close icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int closeIconTint=0x7f030117;
    /**
     * Whether to show the close icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconVisible=0x7f030118;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f030119;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f03011a;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f03011b;
    /**
     * FAB size when collapsed.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int collapsedSize=0x7f03011c;
    /**
     * Specifies how the title should be positioned when collapsed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int collapsedTitleGravity=0x7f03011d;
    /**
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapsedTitleTextAppearance=0x7f03011e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapsingToolbarLayoutStyle=0x7f03011f;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f030120;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f030121;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f030122;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f030123;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f030124;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f030125;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f030126;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f030127;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int colorOnBackground=0x7f030128;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnError=0x7f030129;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnPrimary=0x7f03012a;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnPrimarySurface=0x7f03012b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnSecondary=0x7f03012c;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnSurface=0x7f03012d;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f03012e;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f03012f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimarySurface=0x7f030130;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryVariant=0x7f030131;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>dark</td><td>0</td><td></td></tr>
     * <tr><td>light</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int colorScheme=0x7f030132;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSecondary=0x7f030133;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSecondaryVariant=0x7f030134;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSurface=0x7f030135;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f030136;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * <tr><td>inline</td><td>1</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int com_facebook_auxiliary_view_position=0x7f030137;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int com_facebook_confirm_logout=0x7f030138;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int com_facebook_foreground_color=0x7f030139;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int com_facebook_horizontal_alignment=0x7f03013a;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int com_facebook_is_cropped=0x7f03013b;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int com_facebook_login_text=0x7f03013c;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int com_facebook_logout_text=0x7f03013d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int com_facebook_object_id=0x7f03013e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>open_graph</td><td>1</td><td></td></tr>
     * <tr><td>page</td><td>2</td><td></td></tr>
     * <tr><td>unknown</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int com_facebook_object_type=0x7f03013f;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>large</td><td>fffffffc</td><td></td></tr>
     * <tr><td>normal</td><td>fffffffd</td><td></td></tr>
     * <tr><td>small</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int com_facebook_preset_size=0x7f030140;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>box_count</td><td>2</td><td></td></tr>
     * <tr><td>button</td><td>1</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int com_facebook_style=0x7f030141;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>automatic</td><td>0</td><td></td></tr>
     * <tr><td>display_always</td><td>1</td><td></td></tr>
     * <tr><td>never_display</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int com_facebook_tooltip_mode=0x7f030142;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f030143;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int constraintSet=0x7f030144;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int constraintSetEnd=0x7f030145;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int constraintSetStart=0x7f030146;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int constraint_referenced_ids=0x7f030147;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int constraints=0x7f030148;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int content=0x7f030149;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f03014a;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f03014b;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f03014c;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f03014d;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f03014e;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f03014f;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f030150;
    /**
     * Inner padding between the edges of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPadding=0x7f030151;
    /**
     * Inner padding between the bottom edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingBottom=0x7f030152;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingEnd=0x7f030153;
    /**
     * Inner padding between the left edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingLeft=0x7f030154;
    /**
     * Inner padding between the right edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingRight=0x7f030155;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingStart=0x7f030156;
    /**
     * Inner padding between the top edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingTop=0x7f030157;
    /**
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int contentScrim=0x7f030158;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int contrast=0x7f030159;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f03015a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f03015b;
    /**
     * Corner family to be used in the ShapeAppearance. All corners default to this value
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamily=0x7f03015c;
    /**
     * Bottom left corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyBottomLeft=0x7f03015d;
    /**
     * Bottom right corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyBottomRight=0x7f03015e;
    /**
     * Top left corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyTopLeft=0x7f03015f;
    /**
     * Top right corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyTopRight=0x7f030160;
    /**
     * Specifies the radius for the corners of the button. Default is 0, for non-rounded corners.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cornerRadius=0x7f030161;
    /**
     * Corner size to be used in the ShapeAppearance. All corners default to this value
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSize=0x7f030162;
    /**
     * Bottom left corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeBottomLeft=0x7f030163;
    /**
     * Bottom right corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeBottomRight=0x7f030164;
    /**
     * Top left corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeTopLeft=0x7f030165;
    /**
     * Top right corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeTopRight=0x7f030166;
    /**
     * Whether the layout is laid out as if the character counter will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int counterEnabled=0x7f030167;
    /**
     * The max length to display in the character counter.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int counterMaxLength=0x7f030168;
    /**
     * TextAppearance of the character counter when the text is longer than the max.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterOverflowTextAppearance=0x7f030169;
    /**
     * Text color of the character counter when the text is longer than the max.
     * If set, this takes precedence over counterOverflowTextAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterOverflowTextColor=0x7f03016a;
    /**
     * TextAppearance of the character counter.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterTextAppearance=0x7f03016b;
    /**
     * Text color of the character counter.
     * If set, this takes precedence over counterTextAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterTextColor=0x7f03016c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int crossfade=0x7f03016d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int currentState=0x7f03016e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int curveFit=0x7f03016f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int customBoolean=0x7f030170;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int customColorDrawableValue=0x7f030171;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int customColorValue=0x7f030172;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int customDimension=0x7f030173;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int customFloatValue=0x7f030174;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int customIntegerValue=0x7f030175;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f030176;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int customPixelDimension=0x7f030177;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int customStringValue=0x7f030178;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int data=0x7f030179;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dataPattern=0x7f03017a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dayInvalidStyle=0x7f03017b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int daySelectedStyle=0x7f03017c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dayStyle=0x7f03017d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dayTodayStyle=0x7f03017e;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int defaultDuration=0x7f03017f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int defaultNavHost=0x7f030180;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f030181;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int defaultState=0x7f030182;
    /**
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int defaultValue=0x7f030183;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int deltaPolarAngle=0x7f030184;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int deltaPolarRadius=0x7f030185;
    /**
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dependency=0x7f030186;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int deriveConstraintsFrom=0x7f030187;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int destination=0x7f030188;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogCornerRadius=0x7f030189;
    /**
     * The icon for the dialog.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogIcon=0x7f03018a;
    /**
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogLayout=0x7f03018b;
    /**
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogMessage=0x7f03018c;
    /**
     * Default style for DialogPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogPreferenceStyle=0x7f03018d;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f03018e;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f03018f;
    /**
     * The title in the dialog.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogTitle=0x7f030190;
    /**
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableDependentsState=0x7f030191;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f030192;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f030193;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f030194;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f030195;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f030196;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>dragDown</td><td>1</td><td></td></tr>
     * <tr><td>dragEnd</td><td>5</td><td></td></tr>
     * <tr><td>dragLeft</td><td>2</td><td></td></tr>
     * <tr><td>dragRight</td><td>3</td><td></td></tr>
     * <tr><td>dragStart</td><td>4</td><td></td></tr>
     * <tr><td>dragUp</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int dragDirection=0x7f030197;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int dragScale=0x7f030198;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int dragThreshold=0x7f030199;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     */
    public static final int drawPath=0x7f03019a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableBottomCompat=0x7f03019b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableEndCompat=0x7f03019c;
    /**
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableLeftCompat=0x7f03019d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableRightCompat=0x7f03019e;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f03019f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableStartCompat=0x7f0301a0;
    /**
     * Tint to apply to the compound (left, top, etc.) drawables.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int drawableTint=0x7f0301a1;
    /**
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int drawableTintMode=0x7f0301a2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableTopCompat=0x7f0301a3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f0301a4;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f0301a5;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f0301a6;
    /**
     * Default style for DropDownPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropdownPreferenceStyle=0x7f0301a7;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int duration=0x7f0301a8;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f0301a9;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f0301aa;
    /**
     * Default style for EditTextPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextPreferenceStyle=0x7f0301ab;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f0301ac;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f0301ad;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int elevationOverlayColor=0x7f0301ae;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int elevationOverlayEnabled=0x7f0301af;
    /**
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enableCopying=0x7f0301b0;
    /**
     * Whether the Preference is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enabled=0x7f0301b1;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int endColor=0x7f0301b2;
    /**
     * Whether the end icon is checkable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int endIconCheckable=0x7f0301b3;
    /**
     * Text to set as the content description for the end icon.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int endIconContentDescription=0x7f0301b4;
    /**
     * Drawable to use for the end icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int endIconDrawable=0x7f0301b5;
    /**
     * The end icon mode of the TextInputLayout. It will display one of the end icons detailed
     * below, or no end icon.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clear_text</td><td>2</td><td>The view will display a clear text button while the EditText contains input.</td></tr>
     * <tr><td>custom</td><td>ffffffff</td><td>The view will display a custom icon specified by the user.</td></tr>
     * <tr><td>dropdown_menu</td><td>3</td><td>The view will display a toggle that displays/hides a dropdown menu.</td></tr>
     * <tr><td>none</td><td>0</td><td>No end icon.</td></tr>
     * <tr><td>password_toggle</td><td>1</td><td>The view will display a toggle when the EditText has a password.</td></tr>
     * </table>
     */
    public static final int endIconMode=0x7f0301b6;
    /**
     * Tint color to use for the end icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int endIconTint=0x7f0301b7;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int endIconTintMode=0x7f0301b8;
    /**
     * Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.
     * Not all usages of new attributes are problematic in the context of a legacy app theme. You
     * should only use this flag if a particular usage is known to cause a visual glitch or crash.
     * For example, tinting a vector drawable with a non-existent theme attribute is known to
     * crash on pre-21 devices.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceMaterialTheme=0x7f0301b9;
    /**
     * Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceTextAppearance=0x7f0301ba;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ensureMinTouchTargetSize=0x7f0301bb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int enterAnim=0x7f0301bc;
    /**
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entries=0x7f0301bd;
    /**
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entryValues=0x7f0301be;
    /**
     * Text to set as the content description for the error view.
     * Should be set when the error message has special characters that a
     * screen reader is not able to announce properly.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int errorContentDescription=0x7f0301bf;
    /**
     * Whether the layout is laid out as if an error will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int errorEnabled=0x7f0301c0;
    /**
     * End icon to be shown when an error is displayed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorIconDrawable=0x7f0301c1;
    /**
     * Tint color to use for the error icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorIconTint=0x7f0301c2;
    /**
     * Blending mode used to apply the error icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int errorIconTintMode=0x7f0301c3;
    /**
     * TextAppearance of any error message displayed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorTextAppearance=0x7f0301c4;
    /**
     * Text color for any error message displayed.
     * If set, this takes precedence over errorTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int errorTextColor=0x7f0301c5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int exitAnim=0x7f0301c6;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f0301c7;
    /**
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int expanded=0x7f0301c8;
    /**
     * Whether the hint should occupy the input area when the text field is
     * unpopulated and not focused.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int expandedHintEnabled=0x7f0301c9;
    /**
     * Specifies how the title should be positioned when expanded.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int expandedTitleGravity=0x7f0301ca;
    /**
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMargin=0x7f0301cb;
    /**
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginBottom=0x7f0301cc;
    /**
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginEnd=0x7f0301cd;
    /**
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginStart=0x7f0301ce;
    /**
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginTop=0x7f0301cf;
    /**
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandedTitleTextAppearance=0x7f0301d0;
    /**
     * Motion spec for extend animation. This should be a MotionSpec resource.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int extendMotionSpec=0x7f0301d1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int extendedFloatingActionButtonStyle=0x7f0301d2;
    /**
     * The alignment of the fab relative to the BottomAppBar.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td>Mode that aligns the fab to the center.</td></tr>
     * <tr><td>end</td><td>1</td><td>Mode that aligns the fab to the end.</td></tr>
     * </table>
     */
    public static final int fabAlignmentMode=0x7f0301d3;
    /**
     * The animation mode that should be used when the fab animates between alignment modes.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>scale</td><td>0</td><td>Mode that scales the fab down to a point, moves it, then scales the fab back to its normal size.</td></tr>
     * <tr><td>slide</td><td>1</td><td>Mode that slides the fab from one alignment mode to the next.</td></tr>
     * </table>
     */
    public static final int fabAnimationMode=0x7f0301d4;
    /**
     * The margin between the semi-circular cradle for the fab and the fab.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleMargin=0x7f0301d5;
    /**
     * The radius of the rounded corners on each side of the cradle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleRoundedCornerRadius=0x7f0301d6;
    /**
     * The vertical offset between the fab from the cradle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleVerticalOffset=0x7f0301d7;
    /**
     * Custom size for the FAB. If this is set, fabSize will be ignored.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCustomSize=0x7f0301d8;
    /**
     * Size for the FAB. If fabCustomSize is set, this will be ignored.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     */
    public static final int fabSize=0x7f0301d9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f0301da;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f0301db;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f0301dc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f0301dd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f0301de;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fastscroll__bubbleColor=0x7f0301df;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastscroll__bubbleTextAppearance=0x7f0301e0;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fastscroll__handleColor=0x7f0301e1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastscroll__style=0x7f0301e2;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int firstBaselineToTopHeight=0x7f0301e3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int floatingActionButtonStyle=0x7f0301e4;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_firstHorizontalBias=0x7f0301e5;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_firstHorizontalStyle=0x7f0301e6;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_firstVerticalBias=0x7f0301e7;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_firstVerticalStyle=0x7f0301e8;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int flow_horizontalAlign=0x7f0301e9;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_horizontalBias=0x7f0301ea;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int flow_horizontalGap=0x7f0301eb;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_horizontalStyle=0x7f0301ec;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_lastHorizontalBias=0x7f0301ed;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_lastHorizontalStyle=0x7f0301ee;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_lastVerticalBias=0x7f0301ef;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_lastVerticalStyle=0x7f0301f0;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int flow_maxElementsWrap=0x7f0301f1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int flow_padding=0x7f0301f2;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int flow_verticalAlign=0x7f0301f3;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_verticalBias=0x7f0301f4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int flow_verticalGap=0x7f0301f5;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_verticalStyle=0x7f0301f6;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int flow_wrapMode=0x7f0301f7;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f0301f8;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f0301f9;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f0301fa;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f0301fb;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f0301fc;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f0301fd;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f0301fe;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f0301ff;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f030200;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f030201;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f030202;
    /**
     * Do not expose publicly, used by ForegroundLinearLayout but never set by any style.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int foregroundInsidePadding=0x7f030203;
    /**
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fragment=0x7f030204;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int framePosition=0x7f030205;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f030206;
    /**
     * Sets whether this bottom sheet should adjust it's position based on the system gesture area
     * on Android Q and above. Value is false (insets respected) by default.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int gestureInsetBottomIgnored=0x7f030207;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f030208;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int graph=0x7f030209;
    /**
     * The color of the slider's halo.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int haloColor=0x7f03020a;
    /**
     * The radius of the halo.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int haloRadius=0x7f03020b;
    /**
     * Layout resource to inflate as the header
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int headerLayout=0x7f03020c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f03020d;
    /**
     * The text to display as helper text underneath the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int helperText=0x7f03020e;
    /**
     * Whether the layout's helper text functionality is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int helperTextEnabled=0x7f03020f;
    /**
     * TextAppearance of the helper text displayed underneath the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int helperTextTextAppearance=0x7f030210;
    /**
     * Text color of the helper text displayed underneath the text input area.
     * If set, this takes precedence over helperTextTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int helperTextTextColor=0x7f030211;
    /**
     * The animation behavior to hide the indicator and track.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Collapses from the top edge to the bottom edge for the linear type;
     * collapses from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; disappears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Collapses from the bottom edge to the top edge for the linear type;
     * collapses from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     */
    public static final int hideAnimationBehavior=0x7f030212;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hideMotionSpec=0x7f030213;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f030214;
    /**
     * Whether the BottomAppBar should hide when a NestedScrollView is scrolled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnScroll=0x7f030215;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hide_otp=0x7f030216;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hide_otp_drawable=0x7f030217;
    /**
     * Whether to animate hint state changes.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintAnimationEnabled=0x7f030218;
    /**
     * Whether the layout's floating label functionality is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintEnabled=0x7f030219;
    /**
     * TextAppearance of the hint in the collapsed floating label.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hintTextAppearance=0x7f03021a;
    /**
     * Text color of the hint in the collapsed floating label.
     * If set, this takes precedence over hintTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int hintTextColor=0x7f03021b;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f03021c;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f03021d;
    /**
     * Offset moves the badge towards the center of its anchor.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int horizontalOffset=0x7f03021e;
    /**
     * TranslationZ value for the FAB when hovered, focused, or hovered and focused.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int hoveredFocusedTranslationZ=0x7f03021f;
    /**
     * Icon drawable to display at the start of this view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f030220;
    /**
     * Padding at the end of the icon, before the text. If icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconEndPadding=0x7f030221;
    /**
     * Specifies how the icon should be positioned on the X axis.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td>Push icon to the end of the button.</td></tr>
     * <tr><td>start</td><td>1</td><td>Push icon to the start of the button.</td></tr>
     * <tr><td>textEnd</td><td>4</td><td>Push the icon to the end of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textStart</td><td>2</td><td>Push the icon to the start of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textTop</td><td>20</td><td>Push the icon to the top of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>top</td><td>10</td><td>Push the icon to the top of the button.</td></tr>
     * </table>
     */
    public static final int iconGravity=0x7f030222;
    /**
     * Padding between icon and button text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconPadding=0x7f030223;
    /**
     * Specifies the width and height to use for the icon drawable.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconSize=0x7f030224;
    /**
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconSpaceReserved=0x7f030225;
    /**
     * Padding at the start of the icon, after the start of the chip. If icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconStartPadding=0x7f030226;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f030227;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f030228;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f030229;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int imageAspectRatio=0x7f03022a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjust_height</td><td>2</td><td></td></tr>
     * <tr><td>adjust_width</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int imageAspectRatioAdjust=0x7f03022b;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f03022c;
    /**
     * The animation style of the indeterminate mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>seamless</td><td>0</td><td>The track will be filled with connected segments in different colors.
     * This type is only available when there are three or more indicator
     * colors. The color of the new segment will alternate.</td></tr>
     * <tr><td>spacing</td><td>1</td><td>There will be two segments with spacing between each other swiping the
     * track in each cycle. They will be in the same color, which will
     * alternate between cycles.</td></tr>
     * </table>
     */
    public static final int indeterminateAnimationType=0x7f03022d;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f03022e;
    /**
     * The indicator color (or colors in an array). By default, it uses theme
     * primary color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int indicatorColor=0x7f03022f;
    /**
     * The direction in which the circular indicator progresses, in the
     * determinate mode, and is animated, in the indeterminate mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clockwise</td><td>0</td><td>In the indeterminate mode, the spinner will spin clockwise; in the
     * determinate mode, the indicator will progress from the top (12 o'clock)
     * clockwise.</td></tr>
     * <tr><td>counterclockwise</td><td>1</td><td>In the indeterminate mode, the spinner will spin counter-clockwise; in
     * the determinate mode, the indicator will progress from the top (12
     * o'clock) counter-clockwise.</td></tr>
     * </table>
     */
    public static final int indicatorDirectionCircular=0x7f030230;
    /**
     * The direction in which the linear indicator progresses, in the determinate
     * mode, and is animated, in the indeterminate mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>endToStart</td><td>3</td><td>Animated from the end position to the start position of the track.
     * This will be same as the rightToLeft for API before 17.</td></tr>
     * <tr><td>leftToRight</td><td>0</td><td>Animated from the left end to the right end of the track.</td></tr>
     * <tr><td>rightToLeft</td><td>1</td><td>Animated from the right end to the left end of the track.</td></tr>
     * <tr><td>startToEnd</td><td>2</td><td>Animated from the start position to the end position of the track.
     * This will be same as the leftToRight for API before 17.</td></tr>
     * </table>
     */
    public static final int indicatorDirectionLinear=0x7f030231;
    /**
     * The extra space from the outer edge of the indicator to the edge of the
     * canvas. Ignored for linear progress indicator.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int indicatorInset=0x7f030232;
    /**
     * Defines the size (outer diameter) of the circular progress indicator. This
     * uses the central line of the indicator as reference. Ignored for linear
     * progress indicator.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int indicatorSize=0x7f030233;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f030234;
    /**
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int initialExpandedChildrenCount=0x7f030235;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int insetForeground=0x7f030236;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f030237;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isMaterialTheme=0x7f030238;
    /**
     * Whether the Preference is visible. By default, this is set to true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isPreferenceVisible=0x7f030239;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int item_checkCircle_backgroundColor=0x7f03023a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int item_checkCircle_borderColor=0x7f03023b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int item_placeholder=0x7f03023c;
    /**
     * A background drawable to use for navigation items. If this is set, this overrides the
     * default background drawable for items and the itemShape* attributes will be ignored
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemBackground=0x7f03023d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemFillColor=0x7f03023e;
    /**
     * Horizontal padding (left and right) of navigation items, around the icon & text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemHorizontalPadding=0x7f03023f;
    /**
     * Whether the items translate horizontally when in "selected" label visibility mode.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int itemHorizontalTranslationEnabled=0x7f030240;
    /**
     * Padding between the icon and the text for navigation items that display an icon
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconPadding=0x7f030241;
    /**
     * The size of the icon navigation items that display an icon
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconSize=0x7f030242;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemIconTint=0x7f030243;
    /**
     * Makes the TextView of the item text be at most this many lines tall.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int itemMaxLines=0x7f030244;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f030245;
    /**
     * The ColorStateList to use for a ripple background. This only exists because creating
     * ripples in drawable xml based on theme colors is not supported pre-23. This will be ignored
     * if itemBackground is set.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemRippleColor=0x7f030246;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemShapeAppearance=0x7f030247;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemShapeAppearanceOverlay=0x7f030248;
    /**
     * Fill color for the item background shape. Used if itemBackground isn't set and there is an
     * itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemShapeFillColor=0x7f030249;
    /**
     * Inset bottom margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetBottom=0x7f03024a;
    /**
     * Inset end margin for the item background shape. Used if itemBackground isn't set and there
     * and there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetEnd=0x7f03024b;
    /**
     * Inset start margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetStart=0x7f03024c;
    /**
     * Inset top margin for the item background shape. Used if itemBackground isn't set and there
     * is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetTop=0x7f03024d;
    /**
     * Horizontal spacing between two items being laid out.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemSpacing=0x7f03024e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemStrokeColor=0x7f03024f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemStrokeWidth=0x7f030250;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearance=0x7f030251;
    /**
     * The text appearance to apply to the active navigation item label. You should not set
     * android:textColor in itemTextAppearanceActive. Instead, set itemTextColor to a
     * ColorStateList to make the text color stateful.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceActive=0x7f030252;
    /**
     * The text appearance to apply to the inactive navigation item labels. Setting
     * android:textColor in itemTextAppearanceInactive will take precedence over android:textColor
     * in itemTextAppearanceActive. Instead, set itemTextColor with a ColorStateList to make
     * the text color stateful.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceInactive=0x7f030253;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemTextColor=0x7f030254;
    /**
     * The key to store the Preference value.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f030255;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>deltaRelative</td><td>0</td><td></td></tr>
     * <tr><td>parentRelative</td><td>2</td><td></td></tr>
     * <tr><td>pathRelative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int keyPositionType=0x7f030256;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keyboardIcon=0x7f030257;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f030258;
    /**
     * Determines if Slider should increase its default height to include space for the label.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>floating</td><td>0</td><td>Mode that draws the label floating above the bounds of this view.</td></tr>
     * <tr><td>gone</td><td>2</td><td>Mode that prevents the label from being drawn</td></tr>
     * <tr><td>withinBounds</td><td>1</td><td>Mode that draws the label within the bounds of the view.</td></tr>
     * </table>
     */
    public static final int labelBehavior=0x7f030259;
    /**
     * The style used for the label TooltipDrawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int labelStyle=0x7f03025a;
    /**
     * Whether navigation items display with a label, without a label, or with a label during
     * selected state. Can also be "auto", which uses the item count to determine whether to show
     * or hide the label.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Label behaves as "labeled" when there are 3 items or less, or "selected" when there are
     * 4 items or more.</td></tr>
     * <tr><td>labeled</td><td>1</td><td>Label is shown on all navigation items.</td></tr>
     * <tr><td>selected</td><td>0</td><td>Label is shown on the selected navigation item.</td></tr>
     * <tr><td>unlabeled</td><td>2</td><td>Label is not shown on any navigation items.</td></tr>
     * </table>
     */
    public static final int labelVisibilityMode=0x7f03025b;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lastBaselineToBottomHeight=0x7f03025c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int latLngBoundsNorthEastLatitude=0x7f03025d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int latLngBoundsNorthEastLongitude=0x7f03025e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int latLngBoundsSouthWestLatitude=0x7f03025f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int latLngBoundsSouthWestLongitude=0x7f030260;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int launchSingleTop=0x7f030261;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f030262;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layoutDescription=0x7f030263;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>honorRequest</td><td>1</td><td></td></tr>
     * <tr><td>ignoreRequest</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layoutDuringTransition=0x7f030264;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f030265;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f030266;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f030267;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f030268;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     */
    public static final int layout_collapseMode=0x7f030269;
    /**
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_collapseParallaxMultiplier=0x7f03026a;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int layout_constrainedHeight=0x7f03026b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int layout_constrainedWidth=0x7f03026c;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintBaseline_creator=0x7f03026d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintBaseline_toBaselineOf=0x7f03026e;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintBottom_creator=0x7f03026f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintBottom_toBottomOf=0x7f030270;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintBottom_toTopOf=0x7f030271;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_constraintCircle=0x7f030272;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintCircleAngle=0x7f030273;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_constraintCircleRadius=0x7f030274;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_constraintDimensionRatio=0x7f030275;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintEnd_toEndOf=0x7f030276;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintEnd_toStartOf=0x7f030277;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_constraintGuide_begin=0x7f030278;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_constraintGuide_end=0x7f030279;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintGuide_percent=0x7f03027a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHeight_default=0x7f03027b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHeight_max=0x7f03027c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHeight_min=0x7f03027d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintHeight_percent=0x7f03027e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintHorizontal_bias=0x7f03027f;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHorizontal_chainStyle=0x7f030280;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintHorizontal_weight=0x7f030281;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintLeft_creator=0x7f030282;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintLeft_toLeftOf=0x7f030283;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintLeft_toRightOf=0x7f030284;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintRight_creator=0x7f030285;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintRight_toLeftOf=0x7f030286;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintRight_toRightOf=0x7f030287;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintStart_toEndOf=0x7f030288;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintStart_toStartOf=0x7f030289;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_constraintTag=0x7f03028a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintTop_creator=0x7f03028b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintTop_toBottomOf=0x7f03028c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintTop_toTopOf=0x7f03028d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintVertical_bias=0x7f03028e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintVertical_chainStyle=0x7f03028f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintVertical_weight=0x7f030290;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintWidth_default=0x7f030291;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintWidth_max=0x7f030292;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintWidth_min=0x7f030293;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintWidth_percent=0x7f030294;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f030295;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_editor_absoluteX=0x7f030296;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_editor_absoluteY=0x7f030297;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginBottom=0x7f030298;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginEnd=0x7f030299;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginLeft=0x7f03029a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginRight=0x7f03029b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginStart=0x7f03029c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginTop=0x7f03029d;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f03029e;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f03029f;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>barrier</td><td>2</td><td></td></tr>
     * <tr><td>chains</td><td>4</td><td></td></tr>
     * <tr><td>dimensions</td><td>8</td><td></td></tr>
     * <tr><td>direct</td><td>1</td><td>direct, barriers, chains</td></tr>
     * <tr><td>graph</td><td>40</td><td></td></tr>
     * <tr><td>graph_wrap</td><td>80</td><td></td></tr>
     * <tr><td>groups</td><td>20</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>ratio</td><td>10</td><td></td></tr>
     * <tr><td>standard</td><td>7</td><td></td></tr>
     * </table>
     */
    public static final int layout_optimizationLevel=0x7f0302a0;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>noScroll</td><td>0</td><td>Disable scrolling on the view. This flag should not be combined with any of the other
     * scroll flags.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * <tr><td>snapMargins</td><td>20</td><td>An additional flag to be used with 'snap'. If set, the view will be snapped to its
     * top and bottom margins, as opposed to the edges of the view itself.</td></tr>
     * </table>
     */
    public static final int layout_scrollFlags=0x7f0302a1;
    /**
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_scrollInterpolator=0x7f0302a2;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int length=0x7f0302a3;
    /**
     * Whether the {@link AppBarLayout} should lift on scroll. If set to
     * true, the {@link AppBarLayout} will animate to the lifted, or
     * elevated, state when content is scrolled beneath it. Requires
     * `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
     * set on the scrolling sibling (e.g., `NestedScrollView`,
     * `RecyclerView`, etc.). Default is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int liftOnScroll=0x7f0302a4;
    /**
     * The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).
     * If this id is not set, the {@link AppBarLayout} will use the target view provided
     * by nested scrolling to determine whether it should be lifted.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int liftOnScrollTargetViewId=0x7f0302a5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int limitBoundsTo=0x7f0302a6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineHeight=0x7f0302a7;
    /**
     * Vertical Spacing between two lines of items being laid out.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineSpacing=0x7f0302a8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int linearProgressIndicatorStyle=0x7f0302a9;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f0302aa;
    /**
     * Animated Drawable to use for single choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorMultipleAnimated=0x7f0302ab;
    /**
     * Animated Drawable to use for multiple choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorSingleAnimated=0x7f0302ac;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f0302ad;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f0302ae;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f0302af;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f0302b0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f0302b1;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f0302b2;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f0302b3;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f0302b4;
    /**
     * The preferred padding along the end edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingEnd=0x7f0302b5;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f0302b6;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f0302b7;
    /**
     * The preferred padding along the start edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingStart=0x7f0302b8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int liteMode=0x7f0302b9;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f0302ba;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f0302bb;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>hybrid</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>normal</td><td>1</td><td></td></tr>
     * <tr><td>satellite</td><td>2</td><td></td></tr>
     * <tr><td>terrain</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int mapType=0x7f0302bc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogBodyTextStyle=0x7f0302bd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTheme=0x7f0302be;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTitleIconStyle=0x7f0302bf;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTitlePanelStyle=0x7f0302c0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTitleTextStyle=0x7f0302c1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonOutlinedStyle=0x7f0302c2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonStyle=0x7f0302c3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonToggleGroupStyle=0x7f0302c4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarDay=0x7f0302c5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarFullscreenTheme=0x7f0302c6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderCancelButton=0x7f0302c7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderConfirmButton=0x7f0302c8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderDivider=0x7f0302c9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderLayout=0x7f0302ca;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderSelection=0x7f0302cb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderTitle=0x7f0302cc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderToggleButton=0x7f0302cd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarMonth=0x7f0302ce;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarMonthNavigationButton=0x7f0302cf;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarStyle=0x7f0302d0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarTheme=0x7f0302d1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarYearNavigationButton=0x7f0302d2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCardViewStyle=0x7f0302d3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int materialCircleRadius=0x7f0302d4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialClockStyle=0x7f0302d5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialThemeOverlay=0x7f0302d6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialTimePickerStyle=0x7f0302d7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialTimePickerTheme=0x7f0302d8;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int maxAcceleration=0x7f0302d9;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxActionInlineWidth=0x7f0302da;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f0302db;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maxCharacterCount=0x7f0302dc;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxHeight=0x7f0302dd;
    /**
     * Maximum icon image size.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxImageSize=0x7f0302de;
    /**
     * The maximum number of lines to display in the expanded state. Experimental Feature.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maxLines=0x7f0302df;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int maxVelocity=0x7f0302e0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxWidth=0x7f0302e1;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f0302e2;
    /**
     * Menu resource to inflate to be shown in the toolbar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int menu=0x7f0302e3;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int min=0x7f0302e4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minHeight=0x7f0302e5;
    /**
     * The minimum time, in milliseconds, that the requested hide action will
     * wait to start once show action is started. If set to zero or negative
     * values (-1 as default), the requested hide action will start immediately.
     * This value is capped to a limit defined in ProgressIndicator class.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int minHideDelay=0x7f0302e6;
    /**
     * If there is more than one thumb, and the slider is
     * not discrete the thumbs will be separated by this dimen
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minSeparation=0x7f0302e7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minTouchTargetSize=0x7f0302e8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minWidth=0x7f0302e9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int mock_diagonalsColor=0x7f0302ea;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int mock_label=0x7f0302eb;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int mock_labelBackgroundColor=0x7f0302ec;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int mock_labelColor=0x7f0302ed;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int mock_showDiagonals=0x7f0302ee;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int mock_showLabel=0x7f0302ef;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>NO_DEBUG</td><td>0</td><td></td></tr>
     * <tr><td>SHOW_ALL</td><td>3</td><td></td></tr>
     * <tr><td>SHOW_PATH</td><td>2</td><td></td></tr>
     * <tr><td>SHOW_PROGRESS</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int motionDebug=0x7f0302f0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>5</td><td></td></tr>
     * <tr><td>easeIn</td><td>1</td><td></td></tr>
     * <tr><td>easeInOut</td><td>0</td><td></td></tr>
     * <tr><td>easeOut</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int motionInterpolator=0x7f0302f1;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int motionPathRotate=0x7f0302f2;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int motionProgress=0x7f0302f3;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int motionStagger=0x7f0302f4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int motionTarget=0x7f0302f5;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int motion_postLayoutCollision=0x7f0302f6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int motion_triggerOnCollision=0x7f0302f7;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int moveWhenScrollAtTop=0x7f0302f8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ms_alignLabels=0x7f0302f9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ms_alwaysShowFloatingLabel=0x7f0302fa;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ms_arrowColor=0x7f0302fb;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int ms_arrowSize=0x7f0302fc;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ms_baseColor=0x7f0302fd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ms_dropDownHintView=0x7f0302fe;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ms_enableErrorLabel=0x7f0302ff;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ms_enableFloatingLabel=0x7f030300;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ms_error=0x7f030301;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ms_errorColor=0x7f030302;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ms_floatingLabelColor=0x7f030303;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ms_floatingLabelText=0x7f030304;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ms_highlightColor=0x7f030305;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ms_hint=0x7f030306;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ms_hintColor=0x7f030307;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int ms_hintTextSize=0x7f030308;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ms_hintView=0x7f030309;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ms_isRtl=0x7f03030a;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ms_multiline=0x7f03030b;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ms_nbErrorLines=0x7f03030c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int ms_thickness=0x7f03030d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int ms_thickness_error=0x7f03030e;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ms_typeface=0x7f03030f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f030310;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navGraph=0x7f030311;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f030312;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f030313;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int navigationIconTint=0x7f030314;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f030315;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationViewStyle=0x7f030316;
    /**
     * The negative button text for the dialog. Set to @null to hide the negative button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int negativeButtonText=0x7f030317;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disablePostScroll</td><td>1</td><td></td></tr>
     * <tr><td>disableScroll</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int nestedScrollFlags=0x7f030318;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int nestedScrollable=0x7f030319;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int nullable=0x7f03031a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int number=0x7f03031b;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f03031c;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int onCross=0x7f03031d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int onHide=0x7f03031e;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int onNegativeCross=0x7f03031f;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int onPositiveCross=0x7f030320;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int onShow=0x7f030321;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>autoComplete</td><td>0</td><td></td></tr>
     * <tr><td>autoCompleteToEnd</td><td>2</td><td></td></tr>
     * <tr><td>autoCompleteToStart</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>4</td><td></td></tr>
     * <tr><td>decelerateAndComplete</td><td>5</td><td></td></tr>
     * <tr><td>stop</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int onTouchUp=0x7f030322;
    /**
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int order=0x7f030323;
    /**
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int orderingFromXml=0x7f030324;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int otp=0x7f030325;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int otpViewStyle=0x7f030326;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int otp_box_background=0x7f030327;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int otp_box_background_active=0x7f030328;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int otp_box_background_error=0x7f030329;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int otp_box_background_inactive=0x7f03032a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int otp_box_background_success=0x7f03032b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int otp_text_size=0x7f03032c;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f03032d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlay=0x7f03032e;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f03032f;
    /**
     * Just adding the parameters that we need for now. We can add others if we need them, but
     * ideally we'll be able to use https://github.com/chrisbanes/insetter once it's ready.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int paddingBottomSystemWindowInsets=0x7f030330;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f030331;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int paddingLeftSystemWindowInsets=0x7f030332;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int paddingRightSystemWindowInsets=0x7f030333;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f030334;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f030335;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int page_bg=0x7f030336;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f030337;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f030338;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f030339;
    /**
     * Text to set as the content description for the password input visibility toggle.
     * Deprecated. Use endIconContentDescription instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int passwordToggleContentDescription=0x7f03033a;
    /**
     * Drawable to use as the password input visibility toggle icon.
     * Deprecated. Use endIconDrawable instead.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int passwordToggleDrawable=0x7f03033b;
    /**
     * Whether the view will display a toggle when the EditText has a password.
     * Deprecated. The view's end icon should be specified via endIconMode instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int passwordToggleEnabled=0x7f03033c;
    /**
     * Icon to use for the password input visibility toggle
     * Deprecated. Use endIconTint instead.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int passwordToggleTint=0x7f03033d;
    /**
     * Blending mode used to apply the background tint.
     * Deprecated. Use endIconTintMode instead.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int passwordToggleTintMode=0x7f03033e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int pathMotionArc=0x7f03033f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int path_percent=0x7f030340;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int percentHeight=0x7f030341;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int percentWidth=0x7f030342;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int percentX=0x7f030343;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int percentY=0x7f030344;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int perpendicularPath_percent=0x7f030345;
    /**
     * Whether the Preference stores its value to the shared preferences.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int persistent=0x7f030346;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int pivotAnchor=0x7f030347;
    /**
     * The text to display as placeholder text in the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int placeholderText=0x7f030348;
    /**
     * TextAppearance of the placeholder text displayed in the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int placeholderTextAppearance=0x7f030349;
    /**
     * Text color of the placeholder text displayed in the text input area.
     * If set, this takes precedence over placeholderTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int placeholderTextColor=0x7f03034a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>8</td><td></td></tr>
     * <tr><td>invisible</td><td>4</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int placeholder_emptyVisibility=0x7f03034b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popEnterAnim=0x7f03034c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popExitAnim=0x7f03034d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popUpTo=0x7f03034e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int popUpToInclusive=0x7f03034f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuBackground=0x7f030350;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f030351;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f030352;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f030353;
    /**
     * The positive button text for the dialog. Set to @null to hide the positive button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int positiveButtonText=0x7f030354;
    /**
     * Default style for PreferenceCategory.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryStyle=0x7f030355;
    /**
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryTitleTextAppearance=0x7f030356;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentCompatStyle=0x7f030357;
    /**
     * Preference fragment list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentListStyle=0x7f030358;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentStyle=0x7f030359;
    /**
     * Default style for informational Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceInformationStyle=0x7f03035a;
    /**
     * Default style for PreferenceScreen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceScreenStyle=0x7f03035b;
    /**
     * Default style for Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceStyle=0x7f03035c;
    /**
     * Theme for inflating Preference objects
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceTheme=0x7f03035d;
    /**
     * The text to display as prefix text in the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int prefixText=0x7f03035e;
    /**
     * TextAppearance of the prefix text displayed in the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int prefixTextAppearance=0x7f03035f;
    /**
     * Text color of the prefix text displayed in the text input area.
     * If set, this takes precedence over prefixTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int prefixTextColor=0x7f030360;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f030361;
    /**
     * TranslationZ value for the FAB when pressed
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pressedTranslationZ=0x7f030362;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int preview_bottomToolbar_apply_textColor=0x7f030363;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int preview_bottomToolbar_back_textColor=0x7f030364;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f030365;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f030366;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f030367;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f030368;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f030369;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rangeFillColor=0x7f03036a;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f03036b;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f03036c;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f03036d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int recyclerViewStyle=0x7f03036e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int region_heightLessThan=0x7f03036f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int region_heightMoreThan=0x7f030370;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int region_widthLessThan=0x7f030371;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int region_widthMoreThan=0x7f030372;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f030373;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rippleColor=0x7f030374;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int round=0x7f030375;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int roundPercent=0x7f030376;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int saturation=0x7f030377;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int scopeUris=0x7f030378;
    /**
     * Specifies the duration used for scrim visibility animations.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int scrimAnimationDuration=0x7f030379;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int scrimBackground=0x7f03037a;
    /**
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int scrimVisibleHeightTrigger=0x7f03037b;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f03037c;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f03037d;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f03037e;
    /**
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int seekBarIncrement=0x7f03037f;
    /**
     * Default style for seekbar preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarPreferenceStyle=0x7f030380;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f030381;
    /**
     * Whether the Preference is selectable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectable=0x7f030382;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f030383;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f030384;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectionRequired=0x7f030385;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int selectorSize=0x7f030386;
    /**
     * Shape appearance style reference to be used to construct a ShapeAppearanceModel.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearance=0x7f030387;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceLargeComponent=0x7f030388;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceMediumComponent=0x7f030389;
    /**
     * Shape appearance overlay style reference to be used to modify the shapeAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceOverlay=0x7f03038a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceSmallComponent=0x7f03038b;
    /**
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shouldDisableView=0x7f03038c;
    /**
     * The animation behavior to show the indicator and track.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Expands from the top edge to the bottom edge for the linear type;
     * expands from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; appears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Expands from the bottom edge to the top edge for the linear type;
     * expands from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     */
    public static final int showAnimationBehavior=0x7f03038d;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f03038e;
    /**
     * The time, in milliseconds, that the progress indicator will wait to show
     * once show() is called. If set to zero or negative values (-1 as default),
     * the show action will start immediately.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int showDelay=0x7f03038f;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f030390;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int showMotionSpec=0x7f030391;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showPaths=0x7f030392;
    /**
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showSeekBarValue=0x7f030393;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f030394;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f030395;
    /**
     * Motion spec for shrink animation. This should be a MotionSpec resource.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shrinkMotionSpec=0x7f030396;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f030397;
    /**
     * Constrains the chips in this group to a single horizontal line. By default, this is false
     * and the chips in this group will reflow to multiple lines.
     * If you set this to true, you'll usually want to wrap this ChipGroup in a
     * HorizontalScrollView.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLine=0x7f030398;
    /**
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLineTitle=0x7f030399;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleSelection=0x7f03039a;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int sizePercent=0x7f03039b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sliderStyle=0x7f03039c;
    /**
     * Style to use for action button within a Snackbar in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarButtonStyle=0x7f03039d;
    /**
     * Style to use for Snackbars in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarStyle=0x7f03039e;
    /**
     * Style to use for message text within a Snackbar in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarTextViewStyle=0x7f03039f;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f0303a0;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f0303a1;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f0303a2;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f0303a3;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f0303a4;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f0303a5;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sriv_border_color=0x7f0303a6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sriv_border_width=0x7f0303a7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sriv_left_bottom_corner_radius=0x7f0303a8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sriv_left_top_corner_radius=0x7f0303a9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sriv_oval=0x7f0303aa;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sriv_right_bottom_corner_radius=0x7f0303ab;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sriv_right_top_corner_radius=0x7f0303ac;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f0303ad;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int staggered=0x7f0303ae;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int startColor=0x7f0303af;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int startDestination=0x7f0303b0;
    /**
     * Whether the start icon is checkable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int startIconCheckable=0x7f0303b1;
    /**
     * Text to set as the content description for the start icon.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int startIconContentDescription=0x7f0303b2;
    /**
     * Drawable to use for the start icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int startIconDrawable=0x7f0303b3;
    /**
     * Tint color to use for the start icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int startIconTint=0x7f0303b4;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int startIconTintMode=0x7f0303b5;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f0303b6;
    /**
     * @deprecated in favor of {@link R.attr#state_lifted}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    @Deprecated
    public static final int state_collapsed=0x7f0303b7;
    /**
     * @deprecated in favor of {@link R.attr#state_liftable}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    @Deprecated
    public static final int state_collapsible=0x7f0303b8;
    /**
     * State when a Card is being dragged.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_dragged=0x7f0303b9;
    /**
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_liftable=0x7f0303ba;
    /**
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_lifted=0x7f0303bb;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f0303bc;
    /**
     * The drawable to display in front of the layout's content, but behind the status bar.
     * Only works on Lollipop when used together with android:fitSystemWindows="true".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarForeground=0x7f0303bd;
    /**
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop when used together with android:fitSystemWindows="true".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarScrim=0x7f0303be;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int strokeColor=0x7f0303bf;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int strokeWidth=0x7f0303c0;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f0303c1;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f0303c2;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f0303c3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f0303c4;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f0303c5;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f0303c6;
    /**
     * The text to display as suffix text in the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int suffixText=0x7f0303c7;
    /**
     * TextAppearance of the suffix text displayed in the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suffixTextAppearance=0x7f0303c8;
    /**
     * Text color of the suffix text displayed in the text input area.
     * If set, this takes precedence over suffixTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suffixTextColor=0x7f0303c9;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f0303ca;
    /**
     * The summary for the Preference in a PreferenceActivity screen.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summary=0x7f0303cb;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOff=0x7f0303cc;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOn=0x7f0303cd;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f0303ce;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f0303cf;
    /**
     * Default style for switch compat preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceCompatStyle=0x7f0303d0;
    /**
     * Default style for switch preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceStyle=0x7f0303d1;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f0303d2;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f0303d3;
    /**
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOff=0x7f0303d4;
    /**
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOn=0x7f0303d5;
    /**
     * Reference to a background to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabBackground=0x7f0303d6;
    /**
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabContentStart=0x7f0303d7;
    /**
     * Gravity constant for tabs.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int tabGravity=0x7f0303d8;
    /**
     * Tint to apply to tab icons, if present. This can be a color state list or a color.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIconTint=0x7f0303d9;
    /**
     * Blending mode to apply to tab icons.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int tabIconTintMode=0x7f0303da;
    /**
     * Reference to a drawable to use as selection indicator for tabs. If this attribute is not
     * specified, indicator defaults to a line along the bottom of the tab.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabIndicator=0x7f0303db;
    /**
     * Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int tabIndicatorAnimationDuration=0x7f0303dc;
    /**
     * The animation mode used to animate the selection indicator between
     * destinations.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>elastic</td><td>1</td><td>Animate the selection indicator's left and right bounds out of step
     * with each other, decelerating the front and accelerating the back.
     * This causes the indicator to look like it stretches between destinations
     * an then shrinks back down to fit the size of it's target tab.</td></tr>
     * <tr><td>linear</td><td>0</td><td>Animate the selection indicator's left and right bounds in step with
     * each other.</td></tr>
     * </table>
     */
    public static final int tabIndicatorAnimationMode=0x7f0303dd;
    /**
     * Color of the indicator used to show the currently selected tab.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIndicatorColor=0x7f0303de;
    /**
     * Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label. If no text label is
     * present, it will be set to the width of the icon or to a minimum width of 24dp.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabIndicatorFullWidth=0x7f0303df;
    /**
     * Gravity constant for tab selection indicator.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td>Align indicator to the bottom of this tab layout.</td></tr>
     * <tr><td>center</td><td>1</td><td>Align indicator along the center of this tab layout.</td></tr>
     * <tr><td>stretch</td><td>3</td><td>Stretch indicator to match the height and width of a tab item in this layout.</td></tr>
     * <tr><td>top</td><td>2</td><td>Align indicator to the top of this tab layout.</td></tr>
     * </table>
     */
    public static final int tabIndicatorGravity=0x7f0303e0;
    /**
     * {@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height. For example, this can be
     * done by setting the <size> property in a <shape> resource.}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int tabIndicatorHeight=0x7f0303e1;
    /**
     * Whether to display tab labels horizontally inline with icons, or underneath icons.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabInlineLabel=0x7f0303e2;
    /**
     * The maximum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMaxWidth=0x7f0303e3;
    /**
     * The minimum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMinWidth=0x7f0303e4;
    /**
     * The behavior mode for the Tabs in this layout
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabMode=0x7f0303e5;
    /**
     * The preferred padding along all edges of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPadding=0x7f0303e6;
    /**
     * The preferred padding along the bottom edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingBottom=0x7f0303e7;
    /**
     * The preferred padding along the end edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingEnd=0x7f0303e8;
    /**
     * The preferred padding along the start edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingStart=0x7f0303e9;
    /**
     * The preferred padding along the top edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingTop=0x7f0303ea;
    /**
     * Ripple color for the tabs. This may be a color state list, if the desired ripple color
     * should be stateful.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabRippleColor=0x7f0303eb;
    /**
     * {@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    @Deprecated
    public static final int tabSelectedTextColor=0x7f0303ec;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabStyle=0x7f0303ed;
    /**
     * A reference to a TextAppearance style to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabTextAppearance=0x7f0303ee;
    /**
     * The default text color to be applied to tabs.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabTextColor=0x7f0303ef;
    /**
     * Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabUnboundedRipple=0x7f0303f0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int targetId=0x7f0303f1;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int targetPackage=0x7f0303f2;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int telltales_tailColor=0x7f0303f3;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int telltales_tailScale=0x7f0303f4;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>layout</td><td>0</td><td></td></tr>
     * <tr><td>postLayout</td><td>1</td><td></td></tr>
     * <tr><td>staticLayout</td><td>3</td><td></td></tr>
     * <tr><td>staticPostLayout</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int telltales_velocityMode=0x7f0303f5;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f0303f6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody1=0x7f0303f7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody2=0x7f0303f8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceButton=0x7f0303f9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceCaption=0x7f0303fa;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline1=0x7f0303fb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline2=0x7f0303fc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline3=0x7f0303fd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline4=0x7f0303fe;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline5=0x7f0303ff;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline6=0x7f030400;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f030401;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAppearanceLineHeightEnabled=0x7f030402;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f030403;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f030404;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f030405;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceOverline=0x7f030406;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f030407;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f030408;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f030409;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f03040a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle1=0x7f03040b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle2=0x7f03040c;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f03040d;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f03040e;
    /**
     * Padding at the end of the text, before the close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textEndPadding=0x7f03040f;
    /**
     * Whether the TextInputEditText should use the TextInputLayout's focused
     * rectangle instead of its own.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textInputLayoutFocusedRectEnabled=0x7f030410;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textInputStyle=0x7f030411;
    /**
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int textLocale=0x7f030412;
    /**
     * Padding at the start of the text, after the icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textStartPadding=0x7f030413;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int text_typeface=0x7f030414;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f030415;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int themeLineHeight=0x7f030416;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f030417;
    /**
     * The color of the slider's thumb.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbColor=0x7f030418;
    /**
     * The elevation of the thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbElevation=0x7f030419;
    /**
     * The radius of the thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbRadius=0x7f03041a;
    /**
     * The stroke color for the thumb.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbStrokeColor=0x7f03041b;
    /**
     * The stroke width for the thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbStrokeWidth=0x7f03041c;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f03041d;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f03041e;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f03041f;
    /**
     * The color of the slider's tick marks. Only used when the slider is in discrete mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickColor=0x7f030420;
    /**
     * The color of the slider's tick marks for the active portion of the track. Only used when
     * the slider is in discrete mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickColorActive=0x7f030421;
    /**
     * The color of the slider's tick marks for the inactive portion of the track. Only used when
     * the slider is in discrete mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickColorInactive=0x7f030422;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f030423;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f030424;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f030425;
    /**
     * Whether to show the tick marks. Only used when the slider is in discrete mode.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tickVisible=0x7f030426;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f030427;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f030428;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f030429;
    /**
     * Whether the CollapsingToolbarLayout should draw its own shrinking/growing title.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int titleEnabled=0x7f03042a;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f03042b;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f03042c;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f03042d;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f03042e;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f03042f;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f030430;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f030431;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f030432;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f030433;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbar=0x7f030434;
    /**
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarId=0x7f030435;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f030436;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f030437;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f030438;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f030439;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipStyle=0x7f03043a;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f03043b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int touchAnchorId=0x7f03043c;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>middle</td><td>4</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int touchAnchorSide=0x7f03043d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int touchRegionId=0x7f03043e;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f03043f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackColor=0x7f030440;
    /**
     * The color of active portion of the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackColorActive=0x7f030441;
    /**
     * The color of inactive portion of the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackColorInactive=0x7f030442;
    /**
     * The radius of each corner of both the indicator and the track. A radius
     * larger than half of the track width will throw exceptions during
     * initialization.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int trackCornerRadius=0x7f030443;
    /**
     * The height of the track.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int trackHeight=0x7f030444;
    /**
     * The thickness of the progress track and indicator.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int trackThickness=0x7f030445;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f030446;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f030447;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int transitionDisable=0x7f030448;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int transitionEasing=0x7f030449;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginOnFirstDraw</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int transitionFlags=0x7f03044a;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int transitionPathRotate=0x7f03044b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int transitionShapeAppearance=0x7f03044c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int triggerId=0x7f03044d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int triggerReceiver=0x7f03044e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int triggerSlack=0x7f03044f;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f030450;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int ucrop_artv_ratio_title=0x7f030451;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int ucrop_artv_ratio_x=0x7f030452;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int ucrop_artv_ratio_y=0x7f030453;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int ucrop_aspect_ratio_x=0x7f030454;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int ucrop_aspect_ratio_y=0x7f030455;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ucrop_circle_dimmed_layer=0x7f030456;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ucrop_dimmed_color=0x7f030457;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ucrop_frame_color=0x7f030458;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int ucrop_frame_stroke_size=0x7f030459;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int ucrop_grid_color=0x7f03045a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ucrop_grid_column_count=0x7f03045b;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ucrop_grid_row_count=0x7f03045c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int ucrop_grid_stroke_size=0x7f03045d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ucrop_show_frame=0x7f03045e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ucrop_show_grid=0x7f03045f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ucrop_show_oval_crop_frame=0x7f030460;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int uiCompass=0x7f030461;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int uiMapToolbar=0x7f030462;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int uiRotateGestures=0x7f030463;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int uiScrollGestures=0x7f030464;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int uiScrollGesturesDuringRotateOrZoom=0x7f030465;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int uiTiltGestures=0x7f030466;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int uiZoomControls=0x7f030467;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int uiZoomGestures=0x7f030468;
    /**
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int updatesContinuously=0x7f030469;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int uri=0x7f03046a;
    /**
     * Enable compat padding.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useCompatPadding=0x7f03046b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useMaterialThemeColors=0x7f03046c;
    /**
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useSimpleSummaryProvider=0x7f03046d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useViewLifecycle=0x7f03046e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int values=0x7f03046f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int verticalOffset=0x7f030470;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int viewInflaterClass=0x7f030471;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ignore</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int visibilityMode=0x7f030472;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f030473;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int warmth=0x7f030474;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int waveDecay=0x7f030475;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int waveOffset=0x7f030476;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int wavePeriod=0x7f030477;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>6</td><td></td></tr>
     * <tr><td>cos</td><td>5</td><td></td></tr>
     * <tr><td>reverseSawtooth</td><td>4</td><td></td></tr>
     * <tr><td>sawtooth</td><td>3</td><td></td></tr>
     * <tr><td>sin</td><td>0</td><td></td></tr>
     * <tr><td>square</td><td>1</td><td></td></tr>
     * <tr><td>triangle</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int waveShape=0x7f030478;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>position</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int waveVariesBy=0x7f030479;
    /**
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int widgetLayout=0x7f03047a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int width=0x7f03047b;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f03047c;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f03047d;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f03047e;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f03047f;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f030480;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f030481;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f030482;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f030483;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f030484;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f030485;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yearSelectedStyle=0x7f030486;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yearStyle=0x7f030487;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yearTodayStyle=0x7f030488;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int zOrderOnTop=0x7f030489;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f040000;
    public static final int abc_allow_stacked_button_bar=0x7f040001;
    public static final int abc_config_actionMenuItemAllCaps=0x7f040002;
    public static final int config_materialPreferenceIconSpaceReserved=0x7f040003;
    public static final int mtrl_btn_textappearance_all_caps=0x7f040004;
  }
  public static final class color {
    public static final int Black=0x7f050000;
    public static final int Brown=0x7f050001;
    public static final int Description=0x7f050002;
    public static final int Green=0x7f050003;
    public static final int LightGrey=0x7f050004;
    public static final int Seperator=0x7f050005;
    public static final int TextField=0x7f050006;
    public static final int White=0x7f050007;
    public static final int abc_background_cache_hint_selector_material_dark=0x7f050008;
    public static final int abc_background_cache_hint_selector_material_light=0x7f050009;
    public static final int abc_btn_colored_borderless_text_material=0x7f05000a;
    public static final int abc_btn_colored_text_material=0x7f05000b;
    public static final int abc_color_highlight_material=0x7f05000c;
    public static final int abc_decor_view_status_guard=0x7f05000d;
    public static final int abc_decor_view_status_guard_light=0x7f05000e;
    public static final int abc_hint_foreground_material_dark=0x7f05000f;
    public static final int abc_hint_foreground_material_light=0x7f050010;
    public static final int abc_primary_text_disable_only_material_dark=0x7f050011;
    public static final int abc_primary_text_disable_only_material_light=0x7f050012;
    public static final int abc_primary_text_material_dark=0x7f050013;
    public static final int abc_primary_text_material_light=0x7f050014;
    public static final int abc_search_url_text=0x7f050015;
    public static final int abc_search_url_text_normal=0x7f050016;
    public static final int abc_search_url_text_pressed=0x7f050017;
    public static final int abc_search_url_text_selected=0x7f050018;
    public static final int abc_secondary_text_material_dark=0x7f050019;
    public static final int abc_secondary_text_material_light=0x7f05001a;
    public static final int abc_tint_btn_checkable=0x7f05001b;
    public static final int abc_tint_default=0x7f05001c;
    public static final int abc_tint_edittext=0x7f05001d;
    public static final int abc_tint_seek_thumb=0x7f05001e;
    public static final int abc_tint_spinner=0x7f05001f;
    public static final int abc_tint_switch_track=0x7f050020;
    public static final int accent_material_dark=0x7f050021;
    public static final int accent_material_light=0x7f050022;
    public static final int amber_100=0x7f050023;
    public static final int amber_200=0x7f050024;
    public static final int amber_300=0x7f050025;
    public static final int amber_400=0x7f050026;
    public static final int amber_50=0x7f050027;
    public static final int amber_500=0x7f050028;
    public static final int amber_600=0x7f050029;
    public static final int amber_700=0x7f05002a;
    public static final int amber_800=0x7f05002b;
    public static final int amber_900=0x7f05002c;
    public static final int amber_A100=0x7f05002d;
    public static final int amber_A200=0x7f05002e;
    public static final int amber_A400=0x7f05002f;
    public static final int amber_A700=0x7f050030;
    public static final int androidx_core_ripple_material_light=0x7f050031;
    public static final int androidx_core_secondary_text_default_material_light=0x7f050032;
    public static final int background=0x7f050033;
    public static final int background_floating_material_dark=0x7f050034;
    public static final int background_floating_material_light=0x7f050035;
    public static final int background_material_dark=0x7f050036;
    public static final int background_material_light=0x7f050037;
    public static final int bg=0x7f050038;
    public static final int black=0x7f050039;
    public static final int black_80=0x7f05003a;
    public static final int blue=0x7f05003b;
    public static final int blue_100=0x7f05003c;
    public static final int blue_200=0x7f05003d;
    public static final int blue_300=0x7f05003e;
    public static final int blue_400=0x7f05003f;
    public static final int blue_50=0x7f050040;
    public static final int blue_500=0x7f050041;
    public static final int blue_600=0x7f050042;
    public static final int blue_700=0x7f050043;
    public static final int blue_800=0x7f050044;
    public static final int blue_900=0x7f050045;
    public static final int blue_A100=0x7f050046;
    public static final int blue_A200=0x7f050047;
    public static final int blue_A400=0x7f050048;
    public static final int blue_A700=0x7f050049;
    public static final int blue_grey_100=0x7f05004a;
    public static final int blue_grey_200=0x7f05004b;
    public static final int blue_grey_300=0x7f05004c;
    public static final int blue_grey_400=0x7f05004d;
    public static final int blue_grey_50=0x7f05004e;
    public static final int blue_grey_500=0x7f05004f;
    public static final int blue_grey_600=0x7f050050;
    public static final int blue_grey_700=0x7f050051;
    public static final int blue_grey_800=0x7f050052;
    public static final int blue_grey_900=0x7f050053;
    public static final int border=0x7f050054;
    public static final int bright_foreground_disabled_material_dark=0x7f050055;
    public static final int bright_foreground_disabled_material_light=0x7f050056;
    public static final int bright_foreground_inverse_material_dark=0x7f050057;
    public static final int bright_foreground_inverse_material_light=0x7f050058;
    public static final int bright_foreground_material_dark=0x7f050059;
    public static final int bright_foreground_material_light=0x7f05005a;
    public static final int brown_100=0x7f05005b;
    public static final int brown_200=0x7f05005c;
    public static final int brown_300=0x7f05005d;
    public static final int brown_400=0x7f05005e;
    public static final int brown_50=0x7f05005f;
    public static final int brown_500=0x7f050060;
    public static final int brown_600=0x7f050061;
    public static final int brown_700=0x7f050062;
    public static final int brown_800=0x7f050063;
    public static final int brown_900=0x7f050064;
    public static final int browser_actions_bg_grey=0x7f050065;
    public static final int browser_actions_divider_color=0x7f050066;
    public static final int browser_actions_text_color=0x7f050067;
    public static final int browser_actions_title_color=0x7f050068;
    public static final int button_material_dark=0x7f050069;
    public static final int button_material_light=0x7f05006a;
    public static final int cardview_dark_background=0x7f05006b;
    public static final int cardview_light_background=0x7f05006c;
    public static final int cardview_shadow_end_color=0x7f05006d;
    public static final int cardview_shadow_start_color=0x7f05006e;
    public static final int checkbox_themeable_attribute_color=0x7f05006f;
    public static final int colorAccent=0x7f050070;
    public static final int colorPrimary=0x7f050071;
    public static final int colorPrimaryDark=0x7f050072;
    public static final int com_facebook_blue=0x7f050073;
    public static final int com_facebook_button_background_color=0x7f050074;
    public static final int com_facebook_button_background_color_disabled=0x7f050075;
    public static final int com_facebook_button_background_color_pressed=0x7f050076;
    public static final int com_facebook_button_text_color=0x7f050077;
    public static final int com_facebook_device_auth_text=0x7f050078;
    public static final int com_facebook_likeboxcountview_border_color=0x7f050079;
    public static final int com_facebook_likeboxcountview_text_color=0x7f05007a;
    public static final int com_facebook_likeview_text_color=0x7f05007b;
    public static final int com_facebook_primary_button_disabled_text_color=0x7f05007c;
    public static final int com_facebook_primary_button_pressed_text_color=0x7f05007d;
    public static final int com_facebook_primary_button_text_color=0x7f05007e;
    public static final int com_smart_login_code=0x7f05007f;
    public static final int common_google_signin_btn_text_dark=0x7f050080;
    public static final int common_google_signin_btn_text_dark_default=0x7f050081;
    public static final int common_google_signin_btn_text_dark_disabled=0x7f050082;
    public static final int common_google_signin_btn_text_dark_focused=0x7f050083;
    public static final int common_google_signin_btn_text_dark_pressed=0x7f050084;
    public static final int common_google_signin_btn_text_light=0x7f050085;
    public static final int common_google_signin_btn_text_light_default=0x7f050086;
    public static final int common_google_signin_btn_text_light_disabled=0x7f050087;
    public static final int common_google_signin_btn_text_light_focused=0x7f050088;
    public static final int common_google_signin_btn_text_light_pressed=0x7f050089;
    public static final int common_google_signin_btn_tint=0x7f05008a;
    public static final int cyan_100=0x7f05008b;
    public static final int cyan_200=0x7f05008c;
    public static final int cyan_300=0x7f05008d;
    public static final int cyan_400=0x7f05008e;
    public static final int cyan_50=0x7f05008f;
    public static final int cyan_500=0x7f050090;
    public static final int cyan_600=0x7f050091;
    public static final int cyan_700=0x7f050092;
    public static final int cyan_800=0x7f050093;
    public static final int cyan_900=0x7f050094;
    public static final int cyan_A100=0x7f050095;
    public static final int cyan_A200=0x7f050096;
    public static final int cyan_A400=0x7f050097;
    public static final int cyan_A700=0x7f050098;
    public static final int darktext=0x7f050099;
    public static final int deep_orange_100=0x7f05009a;
    public static final int deep_orange_200=0x7f05009b;
    public static final int deep_orange_300=0x7f05009c;
    public static final int deep_orange_400=0x7f05009d;
    public static final int deep_orange_50=0x7f05009e;
    public static final int deep_orange_500=0x7f05009f;
    public static final int deep_orange_600=0x7f0500a0;
    public static final int deep_orange_700=0x7f0500a1;
    public static final int deep_orange_800=0x7f0500a2;
    public static final int deep_orange_900=0x7f0500a3;
    public static final int deep_orange_A100=0x7f0500a4;
    public static final int deep_orange_A200=0x7f0500a5;
    public static final int deep_orange_A400=0x7f0500a6;
    public static final int deep_orange_A700=0x7f0500a7;
    public static final int deep_purple_100=0x7f0500a8;
    public static final int deep_purple_200=0x7f0500a9;
    public static final int deep_purple_300=0x7f0500aa;
    public static final int deep_purple_400=0x7f0500ab;
    public static final int deep_purple_50=0x7f0500ac;
    public static final int deep_purple_500=0x7f0500ad;
    public static final int deep_purple_600=0x7f0500ae;
    public static final int deep_purple_700=0x7f0500af;
    public static final int deep_purple_800=0x7f0500b0;
    public static final int deep_purple_900=0x7f0500b1;
    public static final int deep_purple_A100=0x7f0500b2;
    public static final int deep_purple_A200=0x7f0500b3;
    public static final int deep_purple_A400=0x7f0500b4;
    public static final int deep_purple_A700=0x7f0500b5;
    public static final int defaultBorderFlagColor=0x7f0500b6;
    public static final int defaultContentColor=0x7f0500b7;
    public static final int design_bottom_navigation_shadow_color=0x7f0500b8;
    public static final int design_box_stroke_color=0x7f0500b9;
    public static final int design_dark_default_color_background=0x7f0500ba;
    public static final int design_dark_default_color_error=0x7f0500bb;
    public static final int design_dark_default_color_on_background=0x7f0500bc;
    public static final int design_dark_default_color_on_error=0x7f0500bd;
    public static final int design_dark_default_color_on_primary=0x7f0500be;
    public static final int design_dark_default_color_on_secondary=0x7f0500bf;
    public static final int design_dark_default_color_on_surface=0x7f0500c0;
    public static final int design_dark_default_color_primary=0x7f0500c1;
    public static final int design_dark_default_color_primary_dark=0x7f0500c2;
    public static final int design_dark_default_color_primary_variant=0x7f0500c3;
    public static final int design_dark_default_color_secondary=0x7f0500c4;
    public static final int design_dark_default_color_secondary_variant=0x7f0500c5;
    public static final int design_dark_default_color_surface=0x7f0500c6;
    public static final int design_default_color_background=0x7f0500c7;
    public static final int design_default_color_error=0x7f0500c8;
    public static final int design_default_color_on_background=0x7f0500c9;
    public static final int design_default_color_on_error=0x7f0500ca;
    public static final int design_default_color_on_primary=0x7f0500cb;
    public static final int design_default_color_on_secondary=0x7f0500cc;
    public static final int design_default_color_on_surface=0x7f0500cd;
    public static final int design_default_color_primary=0x7f0500ce;
    public static final int design_default_color_primary_dark=0x7f0500cf;
    public static final int design_default_color_primary_variant=0x7f0500d0;
    public static final int design_default_color_secondary=0x7f0500d1;
    public static final int design_default_color_secondary_variant=0x7f0500d2;
    public static final int design_default_color_surface=0x7f0500d3;
    public static final int design_error=0x7f0500d4;
    public static final int design_fab_shadow_end_color=0x7f0500d5;
    public static final int design_fab_shadow_mid_color=0x7f0500d6;
    public static final int design_fab_shadow_start_color=0x7f0500d7;
    public static final int design_fab_stroke_end_inner_color=0x7f0500d8;
    public static final int design_fab_stroke_end_outer_color=0x7f0500d9;
    public static final int design_fab_stroke_top_inner_color=0x7f0500da;
    public static final int design_fab_stroke_top_outer_color=0x7f0500db;
    public static final int design_icon_tint=0x7f0500dc;
    public static final int design_snackbar_background_color=0x7f0500dd;
    public static final int dim_foreground_disabled_material_dark=0x7f0500de;
    public static final int dim_foreground_disabled_material_light=0x7f0500df;
    public static final int dim_foreground_material_dark=0x7f0500e0;
    public static final int dim_foreground_material_light=0x7f0500e1;
    public static final int disabled_color=0x7f0500e2;
    public static final int dracula_album_dropdown_count_text=0x7f0500e3;
    public static final int dracula_album_dropdown_thumbnail_placeholder=0x7f0500e4;
    public static final int dracula_album_dropdown_title_text=0x7f0500e5;
    public static final int dracula_album_empty_view=0x7f0500e6;
    public static final int dracula_album_popup_bg=0x7f0500e7;
    public static final int dracula_bottom_toolbar_apply=0x7f0500e8;
    public static final int dracula_bottom_toolbar_apply_text=0x7f0500e9;
    public static final int dracula_bottom_toolbar_apply_text_disable=0x7f0500ea;
    public static final int dracula_bottom_toolbar_bg=0x7f0500eb;
    public static final int dracula_bottom_toolbar_preview=0x7f0500ec;
    public static final int dracula_bottom_toolbar_preview_text=0x7f0500ed;
    public static final int dracula_bottom_toolbar_preview_text_disable=0x7f0500ee;
    public static final int dracula_capture=0x7f0500ef;
    public static final int dracula_item_checkCircle_backgroundColor=0x7f0500f0;
    public static final int dracula_item_checkCircle_borderColor=0x7f0500f1;
    public static final int dracula_item_placeholder=0x7f0500f2;
    public static final int dracula_page_bg=0x7f0500f3;
    public static final int dracula_preview_bottom_toolbar_apply=0x7f0500f4;
    public static final int dracula_preview_bottom_toolbar_apply_text=0x7f0500f5;
    public static final int dracula_preview_bottom_toolbar_apply_text_disable=0x7f0500f6;
    public static final int dracula_preview_bottom_toolbar_back_text=0x7f0500f7;
    public static final int dracula_primary=0x7f0500f8;
    public static final int dracula_primary_dark=0x7f0500f9;
    public static final int editTextbg=0x7f0500fa;
    public static final int error_color=0x7f0500fb;
    public static final int error_color_material_dark=0x7f0500fc;
    public static final int error_color_material_light=0x7f0500fd;
    public static final int foreground_material_dark=0x7f0500fe;
    public static final int foreground_material_light=0x7f0500ff;
    public static final int green_100=0x7f050100;
    public static final int green_200=0x7f050101;
    public static final int green_300=0x7f050102;
    public static final int green_400=0x7f050103;
    public static final int green_50=0x7f050104;
    public static final int green_500=0x7f050105;
    public static final int green_600=0x7f050106;
    public static final int green_700=0x7f050107;
    public static final int green_800=0x7f050108;
    public static final int green_900=0x7f050109;
    public static final int green_A100=0x7f05010a;
    public static final int green_A200=0x7f05010b;
    public static final int green_A400=0x7f05010c;
    public static final int green_A700=0x7f05010d;
    public static final int grey=0x7f05010e;
    public static final int grey_100=0x7f05010f;
    public static final int grey_200=0x7f050110;
    public static final int grey_300=0x7f050111;
    public static final int grey_400=0x7f050112;
    public static final int grey_50=0x7f050113;
    public static final int grey_500=0x7f050114;
    public static final int grey_600=0x7f050115;
    public static final int grey_700=0x7f050116;
    public static final int grey_800=0x7f050117;
    public static final int grey_900=0x7f050118;
    public static final int highlighted_text_material_dark=0x7f050119;
    public static final int highlighted_text_material_light=0x7f05011a;
    public static final int indigo_100=0x7f05011b;
    public static final int indigo_200=0x7f05011c;
    public static final int indigo_300=0x7f05011d;
    public static final int indigo_400=0x7f05011e;
    public static final int indigo_50=0x7f05011f;
    public static final int indigo_500=0x7f050120;
    public static final int indigo_600=0x7f050121;
    public static final int indigo_700=0x7f050122;
    public static final int indigo_800=0x7f050123;
    public static final int indigo_900=0x7f050124;
    public static final int indigo_A100=0x7f050125;
    public static final int indigo_A200=0x7f050126;
    public static final int indigo_A400=0x7f050127;
    public static final int indigo_A700=0x7f050128;
    public static final int light=0x7f050129;
    public static final int lightGrey=0x7f05012a;
    public static final int light_blue_100=0x7f05012b;
    public static final int light_blue_200=0x7f05012c;
    public static final int light_blue_300=0x7f05012d;
    public static final int light_blue_400=0x7f05012e;
    public static final int light_blue_50=0x7f05012f;
    public static final int light_blue_500=0x7f050130;
    public static final int light_blue_600=0x7f050131;
    public static final int light_blue_700=0x7f050132;
    public static final int light_blue_800=0x7f050133;
    public static final int light_blue_900=0x7f050134;
    public static final int light_blue_A100=0x7f050135;
    public static final int light_blue_A200=0x7f050136;
    public static final int light_blue_A400=0x7f050137;
    public static final int light_blue_A700=0x7f050138;
    public static final int light_gray=0x7f050139;
    public static final int light_green_100=0x7f05013a;
    public static final int light_green_200=0x7f05013b;
    public static final int light_green_300=0x7f05013c;
    public static final int light_green_400=0x7f05013d;
    public static final int light_green_50=0x7f05013e;
    public static final int light_green_500=0x7f05013f;
    public static final int light_green_600=0x7f050140;
    public static final int light_green_700=0x7f050141;
    public static final int light_green_800=0x7f050142;
    public static final int light_green_900=0x7f050143;
    public static final int light_green_A100=0x7f050144;
    public static final int light_green_A200=0x7f050145;
    public static final int light_green_A400=0x7f050146;
    public static final int light_green_A700=0x7f050147;
    public static final int lightblue=0x7f050148;
    public static final int lime_100=0x7f050149;
    public static final int lime_200=0x7f05014a;
    public static final int lime_300=0x7f05014b;
    public static final int lime_400=0x7f05014c;
    public static final int lime_50=0x7f05014d;
    public static final int lime_500=0x7f05014e;
    public static final int lime_600=0x7f05014f;
    public static final int lime_700=0x7f050150;
    public static final int lime_800=0x7f050151;
    public static final int lime_900=0x7f050152;
    public static final int lime_A100=0x7f050153;
    public static final int lime_A200=0x7f050154;
    public static final int lime_A400=0x7f050155;
    public static final int lime_A700=0x7f050156;
    public static final int material_blue_grey_800=0x7f050157;
    public static final int material_blue_grey_900=0x7f050158;
    public static final int material_blue_grey_950=0x7f050159;
    public static final int material_cursor_color=0x7f05015a;
    public static final int material_deep_teal_200=0x7f05015b;
    public static final int material_deep_teal_500=0x7f05015c;
    public static final int material_grey_100=0x7f05015d;
    public static final int material_grey_300=0x7f05015e;
    public static final int material_grey_50=0x7f05015f;
    public static final int material_grey_600=0x7f050160;
    public static final int material_grey_800=0x7f050161;
    public static final int material_grey_850=0x7f050162;
    public static final int material_grey_900=0x7f050163;
    public static final int material_on_background_disabled=0x7f050164;
    public static final int material_on_background_emphasis_high_type=0x7f050165;
    public static final int material_on_background_emphasis_medium=0x7f050166;
    public static final int material_on_primary_disabled=0x7f050167;
    public static final int material_on_primary_emphasis_high_type=0x7f050168;
    public static final int material_on_primary_emphasis_medium=0x7f050169;
    public static final int material_on_surface_disabled=0x7f05016a;
    public static final int material_on_surface_emphasis_high_type=0x7f05016b;
    public static final int material_on_surface_emphasis_medium=0x7f05016c;
    public static final int material_on_surface_stroke=0x7f05016d;
    public static final int material_slider_active_tick_marks_color=0x7f05016e;
    public static final int material_slider_active_track_color=0x7f05016f;
    public static final int material_slider_halo_color=0x7f050170;
    public static final int material_slider_inactive_tick_marks_color=0x7f050171;
    public static final int material_slider_inactive_track_color=0x7f050172;
    public static final int material_slider_thumb_color=0x7f050173;
    public static final int material_timepicker_button_background=0x7f050174;
    public static final int material_timepicker_button_stroke=0x7f050175;
    public static final int material_timepicker_clock_text_color=0x7f050176;
    public static final int material_timepicker_clockface=0x7f050177;
    public static final int material_timepicker_modebutton_tint=0x7f050178;
    public static final int mtrl_bottom_nav_colored_item_tint=0x7f050179;
    public static final int mtrl_bottom_nav_colored_ripple_color=0x7f05017a;
    public static final int mtrl_bottom_nav_item_tint=0x7f05017b;
    public static final int mtrl_bottom_nav_ripple_color=0x7f05017c;
    public static final int mtrl_btn_bg_color_selector=0x7f05017d;
    public static final int mtrl_btn_ripple_color=0x7f05017e;
    public static final int mtrl_btn_stroke_color_selector=0x7f05017f;
    public static final int mtrl_btn_text_btn_bg_color_selector=0x7f050180;
    public static final int mtrl_btn_text_btn_ripple_color=0x7f050181;
    public static final int mtrl_btn_text_color_disabled=0x7f050182;
    public static final int mtrl_btn_text_color_selector=0x7f050183;
    public static final int mtrl_btn_transparent_bg_color=0x7f050184;
    public static final int mtrl_calendar_item_stroke_color=0x7f050185;
    public static final int mtrl_calendar_selected_range=0x7f050186;
    public static final int mtrl_card_view_foreground=0x7f050187;
    public static final int mtrl_card_view_ripple=0x7f050188;
    public static final int mtrl_chip_background_color=0x7f050189;
    public static final int mtrl_chip_close_icon_tint=0x7f05018a;
    public static final int mtrl_chip_surface_color=0x7f05018b;
    public static final int mtrl_chip_text_color=0x7f05018c;
    public static final int mtrl_choice_chip_background_color=0x7f05018d;
    public static final int mtrl_choice_chip_ripple_color=0x7f05018e;
    public static final int mtrl_choice_chip_text_color=0x7f05018f;
    public static final int mtrl_error=0x7f050190;
    public static final int mtrl_fab_bg_color_selector=0x7f050191;
    public static final int mtrl_fab_icon_text_color_selector=0x7f050192;
    public static final int mtrl_fab_ripple_color=0x7f050193;
    public static final int mtrl_filled_background_color=0x7f050194;
    public static final int mtrl_filled_icon_tint=0x7f050195;
    public static final int mtrl_filled_stroke_color=0x7f050196;
    public static final int mtrl_indicator_text_color=0x7f050197;
    public static final int mtrl_navigation_item_background_color=0x7f050198;
    public static final int mtrl_navigation_item_icon_tint=0x7f050199;
    public static final int mtrl_navigation_item_text_color=0x7f05019a;
    public static final int mtrl_on_primary_text_btn_text_color_selector=0x7f05019b;
    public static final int mtrl_on_surface_ripple_color=0x7f05019c;
    public static final int mtrl_outlined_icon_tint=0x7f05019d;
    public static final int mtrl_outlined_stroke_color=0x7f05019e;
    public static final int mtrl_popupmenu_overlay_color=0x7f05019f;
    public static final int mtrl_scrim_color=0x7f0501a0;
    public static final int mtrl_tabs_colored_ripple_color=0x7f0501a1;
    public static final int mtrl_tabs_icon_color_selector=0x7f0501a2;
    public static final int mtrl_tabs_icon_color_selector_colored=0x7f0501a3;
    public static final int mtrl_tabs_legacy_text_color_selector=0x7f0501a4;
    public static final int mtrl_tabs_ripple_color=0x7f0501a5;
    public static final int mtrl_text_btn_text_color_selector=0x7f0501a6;
    public static final int mtrl_textinput_default_box_stroke_color=0x7f0501a7;
    public static final int mtrl_textinput_disabled_color=0x7f0501a8;
    public static final int mtrl_textinput_filled_box_default_background_color=0x7f0501a9;
    public static final int mtrl_textinput_focused_box_stroke_color=0x7f0501aa;
    public static final int mtrl_textinput_hovered_box_stroke_color=0x7f0501ab;
    public static final int newBaground=0x7f0501ac;
    public static final int newbg=0x7f0501ad;
    public static final int notification_action_color_filter=0x7f0501ae;
    public static final int notification_icon_bg_color=0x7f0501af;
    public static final int notification_material_background_media_default_color=0x7f0501b0;
    public static final int orange_100=0x7f0501b1;
    public static final int orange_200=0x7f0501b2;
    public static final int orange_300=0x7f0501b3;
    public static final int orange_400=0x7f0501b4;
    public static final int orange_50=0x7f0501b5;
    public static final int orange_500=0x7f0501b6;
    public static final int orange_600=0x7f0501b7;
    public static final int orange_700=0x7f0501b8;
    public static final int orange_800=0x7f0501b9;
    public static final int orange_900=0x7f0501ba;
    public static final int orange_A100=0x7f0501bb;
    public static final int orange_A200=0x7f0501bc;
    public static final int orange_A400=0x7f0501bd;
    public static final int orange_A700=0x7f0501be;
    public static final int pink=0x7f0501bf;
    public static final int pink_100=0x7f0501c0;
    public static final int pink_200=0x7f0501c1;
    public static final int pink_300=0x7f0501c2;
    public static final int pink_400=0x7f0501c3;
    public static final int pink_50=0x7f0501c4;
    public static final int pink_500=0x7f0501c5;
    public static final int pink_600=0x7f0501c6;
    public static final int pink_700=0x7f0501c7;
    public static final int pink_800=0x7f0501c8;
    public static final int pink_900=0x7f0501c9;
    public static final int pink_A100=0x7f0501ca;
    public static final int pink_A200=0x7f0501cb;
    public static final int pink_A400=0x7f0501cc;
    public static final int pink_A700=0x7f0501cd;
    public static final int places_autocomplete_error_button=0x7f0501ce;
    public static final int places_autocomplete_error_message=0x7f0501cf;
    public static final int places_autocomplete_fullscreen_background=0x7f0501d0;
    public static final int places_autocomplete_list_background=0x7f0501d1;
    public static final int places_autocomplete_prediction_primary_text=0x7f0501d2;
    public static final int places_autocomplete_prediction_primary_text_highlight=0x7f0501d3;
    public static final int places_autocomplete_prediction_secondary_text=0x7f0501d4;
    public static final int places_autocomplete_progress_tint=0x7f0501d5;
    public static final int places_autocomplete_search_hint=0x7f0501d6;
    public static final int places_autocomplete_search_text=0x7f0501d7;
    public static final int places_autocomplete_separator=0x7f0501d8;
    public static final int places_text_black_alpha_26=0x7f0501d9;
    public static final int places_text_black_alpha_87=0x7f0501da;
    public static final int places_text_white_alpha_26=0x7f0501db;
    public static final int places_text_white_alpha_87=0x7f0501dc;
    public static final int places_ui_default_primary=0x7f0501dd;
    public static final int places_ui_default_primary_dark=0x7f0501de;
    public static final int preference_fallback_accent_color=0x7f0501df;
    public static final int pressed_bg=0x7f0501e0;
    public static final int preview_bottom_size=0x7f0501e1;
    public static final int preview_bottom_toolbar_bg=0x7f0501e2;
    public static final int primary_dark_material_dark=0x7f0501e3;
    public static final int primary_dark_material_light=0x7f0501e4;
    public static final int primary_material_dark=0x7f0501e5;
    public static final int primary_material_light=0x7f0501e6;
    public static final int primary_text_default_material_dark=0x7f0501e7;
    public static final int primary_text_default_material_light=0x7f0501e8;
    public static final int primary_text_disabled_material_dark=0x7f0501e9;
    public static final int primary_text_disabled_material_light=0x7f0501ea;
    public static final int purple_100=0x7f0501eb;
    public static final int purple_200=0x7f0501ec;
    public static final int purple_300=0x7f0501ed;
    public static final int purple_400=0x7f0501ee;
    public static final int purple_50=0x7f0501ef;
    public static final int purple_500=0x7f0501f0;
    public static final int purple_600=0x7f0501f1;
    public static final int purple_700=0x7f0501f2;
    public static final int purple_800=0x7f0501f3;
    public static final int purple_900=0x7f0501f4;
    public static final int purple_A100=0x7f0501f5;
    public static final int purple_A200=0x7f0501f6;
    public static final int purple_A400=0x7f0501f7;
    public static final int purple_A700=0x7f0501f8;
    public static final int quantum_amber100=0x7f0501f9;
    public static final int quantum_amber200=0x7f0501fa;
    public static final int quantum_amber300=0x7f0501fb;
    public static final int quantum_amber400=0x7f0501fc;
    public static final int quantum_amber50=0x7f0501fd;
    public static final int quantum_amber500=0x7f0501fe;
    public static final int quantum_amber600=0x7f0501ff;
    public static final int quantum_amber700=0x7f050200;
    public static final int quantum_amber800=0x7f050201;
    public static final int quantum_amber900=0x7f050202;
    public static final int quantum_amberA100=0x7f050203;
    public static final int quantum_amberA200=0x7f050204;
    public static final int quantum_amberA400=0x7f050205;
    public static final int quantum_amberA700=0x7f050206;
    public static final int quantum_black_100=0x7f050207;
    public static final int quantum_black_divider=0x7f050208;
    public static final int quantum_black_hint_text=0x7f050209;
    public static final int quantum_black_secondary_text=0x7f05020a;
    public static final int quantum_black_text=0x7f05020b;
    public static final int quantum_bluegrey100=0x7f05020c;
    public static final int quantum_bluegrey200=0x7f05020d;
    public static final int quantum_bluegrey300=0x7f05020e;
    public static final int quantum_bluegrey400=0x7f05020f;
    public static final int quantum_bluegrey50=0x7f050210;
    public static final int quantum_bluegrey500=0x7f050211;
    public static final int quantum_bluegrey600=0x7f050212;
    public static final int quantum_bluegrey700=0x7f050213;
    public static final int quantum_bluegrey800=0x7f050214;
    public static final int quantum_bluegrey900=0x7f050215;
    public static final int quantum_bluegrey950=0x7f050216;
    public static final int quantum_brown=0x7f050217;
    public static final int quantum_brown100=0x7f050218;
    public static final int quantum_brown200=0x7f050219;
    public static final int quantum_brown300=0x7f05021a;
    public static final int quantum_brown400=0x7f05021b;
    public static final int quantum_brown50=0x7f05021c;
    public static final int quantum_brown500=0x7f05021d;
    public static final int quantum_brown600=0x7f05021e;
    public static final int quantum_brown700=0x7f05021f;
    public static final int quantum_brown800=0x7f050220;
    public static final int quantum_brown900=0x7f050221;
    public static final int quantum_cyan=0x7f050222;
    public static final int quantum_cyan100=0x7f050223;
    public static final int quantum_cyan200=0x7f050224;
    public static final int quantum_cyan300=0x7f050225;
    public static final int quantum_cyan400=0x7f050226;
    public static final int quantum_cyan50=0x7f050227;
    public static final int quantum_cyan500=0x7f050228;
    public static final int quantum_cyan600=0x7f050229;
    public static final int quantum_cyan700=0x7f05022a;
    public static final int quantum_cyan800=0x7f05022b;
    public static final int quantum_cyan900=0x7f05022c;
    public static final int quantum_cyanA100=0x7f05022d;
    public static final int quantum_cyanA200=0x7f05022e;
    public static final int quantum_cyanA400=0x7f05022f;
    public static final int quantum_cyanA700=0x7f050230;
    public static final int quantum_deeporange=0x7f050231;
    public static final int quantum_deeporange100=0x7f050232;
    public static final int quantum_deeporange200=0x7f050233;
    public static final int quantum_deeporange300=0x7f050234;
    public static final int quantum_deeporange400=0x7f050235;
    public static final int quantum_deeporange50=0x7f050236;
    public static final int quantum_deeporange500=0x7f050237;
    public static final int quantum_deeporange600=0x7f050238;
    public static final int quantum_deeporange700=0x7f050239;
    public static final int quantum_deeporange800=0x7f05023a;
    public static final int quantum_deeporange900=0x7f05023b;
    public static final int quantum_deeporangeA100=0x7f05023c;
    public static final int quantum_deeporangeA200=0x7f05023d;
    public static final int quantum_deeporangeA400=0x7f05023e;
    public static final int quantum_deeporangeA700=0x7f05023f;
    public static final int quantum_deeppurple=0x7f050240;
    public static final int quantum_deeppurple100=0x7f050241;
    public static final int quantum_deeppurple200=0x7f050242;
    public static final int quantum_deeppurple300=0x7f050243;
    public static final int quantum_deeppurple400=0x7f050244;
    public static final int quantum_deeppurple50=0x7f050245;
    public static final int quantum_deeppurple500=0x7f050246;
    public static final int quantum_deeppurple600=0x7f050247;
    public static final int quantum_deeppurple700=0x7f050248;
    public static final int quantum_deeppurple800=0x7f050249;
    public static final int quantum_deeppurple900=0x7f05024a;
    public static final int quantum_deeppurpleA100=0x7f05024b;
    public static final int quantum_deeppurpleA200=0x7f05024c;
    public static final int quantum_deeppurpleA400=0x7f05024d;
    public static final int quantum_deeppurpleA700=0x7f05024e;
    public static final int quantum_error_dark=0x7f05024f;
    public static final int quantum_error_light=0x7f050250;
    public static final int quantum_googblue=0x7f050251;
    public static final int quantum_googblue100=0x7f050252;
    public static final int quantum_googblue200=0x7f050253;
    public static final int quantum_googblue300=0x7f050254;
    public static final int quantum_googblue400=0x7f050255;
    public static final int quantum_googblue50=0x7f050256;
    public static final int quantum_googblue500=0x7f050257;
    public static final int quantum_googblue600=0x7f050258;
    public static final int quantum_googblue700=0x7f050259;
    public static final int quantum_googblue800=0x7f05025a;
    public static final int quantum_googblue900=0x7f05025b;
    public static final int quantum_googblueA100=0x7f05025c;
    public static final int quantum_googblueA200=0x7f05025d;
    public static final int quantum_googblueA400=0x7f05025e;
    public static final int quantum_googblueA700=0x7f05025f;
    public static final int quantum_googgreen=0x7f050260;
    public static final int quantum_googgreen100=0x7f050261;
    public static final int quantum_googgreen200=0x7f050262;
    public static final int quantum_googgreen300=0x7f050263;
    public static final int quantum_googgreen400=0x7f050264;
    public static final int quantum_googgreen50=0x7f050265;
    public static final int quantum_googgreen500=0x7f050266;
    public static final int quantum_googgreen600=0x7f050267;
    public static final int quantum_googgreen700=0x7f050268;
    public static final int quantum_googgreen800=0x7f050269;
    public static final int quantum_googgreen900=0x7f05026a;
    public static final int quantum_googgreenA100=0x7f05026b;
    public static final int quantum_googgreenA200=0x7f05026c;
    public static final int quantum_googgreenA400=0x7f05026d;
    public static final int quantum_googgreenA700=0x7f05026e;
    public static final int quantum_googred=0x7f05026f;
    public static final int quantum_googred100=0x7f050270;
    public static final int quantum_googred200=0x7f050271;
    public static final int quantum_googred300=0x7f050272;
    public static final int quantum_googred400=0x7f050273;
    public static final int quantum_googred50=0x7f050274;
    public static final int quantum_googred500=0x7f050275;
    public static final int quantum_googred600=0x7f050276;
    public static final int quantum_googred700=0x7f050277;
    public static final int quantum_googred800=0x7f050278;
    public static final int quantum_googred900=0x7f050279;
    public static final int quantum_googredA100=0x7f05027a;
    public static final int quantum_googredA200=0x7f05027b;
    public static final int quantum_googredA400=0x7f05027c;
    public static final int quantum_googredA700=0x7f05027d;
    public static final int quantum_googyellow=0x7f05027e;
    public static final int quantum_googyellow100=0x7f05027f;
    public static final int quantum_googyellow200=0x7f050280;
    public static final int quantum_googyellow300=0x7f050281;
    public static final int quantum_googyellow400=0x7f050282;
    public static final int quantum_googyellow50=0x7f050283;
    public static final int quantum_googyellow500=0x7f050284;
    public static final int quantum_googyellow600=0x7f050285;
    public static final int quantum_googyellow700=0x7f050286;
    public static final int quantum_googyellow800=0x7f050287;
    public static final int quantum_googyellow900=0x7f050288;
    public static final int quantum_googyellowA100=0x7f050289;
    public static final int quantum_googyellowA200=0x7f05028a;
    public static final int quantum_googyellowA400=0x7f05028b;
    public static final int quantum_googyellowA700=0x7f05028c;
    public static final int quantum_grey=0x7f05028d;
    public static final int quantum_grey100=0x7f05028e;
    public static final int quantum_grey200=0x7f05028f;
    public static final int quantum_grey300=0x7f050290;
    public static final int quantum_grey400=0x7f050291;
    public static final int quantum_grey50=0x7f050292;
    public static final int quantum_grey500=0x7f050293;
    public static final int quantum_grey600=0x7f050294;
    public static final int quantum_grey700=0x7f050295;
    public static final int quantum_grey800=0x7f050296;
    public static final int quantum_grey900=0x7f050297;
    public static final int quantum_greyblack1000=0x7f050298;
    public static final int quantum_greywhite1000=0x7f050299;
    public static final int quantum_indigo=0x7f05029a;
    public static final int quantum_indigo100=0x7f05029b;
    public static final int quantum_indigo200=0x7f05029c;
    public static final int quantum_indigo300=0x7f05029d;
    public static final int quantum_indigo400=0x7f05029e;
    public static final int quantum_indigo50=0x7f05029f;
    public static final int quantum_indigo500=0x7f0502a0;
    public static final int quantum_indigo600=0x7f0502a1;
    public static final int quantum_indigo700=0x7f0502a2;
    public static final int quantum_indigo800=0x7f0502a3;
    public static final int quantum_indigo900=0x7f0502a4;
    public static final int quantum_indigoA100=0x7f0502a5;
    public static final int quantum_indigoA200=0x7f0502a6;
    public static final int quantum_indigoA400=0x7f0502a7;
    public static final int quantum_indigoA700=0x7f0502a8;
    public static final int quantum_lightblue=0x7f0502a9;
    public static final int quantum_lightblue100=0x7f0502aa;
    public static final int quantum_lightblue200=0x7f0502ab;
    public static final int quantum_lightblue300=0x7f0502ac;
    public static final int quantum_lightblue400=0x7f0502ad;
    public static final int quantum_lightblue50=0x7f0502ae;
    public static final int quantum_lightblue500=0x7f0502af;
    public static final int quantum_lightblue600=0x7f0502b0;
    public static final int quantum_lightblue700=0x7f0502b1;
    public static final int quantum_lightblue800=0x7f0502b2;
    public static final int quantum_lightblue900=0x7f0502b3;
    public static final int quantum_lightblueA100=0x7f0502b4;
    public static final int quantum_lightblueA200=0x7f0502b5;
    public static final int quantum_lightblueA400=0x7f0502b6;
    public static final int quantum_lightblueA700=0x7f0502b7;
    public static final int quantum_lightgreen=0x7f0502b8;
    public static final int quantum_lightgreen100=0x7f0502b9;
    public static final int quantum_lightgreen200=0x7f0502ba;
    public static final int quantum_lightgreen300=0x7f0502bb;
    public static final int quantum_lightgreen400=0x7f0502bc;
    public static final int quantum_lightgreen50=0x7f0502bd;
    public static final int quantum_lightgreen500=0x7f0502be;
    public static final int quantum_lightgreen600=0x7f0502bf;
    public static final int quantum_lightgreen700=0x7f0502c0;
    public static final int quantum_lightgreen800=0x7f0502c1;
    public static final int quantum_lightgreen900=0x7f0502c2;
    public static final int quantum_lightgreenA100=0x7f0502c3;
    public static final int quantum_lightgreenA200=0x7f0502c4;
    public static final int quantum_lightgreenA400=0x7f0502c5;
    public static final int quantum_lightgreenA700=0x7f0502c6;
    public static final int quantum_lime=0x7f0502c7;
    public static final int quantum_lime100=0x7f0502c8;
    public static final int quantum_lime200=0x7f0502c9;
    public static final int quantum_lime300=0x7f0502ca;
    public static final int quantum_lime400=0x7f0502cb;
    public static final int quantum_lime50=0x7f0502cc;
    public static final int quantum_lime500=0x7f0502cd;
    public static final int quantum_lime600=0x7f0502ce;
    public static final int quantum_lime700=0x7f0502cf;
    public static final int quantum_lime800=0x7f0502d0;
    public static final int quantum_lime900=0x7f0502d1;
    public static final int quantum_limeA100=0x7f0502d2;
    public static final int quantum_limeA200=0x7f0502d3;
    public static final int quantum_limeA400=0x7f0502d4;
    public static final int quantum_limeA700=0x7f0502d5;
    public static final int quantum_orange=0x7f0502d6;
    public static final int quantum_orange100=0x7f0502d7;
    public static final int quantum_orange200=0x7f0502d8;
    public static final int quantum_orange300=0x7f0502d9;
    public static final int quantum_orange400=0x7f0502da;
    public static final int quantum_orange50=0x7f0502db;
    public static final int quantum_orange500=0x7f0502dc;
    public static final int quantum_orange600=0x7f0502dd;
    public static final int quantum_orange700=0x7f0502de;
    public static final int quantum_orange800=0x7f0502df;
    public static final int quantum_orange900=0x7f0502e0;
    public static final int quantum_orangeA100=0x7f0502e1;
    public static final int quantum_orangeA200=0x7f0502e2;
    public static final int quantum_orangeA400=0x7f0502e3;
    public static final int quantum_orangeA700=0x7f0502e4;
    public static final int quantum_pink=0x7f0502e5;
    public static final int quantum_pink100=0x7f0502e6;
    public static final int quantum_pink200=0x7f0502e7;
    public static final int quantum_pink300=0x7f0502e8;
    public static final int quantum_pink400=0x7f0502e9;
    public static final int quantum_pink50=0x7f0502ea;
    public static final int quantum_pink500=0x7f0502eb;
    public static final int quantum_pink600=0x7f0502ec;
    public static final int quantum_pink700=0x7f0502ed;
    public static final int quantum_pink800=0x7f0502ee;
    public static final int quantum_pink900=0x7f0502ef;
    public static final int quantum_pinkA100=0x7f0502f0;
    public static final int quantum_pinkA200=0x7f0502f1;
    public static final int quantum_pinkA400=0x7f0502f2;
    public static final int quantum_pinkA700=0x7f0502f3;
    public static final int quantum_purple=0x7f0502f4;
    public static final int quantum_purple100=0x7f0502f5;
    public static final int quantum_purple200=0x7f0502f6;
    public static final int quantum_purple300=0x7f0502f7;
    public static final int quantum_purple400=0x7f0502f8;
    public static final int quantum_purple50=0x7f0502f9;
    public static final int quantum_purple500=0x7f0502fa;
    public static final int quantum_purple600=0x7f0502fb;
    public static final int quantum_purple700=0x7f0502fc;
    public static final int quantum_purple800=0x7f0502fd;
    public static final int quantum_purple900=0x7f0502fe;
    public static final int quantum_purpleA100=0x7f0502ff;
    public static final int quantum_purpleA200=0x7f050300;
    public static final int quantum_purpleA400=0x7f050301;
    public static final int quantum_purpleA700=0x7f050302;
    public static final int quantum_teal=0x7f050303;
    public static final int quantum_teal100=0x7f050304;
    public static final int quantum_teal200=0x7f050305;
    public static final int quantum_teal300=0x7f050306;
    public static final int quantum_teal400=0x7f050307;
    public static final int quantum_teal50=0x7f050308;
    public static final int quantum_teal500=0x7f050309;
    public static final int quantum_teal600=0x7f05030a;
    public static final int quantum_teal700=0x7f05030b;
    public static final int quantum_teal800=0x7f05030c;
    public static final int quantum_teal900=0x7f05030d;
    public static final int quantum_tealA100=0x7f05030e;
    public static final int quantum_tealA200=0x7f05030f;
    public static final int quantum_tealA400=0x7f050310;
    public static final int quantum_tealA700=0x7f050311;
    public static final int quantum_vanillablue100=0x7f050312;
    public static final int quantum_vanillablue200=0x7f050313;
    public static final int quantum_vanillablue300=0x7f050314;
    public static final int quantum_vanillablue400=0x7f050315;
    public static final int quantum_vanillablue50=0x7f050316;
    public static final int quantum_vanillablue500=0x7f050317;
    public static final int quantum_vanillablue600=0x7f050318;
    public static final int quantum_vanillablue700=0x7f050319;
    public static final int quantum_vanillablue800=0x7f05031a;
    public static final int quantum_vanillablue900=0x7f05031b;
    public static final int quantum_vanillablueA100=0x7f05031c;
    public static final int quantum_vanillablueA200=0x7f05031d;
    public static final int quantum_vanillablueA400=0x7f05031e;
    public static final int quantum_vanillablueA700=0x7f05031f;
    public static final int quantum_vanillagreen100=0x7f050320;
    public static final int quantum_vanillagreen200=0x7f050321;
    public static final int quantum_vanillagreen300=0x7f050322;
    public static final int quantum_vanillagreen400=0x7f050323;
    public static final int quantum_vanillagreen50=0x7f050324;
    public static final int quantum_vanillagreen500=0x7f050325;
    public static final int quantum_vanillagreen600=0x7f050326;
    public static final int quantum_vanillagreen700=0x7f050327;
    public static final int quantum_vanillagreen800=0x7f050328;
    public static final int quantum_vanillagreen900=0x7f050329;
    public static final int quantum_vanillagreenA100=0x7f05032a;
    public static final int quantum_vanillagreenA200=0x7f05032b;
    public static final int quantum_vanillagreenA400=0x7f05032c;
    public static final int quantum_vanillagreenA700=0x7f05032d;
    public static final int quantum_vanillared100=0x7f05032e;
    public static final int quantum_vanillared200=0x7f05032f;
    public static final int quantum_vanillared300=0x7f050330;
    public static final int quantum_vanillared400=0x7f050331;
    public static final int quantum_vanillared50=0x7f050332;
    public static final int quantum_vanillared500=0x7f050333;
    public static final int quantum_vanillared600=0x7f050334;
    public static final int quantum_vanillared700=0x7f050335;
    public static final int quantum_vanillared800=0x7f050336;
    public static final int quantum_vanillared900=0x7f050337;
    public static final int quantum_vanillaredA100=0x7f050338;
    public static final int quantum_vanillaredA200=0x7f050339;
    public static final int quantum_vanillaredA400=0x7f05033a;
    public static final int quantum_vanillaredA700=0x7f05033b;
    public static final int quantum_white_100=0x7f05033c;
    public static final int quantum_white_divider=0x7f05033d;
    public static final int quantum_white_hint_text=0x7f05033e;
    public static final int quantum_white_secondary_text=0x7f05033f;
    public static final int quantum_white_text=0x7f050340;
    public static final int quantum_yellow=0x7f050341;
    public static final int quantum_yellow100=0x7f050342;
    public static final int quantum_yellow200=0x7f050343;
    public static final int quantum_yellow300=0x7f050344;
    public static final int quantum_yellow400=0x7f050345;
    public static final int quantum_yellow50=0x7f050346;
    public static final int quantum_yellow500=0x7f050347;
    public static final int quantum_yellow600=0x7f050348;
    public static final int quantum_yellow700=0x7f050349;
    public static final int quantum_yellow800=0x7f05034a;
    public static final int quantum_yellow900=0x7f05034b;
    public static final int quantum_yellowA100=0x7f05034c;
    public static final int quantum_yellowA200=0x7f05034d;
    public static final int quantum_yellowA400=0x7f05034e;
    public static final int quantum_yellowA700=0x7f05034f;
    public static final int radiobutton_themeable_attribute_color=0x7f050350;
    public static final int red=0x7f050351;
    public static final int red_100=0x7f050352;
    public static final int red_200=0x7f050353;
    public static final int red_300=0x7f050354;
    public static final int red_400=0x7f050355;
    public static final int red_50=0x7f050356;
    public static final int red_500=0x7f050357;
    public static final int red_600=0x7f050358;
    public static final int red_700=0x7f050359;
    public static final int red_800=0x7f05035a;
    public static final int red_900=0x7f05035b;
    public static final int red_A100=0x7f05035c;
    public static final int red_A200=0x7f05035d;
    public static final int red_A400=0x7f05035e;
    public static final int red_A700=0x7f05035f;
    public static final int ripple_material_dark=0x7f050360;
    public static final int ripple_material_light=0x7f050361;
    public static final int secondary_text_default_material_dark=0x7f050362;
    public static final int secondary_text_default_material_light=0x7f050363;
    public static final int secondary_text_disabled_material_dark=0x7f050364;
    public static final int secondary_text_disabled_material_light=0x7f050365;
    public static final int switch_thumb_disabled_material_dark=0x7f050366;
    public static final int switch_thumb_disabled_material_light=0x7f050367;
    public static final int switch_thumb_material_dark=0x7f050368;
    public static final int switch_thumb_material_light=0x7f050369;
    public static final int switch_thumb_normal_material_dark=0x7f05036a;
    public static final int switch_thumb_normal_material_light=0x7f05036b;
    public static final int teal_100=0x7f05036c;
    public static final int teal_200=0x7f05036d;
    public static final int teal_300=0x7f05036e;
    public static final int teal_400=0x7f05036f;
    public static final int teal_50=0x7f050370;
    public static final int teal_500=0x7f050371;
    public static final int teal_600=0x7f050372;
    public static final int teal_700=0x7f050373;
    public static final int teal_800=0x7f050374;
    public static final int teal_900=0x7f050375;
    public static final int teal_A100=0x7f050376;
    public static final int teal_A200=0x7f050377;
    public static final int teal_A400=0x7f050378;
    public static final int teal_A700=0x7f050379;
    public static final int test=0x7f05037a;
    public static final int test_mtrl_calendar_day=0x7f05037b;
    public static final int test_mtrl_calendar_day_selected=0x7f05037c;
    public static final int text=0x7f05037d;
    public static final int title=0x7f05037e;
    public static final int tooltip_background_dark=0x7f05037f;
    public static final int tooltip_background_light=0x7f050380;
    public static final int transparent=0x7f050381;
    public static final int ucrop_color_crop_background=0x7f050382;
    public static final int ucrop_color_default_crop_frame=0x7f050383;
    public static final int ucrop_color_default_crop_grid=0x7f050384;
    public static final int ucrop_color_default_dimmed=0x7f050385;
    public static final int ucrop_color_default_logo=0x7f050386;
    public static final int ucrop_color_progress_wheel_line=0x7f050387;
    public static final int ucrop_color_statusbar=0x7f050388;
    public static final int ucrop_color_toolbar=0x7f050389;
    public static final int ucrop_color_toolbar_widget=0x7f05038a;
    public static final int ucrop_color_widget=0x7f05038b;
    public static final int ucrop_color_widget_active=0x7f05038c;
    public static final int ucrop_color_widget_background=0x7f05038d;
    public static final int ucrop_color_widget_text=0x7f05038e;
    public static final int ucrop_scale_text_view_selector=0x7f05038f;
    public static final int white=0x7f050390;
    public static final int yellow=0x7f050391;
    public static final int yellow_100=0x7f050392;
    public static final int yellow_200=0x7f050393;
    public static final int yellow_300=0x7f050394;
    public static final int yellow_400=0x7f050395;
    public static final int yellow_50=0x7f050396;
    public static final int yellow_500=0x7f050397;
    public static final int yellow_600=0x7f050398;
    public static final int yellow_700=0x7f050399;
    public static final int yellow_800=0x7f05039a;
    public static final int yellow_900=0x7f05039b;
    public static final int yellow_A100=0x7f05039c;
    public static final int yellow_A200=0x7f05039d;
    public static final int yellow_A400=0x7f05039e;
    public static final int yellow_A700=0x7f05039f;
    public static final int zhihu_album_dropdown_count_text=0x7f0503a0;
    public static final int zhihu_album_dropdown_thumbnail_placeholder=0x7f0503a1;
    public static final int zhihu_album_dropdown_title_text=0x7f0503a2;
    public static final int zhihu_album_empty_view=0x7f0503a3;
    public static final int zhihu_album_popup_bg=0x7f0503a4;
    public static final int zhihu_bottom_toolbar_apply=0x7f0503a5;
    public static final int zhihu_bottom_toolbar_apply_text=0x7f0503a6;
    public static final int zhihu_bottom_toolbar_apply_text_disable=0x7f0503a7;
    public static final int zhihu_bottom_toolbar_bg=0x7f0503a8;
    public static final int zhihu_bottom_toolbar_preview=0x7f0503a9;
    public static final int zhihu_bottom_toolbar_preview_text=0x7f0503aa;
    public static final int zhihu_bottom_toolbar_preview_text_disable=0x7f0503ab;
    public static final int zhihu_capture=0x7f0503ac;
    public static final int zhihu_check_original_radio_disable=0x7f0503ad;
    public static final int zhihu_item_checkCircle_backgroundColor=0x7f0503ae;
    public static final int zhihu_item_checkCircle_borderColor=0x7f0503af;
    public static final int zhihu_item_placeholder=0x7f0503b0;
    public static final int zhihu_page_bg=0x7f0503b1;
    public static final int zhihu_preview_bottom_toolbar_apply=0x7f0503b2;
    public static final int zhihu_preview_bottom_toolbar_apply_text=0x7f0503b3;
    public static final int zhihu_preview_bottom_toolbar_apply_text_disable=0x7f0503b4;
    public static final int zhihu_preview_bottom_toolbar_back_text=0x7f0503b5;
    public static final int zhihu_primary=0x7f0503b6;
    public static final int zhihu_primary_dark=0x7f0503b7;
  }
  public static final class dimen {
    public static final int _100sdp=0x7f060000;
    public static final int _100ssp=0x7f060001;
    public static final int _101sdp=0x7f060002;
    public static final int _102sdp=0x7f060003;
    public static final int _103sdp=0x7f060004;
    public static final int _104sdp=0x7f060005;
    public static final int _105sdp=0x7f060006;
    public static final int _106sdp=0x7f060007;
    public static final int _107sdp=0x7f060008;
    public static final int _108sdp=0x7f060009;
    public static final int _109sdp=0x7f06000a;
    public static final int _10sdp=0x7f06000b;
    public static final int _10ssp=0x7f06000c;
    public static final int _110sdp=0x7f06000d;
    public static final int _111sdp=0x7f06000e;
    public static final int _112sdp=0x7f06000f;
    public static final int _113sdp=0x7f060010;
    public static final int _114sdp=0x7f060011;
    public static final int _115sdp=0x7f060012;
    public static final int _116sdp=0x7f060013;
    public static final int _117sdp=0x7f060014;
    public static final int _118sdp=0x7f060015;
    public static final int _119sdp=0x7f060016;
    public static final int _11sdp=0x7f060017;
    public static final int _11ssp=0x7f060018;
    public static final int _120sdp=0x7f060019;
    public static final int _121sdp=0x7f06001a;
    public static final int _122sdp=0x7f06001b;
    public static final int _123sdp=0x7f06001c;
    public static final int _124sdp=0x7f06001d;
    public static final int _125sdp=0x7f06001e;
    public static final int _126sdp=0x7f06001f;
    public static final int _127sdp=0x7f060020;
    public static final int _128sdp=0x7f060021;
    public static final int _129sdp=0x7f060022;
    public static final int _12sdp=0x7f060023;
    public static final int _12ssp=0x7f060024;
    public static final int _130sdp=0x7f060025;
    public static final int _131sdp=0x7f060026;
    public static final int _132sdp=0x7f060027;
    public static final int _133sdp=0x7f060028;
    public static final int _134sdp=0x7f060029;
    public static final int _135sdp=0x7f06002a;
    public static final int _136sdp=0x7f06002b;
    public static final int _137sdp=0x7f06002c;
    public static final int _138sdp=0x7f06002d;
    public static final int _139sdp=0x7f06002e;
    public static final int _13sdp=0x7f06002f;
    public static final int _13ssp=0x7f060030;
    public static final int _140sdp=0x7f060031;
    public static final int _141sdp=0x7f060032;
    public static final int _142sdp=0x7f060033;
    public static final int _143sdp=0x7f060034;
    public static final int _144sdp=0x7f060035;
    public static final int _145sdp=0x7f060036;
    public static final int _146sdp=0x7f060037;
    public static final int _147sdp=0x7f060038;
    public static final int _148sdp=0x7f060039;
    public static final int _149sdp=0x7f06003a;
    public static final int _14sdp=0x7f06003b;
    public static final int _14ssp=0x7f06003c;
    public static final int _150sdp=0x7f06003d;
    public static final int _151sdp=0x7f06003e;
    public static final int _152sdp=0x7f06003f;
    public static final int _153sdp=0x7f060040;
    public static final int _154sdp=0x7f060041;
    public static final int _155sdp=0x7f060042;
    public static final int _156sdp=0x7f060043;
    public static final int _157sdp=0x7f060044;
    public static final int _158sdp=0x7f060045;
    public static final int _159sdp=0x7f060046;
    public static final int _15sdp=0x7f060047;
    public static final int _15ssp=0x7f060048;
    public static final int _160sdp=0x7f060049;
    public static final int _161sdp=0x7f06004a;
    public static final int _162sdp=0x7f06004b;
    public static final int _163sdp=0x7f06004c;
    public static final int _164sdp=0x7f06004d;
    public static final int _165sdp=0x7f06004e;
    public static final int _166sdp=0x7f06004f;
    public static final int _167sdp=0x7f060050;
    public static final int _168sdp=0x7f060051;
    public static final int _169sdp=0x7f060052;
    public static final int _16sdp=0x7f060053;
    public static final int _16ssp=0x7f060054;
    public static final int _170sdp=0x7f060055;
    public static final int _171sdp=0x7f060056;
    public static final int _172sdp=0x7f060057;
    public static final int _173sdp=0x7f060058;
    public static final int _174sdp=0x7f060059;
    public static final int _175sdp=0x7f06005a;
    public static final int _176sdp=0x7f06005b;
    public static final int _177sdp=0x7f06005c;
    public static final int _178sdp=0x7f06005d;
    public static final int _179sdp=0x7f06005e;
    public static final int _17sdp=0x7f06005f;
    public static final int _17ssp=0x7f060060;
    public static final int _180sdp=0x7f060061;
    public static final int _181sdp=0x7f060062;
    public static final int _182sdp=0x7f060063;
    public static final int _183sdp=0x7f060064;
    public static final int _184sdp=0x7f060065;
    public static final int _185sdp=0x7f060066;
    public static final int _186sdp=0x7f060067;
    public static final int _187sdp=0x7f060068;
    public static final int _188sdp=0x7f060069;
    public static final int _189sdp=0x7f06006a;
    public static final int _18sdp=0x7f06006b;
    public static final int _18ssp=0x7f06006c;
    public static final int _190sdp=0x7f06006d;
    public static final int _191sdp=0x7f06006e;
    public static final int _192sdp=0x7f06006f;
    public static final int _193sdp=0x7f060070;
    public static final int _194sdp=0x7f060071;
    public static final int _195sdp=0x7f060072;
    public static final int _196sdp=0x7f060073;
    public static final int _197sdp=0x7f060074;
    public static final int _198sdp=0x7f060075;
    public static final int _199sdp=0x7f060076;
    public static final int _19sdp=0x7f060077;
    public static final int _19ssp=0x7f060078;
    public static final int _1sdp=0x7f060079;
    public static final int _1ssp=0x7f06007a;
    public static final int _200sdp=0x7f06007b;
    public static final int _201sdp=0x7f06007c;
    public static final int _202sdp=0x7f06007d;
    public static final int _203sdp=0x7f06007e;
    public static final int _204sdp=0x7f06007f;
    public static final int _205sdp=0x7f060080;
    public static final int _206sdp=0x7f060081;
    public static final int _207sdp=0x7f060082;
    public static final int _208sdp=0x7f060083;
    public static final int _209sdp=0x7f060084;
    public static final int _20sdp=0x7f060085;
    public static final int _20ssp=0x7f060086;
    public static final int _210sdp=0x7f060087;
    public static final int _211sdp=0x7f060088;
    public static final int _212sdp=0x7f060089;
    public static final int _213sdp=0x7f06008a;
    public static final int _214sdp=0x7f06008b;
    public static final int _215sdp=0x7f06008c;
    public static final int _216sdp=0x7f06008d;
    public static final int _217sdp=0x7f06008e;
    public static final int _218sdp=0x7f06008f;
    public static final int _219sdp=0x7f060090;
    public static final int _21sdp=0x7f060091;
    public static final int _21ssp=0x7f060092;
    public static final int _220sdp=0x7f060093;
    public static final int _221sdp=0x7f060094;
    public static final int _222sdp=0x7f060095;
    public static final int _223sdp=0x7f060096;
    public static final int _224sdp=0x7f060097;
    public static final int _225sdp=0x7f060098;
    public static final int _226sdp=0x7f060099;
    public static final int _227sdp=0x7f06009a;
    public static final int _228sdp=0x7f06009b;
    public static final int _229sdp=0x7f06009c;
    public static final int _22sdp=0x7f06009d;
    public static final int _22ssp=0x7f06009e;
    public static final int _230sdp=0x7f06009f;
    public static final int _231sdp=0x7f0600a0;
    public static final int _232sdp=0x7f0600a1;
    public static final int _233sdp=0x7f0600a2;
    public static final int _234sdp=0x7f0600a3;
    public static final int _235sdp=0x7f0600a4;
    public static final int _236sdp=0x7f0600a5;
    public static final int _237sdp=0x7f0600a6;
    public static final int _238sdp=0x7f0600a7;
    public static final int _239sdp=0x7f0600a8;
    public static final int _23sdp=0x7f0600a9;
    public static final int _23ssp=0x7f0600aa;
    public static final int _240sdp=0x7f0600ab;
    public static final int _241sdp=0x7f0600ac;
    public static final int _242sdp=0x7f0600ad;
    public static final int _243sdp=0x7f0600ae;
    public static final int _244sdp=0x7f0600af;
    public static final int _245sdp=0x7f0600b0;
    public static final int _246sdp=0x7f0600b1;
    public static final int _247sdp=0x7f0600b2;
    public static final int _248sdp=0x7f0600b3;
    public static final int _249sdp=0x7f0600b4;
    public static final int _24sdp=0x7f0600b5;
    public static final int _24ssp=0x7f0600b6;
    public static final int _250sdp=0x7f0600b7;
    public static final int _251sdp=0x7f0600b8;
    public static final int _252sdp=0x7f0600b9;
    public static final int _253sdp=0x7f0600ba;
    public static final int _254sdp=0x7f0600bb;
    public static final int _255sdp=0x7f0600bc;
    public static final int _256sdp=0x7f0600bd;
    public static final int _257sdp=0x7f0600be;
    public static final int _258sdp=0x7f0600bf;
    public static final int _259sdp=0x7f0600c0;
    public static final int _25sdp=0x7f0600c1;
    public static final int _25ssp=0x7f0600c2;
    public static final int _260sdp=0x7f0600c3;
    public static final int _261sdp=0x7f0600c4;
    public static final int _262sdp=0x7f0600c5;
    public static final int _263sdp=0x7f0600c6;
    public static final int _264sdp=0x7f0600c7;
    public static final int _265sdp=0x7f0600c8;
    public static final int _266sdp=0x7f0600c9;
    public static final int _267sdp=0x7f0600ca;
    public static final int _268sdp=0x7f0600cb;
    public static final int _269sdp=0x7f0600cc;
    public static final int _26sdp=0x7f0600cd;
    public static final int _26ssp=0x7f0600ce;
    public static final int _270sdp=0x7f0600cf;
    public static final int _271sdp=0x7f0600d0;
    public static final int _272sdp=0x7f0600d1;
    public static final int _273sdp=0x7f0600d2;
    public static final int _274sdp=0x7f0600d3;
    public static final int _275sdp=0x7f0600d4;
    public static final int _276sdp=0x7f0600d5;
    public static final int _277sdp=0x7f0600d6;
    public static final int _278sdp=0x7f0600d7;
    public static final int _279sdp=0x7f0600d8;
    public static final int _27sdp=0x7f0600d9;
    public static final int _27ssp=0x7f0600da;
    public static final int _280sdp=0x7f0600db;
    public static final int _281sdp=0x7f0600dc;
    public static final int _282sdp=0x7f0600dd;
    public static final int _283sdp=0x7f0600de;
    public static final int _284sdp=0x7f0600df;
    public static final int _285sdp=0x7f0600e0;
    public static final int _286sdp=0x7f0600e1;
    public static final int _287sdp=0x7f0600e2;
    public static final int _288sdp=0x7f0600e3;
    public static final int _289sdp=0x7f0600e4;
    public static final int _28sdp=0x7f0600e5;
    public static final int _28ssp=0x7f0600e6;
    public static final int _290sdp=0x7f0600e7;
    public static final int _291sdp=0x7f0600e8;
    public static final int _292sdp=0x7f0600e9;
    public static final int _293sdp=0x7f0600ea;
    public static final int _294sdp=0x7f0600eb;
    public static final int _295sdp=0x7f0600ec;
    public static final int _296sdp=0x7f0600ed;
    public static final int _297sdp=0x7f0600ee;
    public static final int _298sdp=0x7f0600ef;
    public static final int _299sdp=0x7f0600f0;
    public static final int _29sdp=0x7f0600f1;
    public static final int _29ssp=0x7f0600f2;
    public static final int _2sdp=0x7f0600f3;
    public static final int _2ssp=0x7f0600f4;
    public static final int _300sdp=0x7f0600f5;
    public static final int _301sdp=0x7f0600f6;
    public static final int _302sdp=0x7f0600f7;
    public static final int _303sdp=0x7f0600f8;
    public static final int _304sdp=0x7f0600f9;
    public static final int _305sdp=0x7f0600fa;
    public static final int _306sdp=0x7f0600fb;
    public static final int _307sdp=0x7f0600fc;
    public static final int _308sdp=0x7f0600fd;
    public static final int _309sdp=0x7f0600fe;
    public static final int _30sdp=0x7f0600ff;
    public static final int _30ssp=0x7f060100;
    public static final int _310sdp=0x7f060101;
    public static final int _311sdp=0x7f060102;
    public static final int _312sdp=0x7f060103;
    public static final int _313sdp=0x7f060104;
    public static final int _314sdp=0x7f060105;
    public static final int _315sdp=0x7f060106;
    public static final int _316sdp=0x7f060107;
    public static final int _317sdp=0x7f060108;
    public static final int _318sdp=0x7f060109;
    public static final int _319sdp=0x7f06010a;
    public static final int _31sdp=0x7f06010b;
    public static final int _31ssp=0x7f06010c;
    public static final int _320sdp=0x7f06010d;
    public static final int _321sdp=0x7f06010e;
    public static final int _322sdp=0x7f06010f;
    public static final int _323sdp=0x7f060110;
    public static final int _324sdp=0x7f060111;
    public static final int _325sdp=0x7f060112;
    public static final int _326sdp=0x7f060113;
    public static final int _327sdp=0x7f060114;
    public static final int _328sdp=0x7f060115;
    public static final int _329sdp=0x7f060116;
    public static final int _32sdp=0x7f060117;
    public static final int _32ssp=0x7f060118;
    public static final int _330sdp=0x7f060119;
    public static final int _331sdp=0x7f06011a;
    public static final int _332sdp=0x7f06011b;
    public static final int _333sdp=0x7f06011c;
    public static final int _334sdp=0x7f06011d;
    public static final int _335sdp=0x7f06011e;
    public static final int _336sdp=0x7f06011f;
    public static final int _337sdp=0x7f060120;
    public static final int _338sdp=0x7f060121;
    public static final int _339sdp=0x7f060122;
    public static final int _33sdp=0x7f060123;
    public static final int _33ssp=0x7f060124;
    public static final int _340sdp=0x7f060125;
    public static final int _341sdp=0x7f060126;
    public static final int _342sdp=0x7f060127;
    public static final int _343sdp=0x7f060128;
    public static final int _344sdp=0x7f060129;
    public static final int _345sdp=0x7f06012a;
    public static final int _346sdp=0x7f06012b;
    public static final int _347sdp=0x7f06012c;
    public static final int _348sdp=0x7f06012d;
    public static final int _349sdp=0x7f06012e;
    public static final int _34sdp=0x7f06012f;
    public static final int _34ssp=0x7f060130;
    public static final int _350sdp=0x7f060131;
    public static final int _351sdp=0x7f060132;
    public static final int _352sdp=0x7f060133;
    public static final int _353sdp=0x7f060134;
    public static final int _354sdp=0x7f060135;
    public static final int _355sdp=0x7f060136;
    public static final int _356sdp=0x7f060137;
    public static final int _357sdp=0x7f060138;
    public static final int _358sdp=0x7f060139;
    public static final int _359sdp=0x7f06013a;
    public static final int _35sdp=0x7f06013b;
    public static final int _35ssp=0x7f06013c;
    public static final int _360sdp=0x7f06013d;
    public static final int _361sdp=0x7f06013e;
    public static final int _362sdp=0x7f06013f;
    public static final int _363sdp=0x7f060140;
    public static final int _364sdp=0x7f060141;
    public static final int _365sdp=0x7f060142;
    public static final int _366sdp=0x7f060143;
    public static final int _367sdp=0x7f060144;
    public static final int _368sdp=0x7f060145;
    public static final int _369sdp=0x7f060146;
    public static final int _36sdp=0x7f060147;
    public static final int _36ssp=0x7f060148;
    public static final int _370sdp=0x7f060149;
    public static final int _371sdp=0x7f06014a;
    public static final int _372sdp=0x7f06014b;
    public static final int _373sdp=0x7f06014c;
    public static final int _374sdp=0x7f06014d;
    public static final int _375sdp=0x7f06014e;
    public static final int _376sdp=0x7f06014f;
    public static final int _377sdp=0x7f060150;
    public static final int _378sdp=0x7f060151;
    public static final int _379sdp=0x7f060152;
    public static final int _37sdp=0x7f060153;
    public static final int _37ssp=0x7f060154;
    public static final int _380sdp=0x7f060155;
    public static final int _381sdp=0x7f060156;
    public static final int _382sdp=0x7f060157;
    public static final int _383sdp=0x7f060158;
    public static final int _384sdp=0x7f060159;
    public static final int _385sdp=0x7f06015a;
    public static final int _386sdp=0x7f06015b;
    public static final int _387sdp=0x7f06015c;
    public static final int _388sdp=0x7f06015d;
    public static final int _389sdp=0x7f06015e;
    public static final int _38sdp=0x7f06015f;
    public static final int _38ssp=0x7f060160;
    public static final int _390sdp=0x7f060161;
    public static final int _391sdp=0x7f060162;
    public static final int _392sdp=0x7f060163;
    public static final int _393sdp=0x7f060164;
    public static final int _394sdp=0x7f060165;
    public static final int _395sdp=0x7f060166;
    public static final int _396sdp=0x7f060167;
    public static final int _397sdp=0x7f060168;
    public static final int _398sdp=0x7f060169;
    public static final int _399sdp=0x7f06016a;
    public static final int _39sdp=0x7f06016b;
    public static final int _39ssp=0x7f06016c;
    public static final int _3sdp=0x7f06016d;
    public static final int _3ssp=0x7f06016e;
    public static final int _400sdp=0x7f06016f;
    public static final int _401sdp=0x7f060170;
    public static final int _402sdp=0x7f060171;
    public static final int _403sdp=0x7f060172;
    public static final int _404sdp=0x7f060173;
    public static final int _405sdp=0x7f060174;
    public static final int _406sdp=0x7f060175;
    public static final int _407sdp=0x7f060176;
    public static final int _408sdp=0x7f060177;
    public static final int _409sdp=0x7f060178;
    public static final int _40sdp=0x7f060179;
    public static final int _40ssp=0x7f06017a;
    public static final int _410sdp=0x7f06017b;
    public static final int _411sdp=0x7f06017c;
    public static final int _412sdp=0x7f06017d;
    public static final int _413sdp=0x7f06017e;
    public static final int _414sdp=0x7f06017f;
    public static final int _415sdp=0x7f060180;
    public static final int _416sdp=0x7f060181;
    public static final int _417sdp=0x7f060182;
    public static final int _418sdp=0x7f060183;
    public static final int _419sdp=0x7f060184;
    public static final int _41sdp=0x7f060185;
    public static final int _41ssp=0x7f060186;
    public static final int _420sdp=0x7f060187;
    public static final int _421sdp=0x7f060188;
    public static final int _422sdp=0x7f060189;
    public static final int _423sdp=0x7f06018a;
    public static final int _424sdp=0x7f06018b;
    public static final int _425sdp=0x7f06018c;
    public static final int _426sdp=0x7f06018d;
    public static final int _427sdp=0x7f06018e;
    public static final int _428sdp=0x7f06018f;
    public static final int _429sdp=0x7f060190;
    public static final int _42sdp=0x7f060191;
    public static final int _42ssp=0x7f060192;
    public static final int _430sdp=0x7f060193;
    public static final int _431sdp=0x7f060194;
    public static final int _432sdp=0x7f060195;
    public static final int _433sdp=0x7f060196;
    public static final int _434sdp=0x7f060197;
    public static final int _435sdp=0x7f060198;
    public static final int _436sdp=0x7f060199;
    public static final int _437sdp=0x7f06019a;
    public static final int _438sdp=0x7f06019b;
    public static final int _439sdp=0x7f06019c;
    public static final int _43sdp=0x7f06019d;
    public static final int _43ssp=0x7f06019e;
    public static final int _440sdp=0x7f06019f;
    public static final int _441sdp=0x7f0601a0;
    public static final int _442sdp=0x7f0601a1;
    public static final int _443sdp=0x7f0601a2;
    public static final int _444sdp=0x7f0601a3;
    public static final int _445sdp=0x7f0601a4;
    public static final int _446sdp=0x7f0601a5;
    public static final int _447sdp=0x7f0601a6;
    public static final int _448sdp=0x7f0601a7;
    public static final int _449sdp=0x7f0601a8;
    public static final int _44sdp=0x7f0601a9;
    public static final int _44ssp=0x7f0601aa;
    public static final int _450sdp=0x7f0601ab;
    public static final int _451sdp=0x7f0601ac;
    public static final int _452sdp=0x7f0601ad;
    public static final int _453sdp=0x7f0601ae;
    public static final int _454sdp=0x7f0601af;
    public static final int _455sdp=0x7f0601b0;
    public static final int _456sdp=0x7f0601b1;
    public static final int _457sdp=0x7f0601b2;
    public static final int _458sdp=0x7f0601b3;
    public static final int _459sdp=0x7f0601b4;
    public static final int _45sdp=0x7f0601b5;
    public static final int _45ssp=0x7f0601b6;
    public static final int _460sdp=0x7f0601b7;
    public static final int _461sdp=0x7f0601b8;
    public static final int _462sdp=0x7f0601b9;
    public static final int _463sdp=0x7f0601ba;
    public static final int _464sdp=0x7f0601bb;
    public static final int _465sdp=0x7f0601bc;
    public static final int _466sdp=0x7f0601bd;
    public static final int _467sdp=0x7f0601be;
    public static final int _468sdp=0x7f0601bf;
    public static final int _469sdp=0x7f0601c0;
    public static final int _46sdp=0x7f0601c1;
    public static final int _46ssp=0x7f0601c2;
    public static final int _470sdp=0x7f0601c3;
    public static final int _471sdp=0x7f0601c4;
    public static final int _472sdp=0x7f0601c5;
    public static final int _473sdp=0x7f0601c6;
    public static final int _474sdp=0x7f0601c7;
    public static final int _475sdp=0x7f0601c8;
    public static final int _476sdp=0x7f0601c9;
    public static final int _477sdp=0x7f0601ca;
    public static final int _478sdp=0x7f0601cb;
    public static final int _479sdp=0x7f0601cc;
    public static final int _47sdp=0x7f0601cd;
    public static final int _47ssp=0x7f0601ce;
    public static final int _480sdp=0x7f0601cf;
    public static final int _481sdp=0x7f0601d0;
    public static final int _482sdp=0x7f0601d1;
    public static final int _483sdp=0x7f0601d2;
    public static final int _484sdp=0x7f0601d3;
    public static final int _485sdp=0x7f0601d4;
    public static final int _486sdp=0x7f0601d5;
    public static final int _487sdp=0x7f0601d6;
    public static final int _488sdp=0x7f0601d7;
    public static final int _489sdp=0x7f0601d8;
    public static final int _48sdp=0x7f0601d9;
    public static final int _48ssp=0x7f0601da;
    public static final int _490sdp=0x7f0601db;
    public static final int _491sdp=0x7f0601dc;
    public static final int _492sdp=0x7f0601dd;
    public static final int _493sdp=0x7f0601de;
    public static final int _494sdp=0x7f0601df;
    public static final int _495sdp=0x7f0601e0;
    public static final int _496sdp=0x7f0601e1;
    public static final int _497sdp=0x7f0601e2;
    public static final int _498sdp=0x7f0601e3;
    public static final int _499sdp=0x7f0601e4;
    public static final int _49sdp=0x7f0601e5;
    public static final int _49ssp=0x7f0601e6;
    public static final int _4sdp=0x7f0601e7;
    public static final int _4ssp=0x7f0601e8;
    public static final int _500sdp=0x7f0601e9;
    public static final int _501sdp=0x7f0601ea;
    public static final int _502sdp=0x7f0601eb;
    public static final int _503sdp=0x7f0601ec;
    public static final int _504sdp=0x7f0601ed;
    public static final int _505sdp=0x7f0601ee;
    public static final int _506sdp=0x7f0601ef;
    public static final int _507sdp=0x7f0601f0;
    public static final int _508sdp=0x7f0601f1;
    public static final int _509sdp=0x7f0601f2;
    public static final int _50sdp=0x7f0601f3;
    public static final int _50ssp=0x7f0601f4;
    public static final int _510sdp=0x7f0601f5;
    public static final int _511sdp=0x7f0601f6;
    public static final int _512sdp=0x7f0601f7;
    public static final int _513sdp=0x7f0601f8;
    public static final int _514sdp=0x7f0601f9;
    public static final int _515sdp=0x7f0601fa;
    public static final int _516sdp=0x7f0601fb;
    public static final int _517sdp=0x7f0601fc;
    public static final int _518sdp=0x7f0601fd;
    public static final int _519sdp=0x7f0601fe;
    public static final int _51sdp=0x7f0601ff;
    public static final int _51ssp=0x7f060200;
    public static final int _520sdp=0x7f060201;
    public static final int _521sdp=0x7f060202;
    public static final int _522sdp=0x7f060203;
    public static final int _523sdp=0x7f060204;
    public static final int _524sdp=0x7f060205;
    public static final int _525sdp=0x7f060206;
    public static final int _526sdp=0x7f060207;
    public static final int _527sdp=0x7f060208;
    public static final int _528sdp=0x7f060209;
    public static final int _529sdp=0x7f06020a;
    public static final int _52sdp=0x7f06020b;
    public static final int _52ssp=0x7f06020c;
    public static final int _530sdp=0x7f06020d;
    public static final int _531sdp=0x7f06020e;
    public static final int _532sdp=0x7f06020f;
    public static final int _533sdp=0x7f060210;
    public static final int _534sdp=0x7f060211;
    public static final int _535sdp=0x7f060212;
    public static final int _536sdp=0x7f060213;
    public static final int _537sdp=0x7f060214;
    public static final int _538sdp=0x7f060215;
    public static final int _539sdp=0x7f060216;
    public static final int _53sdp=0x7f060217;
    public static final int _53ssp=0x7f060218;
    public static final int _540sdp=0x7f060219;
    public static final int _541sdp=0x7f06021a;
    public static final int _542sdp=0x7f06021b;
    public static final int _543sdp=0x7f06021c;
    public static final int _544sdp=0x7f06021d;
    public static final int _545sdp=0x7f06021e;
    public static final int _546sdp=0x7f06021f;
    public static final int _547sdp=0x7f060220;
    public static final int _548sdp=0x7f060221;
    public static final int _549sdp=0x7f060222;
    public static final int _54sdp=0x7f060223;
    public static final int _54ssp=0x7f060224;
    public static final int _550sdp=0x7f060225;
    public static final int _551sdp=0x7f060226;
    public static final int _552sdp=0x7f060227;
    public static final int _553sdp=0x7f060228;
    public static final int _554sdp=0x7f060229;
    public static final int _555sdp=0x7f06022a;
    public static final int _556sdp=0x7f06022b;
    public static final int _557sdp=0x7f06022c;
    public static final int _558sdp=0x7f06022d;
    public static final int _559sdp=0x7f06022e;
    public static final int _55sdp=0x7f06022f;
    public static final int _55ssp=0x7f060230;
    public static final int _560sdp=0x7f060231;
    public static final int _561sdp=0x7f060232;
    public static final int _562sdp=0x7f060233;
    public static final int _563sdp=0x7f060234;
    public static final int _564sdp=0x7f060235;
    public static final int _565sdp=0x7f060236;
    public static final int _566sdp=0x7f060237;
    public static final int _567sdp=0x7f060238;
    public static final int _568sdp=0x7f060239;
    public static final int _569sdp=0x7f06023a;
    public static final int _56sdp=0x7f06023b;
    public static final int _56ssp=0x7f06023c;
    public static final int _570sdp=0x7f06023d;
    public static final int _571sdp=0x7f06023e;
    public static final int _572sdp=0x7f06023f;
    public static final int _573sdp=0x7f060240;
    public static final int _574sdp=0x7f060241;
    public static final int _575sdp=0x7f060242;
    public static final int _576sdp=0x7f060243;
    public static final int _577sdp=0x7f060244;
    public static final int _578sdp=0x7f060245;
    public static final int _579sdp=0x7f060246;
    public static final int _57sdp=0x7f060247;
    public static final int _57ssp=0x7f060248;
    public static final int _580sdp=0x7f060249;
    public static final int _581sdp=0x7f06024a;
    public static final int _582sdp=0x7f06024b;
    public static final int _583sdp=0x7f06024c;
    public static final int _584sdp=0x7f06024d;
    public static final int _585sdp=0x7f06024e;
    public static final int _586sdp=0x7f06024f;
    public static final int _587sdp=0x7f060250;
    public static final int _588sdp=0x7f060251;
    public static final int _589sdp=0x7f060252;
    public static final int _58sdp=0x7f060253;
    public static final int _58ssp=0x7f060254;
    public static final int _590sdp=0x7f060255;
    public static final int _591sdp=0x7f060256;
    public static final int _592sdp=0x7f060257;
    public static final int _593sdp=0x7f060258;
    public static final int _594sdp=0x7f060259;
    public static final int _595sdp=0x7f06025a;
    public static final int _596sdp=0x7f06025b;
    public static final int _597sdp=0x7f06025c;
    public static final int _598sdp=0x7f06025d;
    public static final int _599sdp=0x7f06025e;
    public static final int _59sdp=0x7f06025f;
    public static final int _59ssp=0x7f060260;
    public static final int _5sdp=0x7f060261;
    public static final int _5ssp=0x7f060262;
    public static final int _600sdp=0x7f060263;
    public static final int _60sdp=0x7f060264;
    public static final int _60ssp=0x7f060265;
    public static final int _61sdp=0x7f060266;
    public static final int _61ssp=0x7f060267;
    public static final int _62sdp=0x7f060268;
    public static final int _62ssp=0x7f060269;
    public static final int _63sdp=0x7f06026a;
    public static final int _63ssp=0x7f06026b;
    public static final int _64sdp=0x7f06026c;
    public static final int _64ssp=0x7f06026d;
    public static final int _65sdp=0x7f06026e;
    public static final int _65ssp=0x7f06026f;
    public static final int _66sdp=0x7f060270;
    public static final int _66ssp=0x7f060271;
    public static final int _67sdp=0x7f060272;
    public static final int _67ssp=0x7f060273;
    public static final int _68sdp=0x7f060274;
    public static final int _68ssp=0x7f060275;
    public static final int _69sdp=0x7f060276;
    public static final int _69ssp=0x7f060277;
    public static final int _6sdp=0x7f060278;
    public static final int _6ssp=0x7f060279;
    public static final int _70sdp=0x7f06027a;
    public static final int _70ssp=0x7f06027b;
    public static final int _71sdp=0x7f06027c;
    public static final int _71ssp=0x7f06027d;
    public static final int _72sdp=0x7f06027e;
    public static final int _72ssp=0x7f06027f;
    public static final int _73sdp=0x7f060280;
    public static final int _73ssp=0x7f060281;
    public static final int _74sdp=0x7f060282;
    public static final int _74ssp=0x7f060283;
    public static final int _75sdp=0x7f060284;
    public static final int _75ssp=0x7f060285;
    public static final int _76sdp=0x7f060286;
    public static final int _76ssp=0x7f060287;
    public static final int _77sdp=0x7f060288;
    public static final int _77ssp=0x7f060289;
    public static final int _78sdp=0x7f06028a;
    public static final int _78ssp=0x7f06028b;
    public static final int _79sdp=0x7f06028c;
    public static final int _79ssp=0x7f06028d;
    public static final int _7sdp=0x7f06028e;
    public static final int _7ssp=0x7f06028f;
    public static final int _80sdp=0x7f060290;
    public static final int _80ssp=0x7f060291;
    public static final int _81sdp=0x7f060292;
    public static final int _81ssp=0x7f060293;
    public static final int _82sdp=0x7f060294;
    public static final int _82ssp=0x7f060295;
    public static final int _83sdp=0x7f060296;
    public static final int _83ssp=0x7f060297;
    public static final int _84sdp=0x7f060298;
    public static final int _84ssp=0x7f060299;
    public static final int _85sdp=0x7f06029a;
    public static final int _85ssp=0x7f06029b;
    public static final int _86sdp=0x7f06029c;
    public static final int _86ssp=0x7f06029d;
    public static final int _87sdp=0x7f06029e;
    public static final int _87ssp=0x7f06029f;
    public static final int _88sdp=0x7f0602a0;
    public static final int _88ssp=0x7f0602a1;
    public static final int _89sdp=0x7f0602a2;
    public static final int _89ssp=0x7f0602a3;
    public static final int _8sdp=0x7f0602a4;
    public static final int _8ssp=0x7f0602a5;
    public static final int _90sdp=0x7f0602a6;
    public static final int _90ssp=0x7f0602a7;
    public static final int _91sdp=0x7f0602a8;
    public static final int _91ssp=0x7f0602a9;
    public static final int _92sdp=0x7f0602aa;
    public static final int _92ssp=0x7f0602ab;
    public static final int _93sdp=0x7f0602ac;
    public static final int _93ssp=0x7f0602ad;
    public static final int _94sdp=0x7f0602ae;
    public static final int _94ssp=0x7f0602af;
    public static final int _95sdp=0x7f0602b0;
    public static final int _95ssp=0x7f0602b1;
    public static final int _96sdp=0x7f0602b2;
    public static final int _96ssp=0x7f0602b3;
    public static final int _97sdp=0x7f0602b4;
    public static final int _97ssp=0x7f0602b5;
    public static final int _98sdp=0x7f0602b6;
    public static final int _98ssp=0x7f0602b7;
    public static final int _99sdp=0x7f0602b8;
    public static final int _99ssp=0x7f0602b9;
    public static final int _9sdp=0x7f0602ba;
    public static final int _9ssp=0x7f0602bb;
    public static final int _minus10sdp=0x7f0602bc;
    public static final int _minus11sdp=0x7f0602bd;
    public static final int _minus12sdp=0x7f0602be;
    public static final int _minus13sdp=0x7f0602bf;
    public static final int _minus14sdp=0x7f0602c0;
    public static final int _minus15sdp=0x7f0602c1;
    public static final int _minus16sdp=0x7f0602c2;
    public static final int _minus17sdp=0x7f0602c3;
    public static final int _minus18sdp=0x7f0602c4;
    public static final int _minus19sdp=0x7f0602c5;
    public static final int _minus1sdp=0x7f0602c6;
    public static final int _minus20sdp=0x7f0602c7;
    public static final int _minus21sdp=0x7f0602c8;
    public static final int _minus22sdp=0x7f0602c9;
    public static final int _minus23sdp=0x7f0602ca;
    public static final int _minus24sdp=0x7f0602cb;
    public static final int _minus25sdp=0x7f0602cc;
    public static final int _minus26sdp=0x7f0602cd;
    public static final int _minus27sdp=0x7f0602ce;
    public static final int _minus28sdp=0x7f0602cf;
    public static final int _minus29sdp=0x7f0602d0;
    public static final int _minus2sdp=0x7f0602d1;
    public static final int _minus30sdp=0x7f0602d2;
    public static final int _minus31sdp=0x7f0602d3;
    public static final int _minus32sdp=0x7f0602d4;
    public static final int _minus33sdp=0x7f0602d5;
    public static final int _minus34sdp=0x7f0602d6;
    public static final int _minus35sdp=0x7f0602d7;
    public static final int _minus36sdp=0x7f0602d8;
    public static final int _minus37sdp=0x7f0602d9;
    public static final int _minus38sdp=0x7f0602da;
    public static final int _minus39sdp=0x7f0602db;
    public static final int _minus3sdp=0x7f0602dc;
    public static final int _minus40sdp=0x7f0602dd;
    public static final int _minus41sdp=0x7f0602de;
    public static final int _minus42sdp=0x7f0602df;
    public static final int _minus43sdp=0x7f0602e0;
    public static final int _minus44sdp=0x7f0602e1;
    public static final int _minus45sdp=0x7f0602e2;
    public static final int _minus46sdp=0x7f0602e3;
    public static final int _minus47sdp=0x7f0602e4;
    public static final int _minus48sdp=0x7f0602e5;
    public static final int _minus49sdp=0x7f0602e6;
    public static final int _minus4sdp=0x7f0602e7;
    public static final int _minus50sdp=0x7f0602e8;
    public static final int _minus51sdp=0x7f0602e9;
    public static final int _minus52sdp=0x7f0602ea;
    public static final int _minus53sdp=0x7f0602eb;
    public static final int _minus54sdp=0x7f0602ec;
    public static final int _minus55sdp=0x7f0602ed;
    public static final int _minus56sdp=0x7f0602ee;
    public static final int _minus57sdp=0x7f0602ef;
    public static final int _minus58sdp=0x7f0602f0;
    public static final int _minus59sdp=0x7f0602f1;
    public static final int _minus5sdp=0x7f0602f2;
    public static final int _minus60sdp=0x7f0602f3;
    public static final int _minus6sdp=0x7f0602f4;
    public static final int _minus7sdp=0x7f0602f5;
    public static final int _minus8sdp=0x7f0602f6;
    public static final int _minus9sdp=0x7f0602f7;
    public static final int abc_action_bar_content_inset_material=0x7f0602f8;
    public static final int abc_action_bar_content_inset_with_nav=0x7f0602f9;
    public static final int abc_action_bar_default_height_material=0x7f0602fa;
    public static final int abc_action_bar_default_padding_end_material=0x7f0602fb;
    public static final int abc_action_bar_default_padding_start_material=0x7f0602fc;
    public static final int abc_action_bar_elevation_material=0x7f0602fd;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f0602fe;
    public static final int abc_action_bar_overflow_padding_end_material=0x7f0602ff;
    public static final int abc_action_bar_overflow_padding_start_material=0x7f060300;
    public static final int abc_action_bar_stacked_max_height=0x7f060301;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f060302;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f060303;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f060304;
    public static final int abc_action_button_min_height_material=0x7f060305;
    public static final int abc_action_button_min_width_material=0x7f060306;
    public static final int abc_action_button_min_width_overflow_material=0x7f060307;
    public static final int abc_alert_dialog_button_bar_height=0x7f060308;
    public static final int abc_alert_dialog_button_dimen=0x7f060309;
    public static final int abc_button_inset_horizontal_material=0x7f06030a;
    public static final int abc_button_inset_vertical_material=0x7f06030b;
    public static final int abc_button_padding_horizontal_material=0x7f06030c;
    public static final int abc_button_padding_vertical_material=0x7f06030d;
    public static final int abc_cascading_menus_min_smallest_width=0x7f06030e;
    public static final int abc_config_prefDialogWidth=0x7f06030f;
    public static final int abc_control_corner_material=0x7f060310;
    public static final int abc_control_inset_material=0x7f060311;
    public static final int abc_control_padding_material=0x7f060312;
    public static final int abc_dialog_corner_radius_material=0x7f060313;
    public static final int abc_dialog_fixed_height_major=0x7f060314;
    public static final int abc_dialog_fixed_height_minor=0x7f060315;
    public static final int abc_dialog_fixed_width_major=0x7f060316;
    public static final int abc_dialog_fixed_width_minor=0x7f060317;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f060318;
    public static final int abc_dialog_list_padding_top_no_title=0x7f060319;
    public static final int abc_dialog_min_width_major=0x7f06031a;
    public static final int abc_dialog_min_width_minor=0x7f06031b;
    public static final int abc_dialog_padding_material=0x7f06031c;
    public static final int abc_dialog_padding_top_material=0x7f06031d;
    public static final int abc_dialog_title_divider_material=0x7f06031e;
    public static final int abc_disabled_alpha_material_dark=0x7f06031f;
    public static final int abc_disabled_alpha_material_light=0x7f060320;
    public static final int abc_dropdownitem_icon_width=0x7f060321;
    public static final int abc_dropdownitem_text_padding_left=0x7f060322;
    public static final int abc_dropdownitem_text_padding_right=0x7f060323;
    public static final int abc_edit_text_inset_bottom_material=0x7f060324;
    public static final int abc_edit_text_inset_horizontal_material=0x7f060325;
    public static final int abc_edit_text_inset_top_material=0x7f060326;
    public static final int abc_floating_window_z=0x7f060327;
    public static final int abc_list_item_height_large_material=0x7f060328;
    public static final int abc_list_item_height_material=0x7f060329;
    public static final int abc_list_item_height_small_material=0x7f06032a;
    public static final int abc_list_item_padding_horizontal_material=0x7f06032b;
    public static final int abc_panel_menu_list_width=0x7f06032c;
    public static final int abc_progress_bar_height_material=0x7f06032d;
    public static final int abc_search_view_preferred_height=0x7f06032e;
    public static final int abc_search_view_preferred_width=0x7f06032f;
    public static final int abc_seekbar_track_background_height_material=0x7f060330;
    public static final int abc_seekbar_track_progress_height_material=0x7f060331;
    public static final int abc_select_dialog_padding_start_material=0x7f060332;
    public static final int abc_switch_padding=0x7f060333;
    public static final int abc_text_size_body_1_material=0x7f060334;
    public static final int abc_text_size_body_2_material=0x7f060335;
    public static final int abc_text_size_button_material=0x7f060336;
    public static final int abc_text_size_caption_material=0x7f060337;
    public static final int abc_text_size_display_1_material=0x7f060338;
    public static final int abc_text_size_display_2_material=0x7f060339;
    public static final int abc_text_size_display_3_material=0x7f06033a;
    public static final int abc_text_size_display_4_material=0x7f06033b;
    public static final int abc_text_size_headline_material=0x7f06033c;
    public static final int abc_text_size_large_material=0x7f06033d;
    public static final int abc_text_size_medium_material=0x7f06033e;
    public static final int abc_text_size_menu_header_material=0x7f06033f;
    public static final int abc_text_size_menu_material=0x7f060340;
    public static final int abc_text_size_small_material=0x7f060341;
    public static final int abc_text_size_subhead_material=0x7f060342;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f060343;
    public static final int abc_text_size_title_material=0x7f060344;
    public static final int abc_text_size_title_material_toolbar=0x7f060345;
    public static final int action_bar_size=0x7f060346;
    public static final int album_item_height=0x7f060347;
    public static final int appcompat_dialog_background_inset=0x7f060348;
    public static final int browser_actions_context_menu_max_width=0x7f060349;
    public static final int browser_actions_context_menu_min_padding=0x7f06034a;
    public static final int cardview_compat_inset_shadow=0x7f06034b;
    public static final int cardview_default_elevation=0x7f06034c;
    public static final int cardview_default_radius=0x7f06034d;
    public static final int ccp_padding=0x7f06034e;
    public static final int clock_face_margin_start=0x7f06034f;
    public static final int com_facebook_auth_dialog_corner_radius=0x7f060350;
    public static final int com_facebook_auth_dialog_corner_radius_oversized=0x7f060351;
    public static final int com_facebook_button_corner_radius=0x7f060352;
    public static final int com_facebook_button_login_corner_radius=0x7f060353;
    public static final int com_facebook_likeboxcountview_border_radius=0x7f060354;
    public static final int com_facebook_likeboxcountview_border_width=0x7f060355;
    public static final int com_facebook_likeboxcountview_caret_height=0x7f060356;
    public static final int com_facebook_likeboxcountview_caret_width=0x7f060357;
    public static final int com_facebook_likeboxcountview_text_padding=0x7f060358;
    public static final int com_facebook_likeboxcountview_text_size=0x7f060359;
    public static final int com_facebook_likeview_edge_padding=0x7f06035a;
    public static final int com_facebook_likeview_internal_padding=0x7f06035b;
    public static final int com_facebook_likeview_text_size=0x7f06035c;
    public static final int com_facebook_profilepictureview_preset_size_large=0x7f06035d;
    public static final int com_facebook_profilepictureview_preset_size_normal=0x7f06035e;
    public static final int com_facebook_profilepictureview_preset_size_small=0x7f06035f;
    public static final int compat_button_inset_horizontal_material=0x7f060360;
    public static final int compat_button_inset_vertical_material=0x7f060361;
    public static final int compat_button_padding_horizontal_material=0x7f060362;
    public static final int compat_button_padding_vertical_material=0x7f060363;
    public static final int compat_control_corner_material=0x7f060364;
    public static final int compat_notification_large_icon_max_height=0x7f060365;
    public static final int compat_notification_large_icon_max_width=0x7f060366;
    public static final int default_dimension=0x7f060367;
    public static final int design_appbar_elevation=0x7f060368;
    public static final int design_bottom_navigation_active_item_max_width=0x7f060369;
    public static final int design_bottom_navigation_active_item_min_width=0x7f06036a;
    public static final int design_bottom_navigation_active_text_size=0x7f06036b;
    public static final int design_bottom_navigation_elevation=0x7f06036c;
    public static final int design_bottom_navigation_height=0x7f06036d;
    public static final int design_bottom_navigation_icon_size=0x7f06036e;
    public static final int design_bottom_navigation_item_max_width=0x7f06036f;
    public static final int design_bottom_navigation_item_min_width=0x7f060370;
    public static final int design_bottom_navigation_label_padding=0x7f060371;
    public static final int design_bottom_navigation_margin=0x7f060372;
    public static final int design_bottom_navigation_shadow_height=0x7f060373;
    public static final int design_bottom_navigation_text_size=0x7f060374;
    public static final int design_bottom_sheet_elevation=0x7f060375;
    public static final int design_bottom_sheet_modal_elevation=0x7f060376;
    public static final int design_bottom_sheet_peek_height_min=0x7f060377;
    public static final int design_fab_border_width=0x7f060378;
    public static final int design_fab_elevation=0x7f060379;
    public static final int design_fab_image_size=0x7f06037a;
    public static final int design_fab_size_mini=0x7f06037b;
    public static final int design_fab_size_normal=0x7f06037c;
    public static final int design_fab_translation_z_hovered_focused=0x7f06037d;
    public static final int design_fab_translation_z_pressed=0x7f06037e;
    public static final int design_navigation_elevation=0x7f06037f;
    public static final int design_navigation_icon_padding=0x7f060380;
    public static final int design_navigation_icon_size=0x7f060381;
    public static final int design_navigation_item_horizontal_padding=0x7f060382;
    public static final int design_navigation_item_icon_padding=0x7f060383;
    public static final int design_navigation_max_width=0x7f060384;
    public static final int design_navigation_padding_bottom=0x7f060385;
    public static final int design_navigation_separator_vertical_padding=0x7f060386;
    public static final int design_snackbar_action_inline_max_width=0x7f060387;
    public static final int design_snackbar_action_text_color_alpha=0x7f060388;
    public static final int design_snackbar_background_corner_radius=0x7f060389;
    public static final int design_snackbar_elevation=0x7f06038a;
    public static final int design_snackbar_extra_spacing_horizontal=0x7f06038b;
    public static final int design_snackbar_max_width=0x7f06038c;
    public static final int design_snackbar_min_width=0x7f06038d;
    public static final int design_snackbar_padding_horizontal=0x7f06038e;
    public static final int design_snackbar_padding_vertical=0x7f06038f;
    public static final int design_snackbar_padding_vertical_2lines=0x7f060390;
    public static final int design_snackbar_text_size=0x7f060391;
    public static final int design_tab_max_width=0x7f060392;
    public static final int design_tab_scrollable_min_width=0x7f060393;
    public static final int design_tab_text_size=0x7f060394;
    public static final int design_tab_text_size_2line=0x7f060395;
    public static final int design_textinput_caption_translate_y=0x7f060396;
    public static final int disabled_alpha_material_dark=0x7f060397;
    public static final int disabled_alpha_material_light=0x7f060398;
    public static final int error_label_spacing=0x7f060399;
    public static final int fastscroll__bubble_corner=0x7f06039a;
    public static final int fastscroll__bubble_size=0x7f06039b;
    public static final int fastscroll__handle_clickable_width=0x7f06039c;
    public static final int fastscroll__handle_corner=0x7f06039d;
    public static final int fastscroll__handle_height=0x7f06039e;
    public static final int fastscroll__handle_inset=0x7f06039f;
    public static final int fastscroll__handle_padding=0x7f0603a0;
    public static final int fastscroll__handle_width=0x7f0603a1;
    public static final int fastscroll_default_thickness=0x7f0603a2;
    public static final int fastscroll_margin=0x7f0603a3;
    public static final int fastscroll_minimum_range=0x7f0603a4;
    public static final int floating_label_bottom_spacing=0x7f0603a5;
    public static final int floating_label_inside_spacing=0x7f0603a6;
    public static final int floating_label_top_spacing=0x7f0603a7;
    public static final int google_1x=0x7f0603a8;
    public static final int grid_expected_size=0x7f0603a9;
    public static final int highlight_alpha_material_colored=0x7f0603aa;
    public static final int highlight_alpha_material_dark=0x7f0603ab;
    public static final int highlight_alpha_material_light=0x7f0603ac;
    public static final int hint_alpha_material_dark=0x7f0603ad;
    public static final int hint_alpha_material_light=0x7f0603ae;
    public static final int hint_pressed_alpha_material_dark=0x7f0603af;
    public static final int hint_pressed_alpha_material_light=0x7f0603b0;
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f0603b1;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f0603b2;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f0603b3;
    public static final int label_text_size=0x7f0603b4;
    public static final int material_clock_display_padding=0x7f0603b5;
    public static final int material_clock_face_margin_top=0x7f0603b6;
    public static final int material_clock_hand_center_dot_radius=0x7f0603b7;
    public static final int material_clock_hand_padding=0x7f0603b8;
    public static final int material_clock_hand_stroke_width=0x7f0603b9;
    public static final int material_clock_number_text_size=0x7f0603ba;
    public static final int material_clock_period_toggle_height=0x7f0603bb;
    public static final int material_clock_period_toggle_margin_left=0x7f0603bc;
    public static final int material_clock_period_toggle_width=0x7f0603bd;
    public static final int material_clock_size=0x7f0603be;
    public static final int material_cursor_inset_bottom=0x7f0603bf;
    public static final int material_cursor_inset_top=0x7f0603c0;
    public static final int material_cursor_width=0x7f0603c1;
    public static final int material_emphasis_disabled=0x7f0603c2;
    public static final int material_emphasis_high_type=0x7f0603c3;
    public static final int material_emphasis_medium=0x7f0603c4;
    public static final int material_filled_edittext_font_1_3_padding_bottom=0x7f0603c5;
    public static final int material_filled_edittext_font_1_3_padding_top=0x7f0603c6;
    public static final int material_filled_edittext_font_2_0_padding_bottom=0x7f0603c7;
    public static final int material_filled_edittext_font_2_0_padding_top=0x7f0603c8;
    public static final int material_font_1_3_box_collapsed_padding_top=0x7f0603c9;
    public static final int material_font_2_0_box_collapsed_padding_top=0x7f0603ca;
    public static final int material_helper_text_default_padding_top=0x7f0603cb;
    public static final int material_helper_text_font_1_3_padding_horizontal=0x7f0603cc;
    public static final int material_helper_text_font_1_3_padding_top=0x7f0603cd;
    public static final int material_input_text_to_prefix_suffix_padding=0x7f0603ce;
    public static final int material_text_view_test_line_height=0x7f0603cf;
    public static final int material_text_view_test_line_height_override=0x7f0603d0;
    public static final int material_timepicker_dialog_buttons_margin_top=0x7f0603d1;
    public static final int media_grid_size=0x7f0603d2;
    public static final int media_grid_spacing=0x7f0603d3;
    public static final int min_content_height=0x7f0603d4;
    public static final int mtrl_alert_dialog_background_inset_bottom=0x7f0603d5;
    public static final int mtrl_alert_dialog_background_inset_end=0x7f0603d6;
    public static final int mtrl_alert_dialog_background_inset_start=0x7f0603d7;
    public static final int mtrl_alert_dialog_background_inset_top=0x7f0603d8;
    public static final int mtrl_alert_dialog_picker_background_inset=0x7f0603d9;
    public static final int mtrl_badge_horizontal_edge_offset=0x7f0603da;
    public static final int mtrl_badge_long_text_horizontal_padding=0x7f0603db;
    public static final int mtrl_badge_radius=0x7f0603dc;
    public static final int mtrl_badge_text_horizontal_edge_offset=0x7f0603dd;
    public static final int mtrl_badge_text_size=0x7f0603de;
    public static final int mtrl_badge_toolbar_action_menu_item_horizontal_offset=0x7f0603df;
    public static final int mtrl_badge_toolbar_action_menu_item_vertical_offset=0x7f0603e0;
    public static final int mtrl_badge_with_text_radius=0x7f0603e1;
    public static final int mtrl_bottomappbar_fabOffsetEndMode=0x7f0603e2;
    public static final int mtrl_bottomappbar_fab_bottom_margin=0x7f0603e3;
    public static final int mtrl_bottomappbar_fab_cradle_margin=0x7f0603e4;
    public static final int mtrl_bottomappbar_fab_cradle_rounded_corner_radius=0x7f0603e5;
    public static final int mtrl_bottomappbar_fab_cradle_vertical_offset=0x7f0603e6;
    public static final int mtrl_bottomappbar_height=0x7f0603e7;
    public static final int mtrl_btn_corner_radius=0x7f0603e8;
    public static final int mtrl_btn_dialog_btn_min_width=0x7f0603e9;
    public static final int mtrl_btn_disabled_elevation=0x7f0603ea;
    public static final int mtrl_btn_disabled_z=0x7f0603eb;
    public static final int mtrl_btn_elevation=0x7f0603ec;
    public static final int mtrl_btn_focused_z=0x7f0603ed;
    public static final int mtrl_btn_hovered_z=0x7f0603ee;
    public static final int mtrl_btn_icon_btn_padding_left=0x7f0603ef;
    public static final int mtrl_btn_icon_padding=0x7f0603f0;
    public static final int mtrl_btn_inset=0x7f0603f1;
    public static final int mtrl_btn_letter_spacing=0x7f0603f2;
    public static final int mtrl_btn_padding_bottom=0x7f0603f3;
    public static final int mtrl_btn_padding_left=0x7f0603f4;
    public static final int mtrl_btn_padding_right=0x7f0603f5;
    public static final int mtrl_btn_padding_top=0x7f0603f6;
    public static final int mtrl_btn_pressed_z=0x7f0603f7;
    public static final int mtrl_btn_snackbar_margin_horizontal=0x7f0603f8;
    public static final int mtrl_btn_stroke_size=0x7f0603f9;
    public static final int mtrl_btn_text_btn_icon_padding=0x7f0603fa;
    public static final int mtrl_btn_text_btn_padding_left=0x7f0603fb;
    public static final int mtrl_btn_text_btn_padding_right=0x7f0603fc;
    public static final int mtrl_btn_text_size=0x7f0603fd;
    public static final int mtrl_btn_z=0x7f0603fe;
    public static final int mtrl_calendar_action_confirm_button_min_width=0x7f0603ff;
    public static final int mtrl_calendar_action_height=0x7f060400;
    public static final int mtrl_calendar_action_padding=0x7f060401;
    public static final int mtrl_calendar_bottom_padding=0x7f060402;
    public static final int mtrl_calendar_content_padding=0x7f060403;
    public static final int mtrl_calendar_day_corner=0x7f060404;
    public static final int mtrl_calendar_day_height=0x7f060405;
    public static final int mtrl_calendar_day_horizontal_padding=0x7f060406;
    public static final int mtrl_calendar_day_today_stroke=0x7f060407;
    public static final int mtrl_calendar_day_vertical_padding=0x7f060408;
    public static final int mtrl_calendar_day_width=0x7f060409;
    public static final int mtrl_calendar_days_of_week_height=0x7f06040a;
    public static final int mtrl_calendar_dialog_background_inset=0x7f06040b;
    public static final int mtrl_calendar_header_content_padding=0x7f06040c;
    public static final int mtrl_calendar_header_content_padding_fullscreen=0x7f06040d;
    public static final int mtrl_calendar_header_divider_thickness=0x7f06040e;
    public static final int mtrl_calendar_header_height=0x7f06040f;
    public static final int mtrl_calendar_header_height_fullscreen=0x7f060410;
    public static final int mtrl_calendar_header_selection_line_height=0x7f060411;
    public static final int mtrl_calendar_header_text_padding=0x7f060412;
    public static final int mtrl_calendar_header_toggle_margin_bottom=0x7f060413;
    public static final int mtrl_calendar_header_toggle_margin_top=0x7f060414;
    public static final int mtrl_calendar_landscape_header_width=0x7f060415;
    public static final int mtrl_calendar_maximum_default_fullscreen_minor_axis=0x7f060416;
    public static final int mtrl_calendar_month_horizontal_padding=0x7f060417;
    public static final int mtrl_calendar_month_vertical_padding=0x7f060418;
    public static final int mtrl_calendar_navigation_bottom_padding=0x7f060419;
    public static final int mtrl_calendar_navigation_height=0x7f06041a;
    public static final int mtrl_calendar_navigation_top_padding=0x7f06041b;
    public static final int mtrl_calendar_pre_l_text_clip_padding=0x7f06041c;
    public static final int mtrl_calendar_selection_baseline_to_top_fullscreen=0x7f06041d;
    public static final int mtrl_calendar_selection_text_baseline_to_bottom=0x7f06041e;
    public static final int mtrl_calendar_selection_text_baseline_to_bottom_fullscreen=0x7f06041f;
    public static final int mtrl_calendar_selection_text_baseline_to_top=0x7f060420;
    public static final int mtrl_calendar_text_input_padding_top=0x7f060421;
    public static final int mtrl_calendar_title_baseline_to_top=0x7f060422;
    public static final int mtrl_calendar_title_baseline_to_top_fullscreen=0x7f060423;
    public static final int mtrl_calendar_year_corner=0x7f060424;
    public static final int mtrl_calendar_year_height=0x7f060425;
    public static final int mtrl_calendar_year_horizontal_padding=0x7f060426;
    public static final int mtrl_calendar_year_vertical_padding=0x7f060427;
    public static final int mtrl_calendar_year_width=0x7f060428;
    public static final int mtrl_card_checked_icon_margin=0x7f060429;
    public static final int mtrl_card_checked_icon_size=0x7f06042a;
    public static final int mtrl_card_corner_radius=0x7f06042b;
    public static final int mtrl_card_dragged_z=0x7f06042c;
    public static final int mtrl_card_elevation=0x7f06042d;
    public static final int mtrl_card_spacing=0x7f06042e;
    public static final int mtrl_chip_pressed_translation_z=0x7f06042f;
    public static final int mtrl_chip_text_size=0x7f060430;
    public static final int mtrl_edittext_rectangle_top_offset=0x7f060431;
    public static final int mtrl_exposed_dropdown_menu_popup_elevation=0x7f060432;
    public static final int mtrl_exposed_dropdown_menu_popup_vertical_offset=0x7f060433;
    public static final int mtrl_exposed_dropdown_menu_popup_vertical_padding=0x7f060434;
    public static final int mtrl_extended_fab_bottom_padding=0x7f060435;
    public static final int mtrl_extended_fab_corner_radius=0x7f060436;
    public static final int mtrl_extended_fab_disabled_elevation=0x7f060437;
    public static final int mtrl_extended_fab_disabled_translation_z=0x7f060438;
    public static final int mtrl_extended_fab_elevation=0x7f060439;
    public static final int mtrl_extended_fab_end_padding=0x7f06043a;
    public static final int mtrl_extended_fab_end_padding_icon=0x7f06043b;
    public static final int mtrl_extended_fab_icon_size=0x7f06043c;
    public static final int mtrl_extended_fab_icon_text_spacing=0x7f06043d;
    public static final int mtrl_extended_fab_min_height=0x7f06043e;
    public static final int mtrl_extended_fab_min_width=0x7f06043f;
    public static final int mtrl_extended_fab_start_padding=0x7f060440;
    public static final int mtrl_extended_fab_start_padding_icon=0x7f060441;
    public static final int mtrl_extended_fab_top_padding=0x7f060442;
    public static final int mtrl_extended_fab_translation_z_base=0x7f060443;
    public static final int mtrl_extended_fab_translation_z_hovered_focused=0x7f060444;
    public static final int mtrl_extended_fab_translation_z_pressed=0x7f060445;
    public static final int mtrl_fab_elevation=0x7f060446;
    public static final int mtrl_fab_min_touch_target=0x7f060447;
    public static final int mtrl_fab_translation_z_hovered_focused=0x7f060448;
    public static final int mtrl_fab_translation_z_pressed=0x7f060449;
    public static final int mtrl_high_ripple_default_alpha=0x7f06044a;
    public static final int mtrl_high_ripple_focused_alpha=0x7f06044b;
    public static final int mtrl_high_ripple_hovered_alpha=0x7f06044c;
    public static final int mtrl_high_ripple_pressed_alpha=0x7f06044d;
    public static final int mtrl_large_touch_target=0x7f06044e;
    public static final int mtrl_low_ripple_default_alpha=0x7f06044f;
    public static final int mtrl_low_ripple_focused_alpha=0x7f060450;
    public static final int mtrl_low_ripple_hovered_alpha=0x7f060451;
    public static final int mtrl_low_ripple_pressed_alpha=0x7f060452;
    public static final int mtrl_min_touch_target_size=0x7f060453;
    public static final int mtrl_navigation_elevation=0x7f060454;
    public static final int mtrl_navigation_item_horizontal_padding=0x7f060455;
    public static final int mtrl_navigation_item_icon_padding=0x7f060456;
    public static final int mtrl_navigation_item_icon_size=0x7f060457;
    public static final int mtrl_navigation_item_shape_horizontal_margin=0x7f060458;
    public static final int mtrl_navigation_item_shape_vertical_margin=0x7f060459;
    public static final int mtrl_progress_circular_inset=0x7f06045a;
    public static final int mtrl_progress_circular_radius=0x7f06045b;
    public static final int mtrl_progress_circular_size=0x7f06045c;
    public static final int mtrl_progress_indicator_full_rounded_corner_radius=0x7f06045d;
    public static final int mtrl_progress_track_thickness=0x7f06045e;
    public static final int mtrl_shape_corner_size_large_component=0x7f06045f;
    public static final int mtrl_shape_corner_size_medium_component=0x7f060460;
    public static final int mtrl_shape_corner_size_small_component=0x7f060461;
    public static final int mtrl_slider_halo_radius=0x7f060462;
    public static final int mtrl_slider_label_padding=0x7f060463;
    public static final int mtrl_slider_label_radius=0x7f060464;
    public static final int mtrl_slider_label_square_side=0x7f060465;
    public static final int mtrl_slider_thumb_elevation=0x7f060466;
    public static final int mtrl_slider_thumb_radius=0x7f060467;
    public static final int mtrl_slider_track_height=0x7f060468;
    public static final int mtrl_slider_track_side_padding=0x7f060469;
    public static final int mtrl_slider_track_top=0x7f06046a;
    public static final int mtrl_slider_widget_height=0x7f06046b;
    public static final int mtrl_snackbar_action_text_color_alpha=0x7f06046c;
    public static final int mtrl_snackbar_background_corner_radius=0x7f06046d;
    public static final int mtrl_snackbar_background_overlay_color_alpha=0x7f06046e;
    public static final int mtrl_snackbar_margin=0x7f06046f;
    public static final int mtrl_snackbar_message_margin_horizontal=0x7f060470;
    public static final int mtrl_snackbar_padding_horizontal=0x7f060471;
    public static final int mtrl_switch_thumb_elevation=0x7f060472;
    public static final int mtrl_textinput_box_corner_radius_medium=0x7f060473;
    public static final int mtrl_textinput_box_corner_radius_small=0x7f060474;
    public static final int mtrl_textinput_box_label_cutout_padding=0x7f060475;
    public static final int mtrl_textinput_box_stroke_width_default=0x7f060476;
    public static final int mtrl_textinput_box_stroke_width_focused=0x7f060477;
    public static final int mtrl_textinput_counter_margin_start=0x7f060478;
    public static final int mtrl_textinput_end_icon_margin_start=0x7f060479;
    public static final int mtrl_textinput_outline_box_expanded_padding=0x7f06047a;
    public static final int mtrl_textinput_start_icon_margin_end=0x7f06047b;
    public static final int mtrl_toolbar_default_height=0x7f06047c;
    public static final int mtrl_tooltip_arrowSize=0x7f06047d;
    public static final int mtrl_tooltip_cornerSize=0x7f06047e;
    public static final int mtrl_tooltip_minHeight=0x7f06047f;
    public static final int mtrl_tooltip_minWidth=0x7f060480;
    public static final int mtrl_tooltip_padding=0x7f060481;
    public static final int mtrl_transition_shared_axis_slide_distance=0x7f060482;
    public static final int notification_action_icon_size=0x7f060483;
    public static final int notification_action_text_size=0x7f060484;
    public static final int notification_big_circle_margin=0x7f060485;
    public static final int notification_content_margin_start=0x7f060486;
    public static final int notification_large_icon_height=0x7f060487;
    public static final int notification_large_icon_width=0x7f060488;
    public static final int notification_main_column_padding_top=0x7f060489;
    public static final int notification_media_narrow_margin=0x7f06048a;
    public static final int notification_right_icon_size=0x7f06048b;
    public static final int notification_right_side_padding_top=0x7f06048c;
    public static final int notification_small_icon_background_padding=0x7f06048d;
    public static final int notification_small_icon_size_as_large=0x7f06048e;
    public static final int notification_subtext_size=0x7f06048f;
    public static final int notification_top_pad=0x7f060490;
    public static final int notification_top_pad_large_text=0x7f060491;
    public static final int otp_view_cursor_width=0x7f060492;
    public static final int otp_view_item_line_width=0x7f060493;
    public static final int otp_view_item_radius=0x7f060494;
    public static final int otp_view_item_size=0x7f060495;
    public static final int otp_view_item_spacing=0x7f060496;
    public static final int places_autocomplete_button_padding=0x7f060497;
    public static final int places_autocomplete_overlay_padding=0x7f060498;
    public static final int places_autocomplete_powered_by_google_height=0x7f060499;
    public static final int places_autocomplete_prediction_height=0x7f06049a;
    public static final int places_autocomplete_prediction_primary_text=0x7f06049b;
    public static final int places_autocomplete_prediction_secondary_text=0x7f06049c;
    public static final int places_autocomplete_progress_horizontal_margin=0x7f06049d;
    public static final int places_autocomplete_progress_size=0x7f06049e;
    public static final int places_autocomplete_search_bar_button_padding=0x7f06049f;
    public static final int places_autocomplete_search_bar_margin=0x7f0604a0;
    public static final int places_autocomplete_search_bar_padding=0x7f0604a1;
    public static final int places_autocomplete_search_input_padding=0x7f0604a2;
    public static final int places_autocomplete_search_input_text=0x7f0604a3;
    public static final int places_autocomplete_vertical_dropdown=0x7f0604a4;
    public static final int preference_dropdown_padding_start=0x7f0604a5;
    public static final int preference_icon_minWidth=0x7f0604a6;
    public static final int preference_seekbar_padding_horizontal=0x7f0604a7;
    public static final int preference_seekbar_padding_vertical=0x7f0604a8;
    public static final int preference_seekbar_value_minWidth=0x7f0604a9;
    public static final int right_left_spinner_padding=0x7f0604aa;
    public static final int subtitle_corner_radius=0x7f0604ab;
    public static final int subtitle_outline_width=0x7f0604ac;
    public static final int subtitle_shadow_offset=0x7f0604ad;
    public static final int subtitle_shadow_radius=0x7f0604ae;
    public static final int test_mtrl_calendar_day_cornerSize=0x7f0604af;
    public static final int tooltip_corner_radius=0x7f0604b0;
    public static final int tooltip_horizontal_padding=0x7f0604b1;
    public static final int tooltip_margin=0x7f0604b2;
    public static final int tooltip_precise_anchor_extra_offset=0x7f0604b3;
    public static final int tooltip_precise_anchor_threshold=0x7f0604b4;
    public static final int tooltip_vertical_padding=0x7f0604b5;
    public static final int tooltip_y_offset_non_touch=0x7f0604b6;
    public static final int tooltip_y_offset_touch=0x7f0604b7;
    public static final int ucrop_default_crop_frame_stoke_width=0x7f0604b8;
    public static final int ucrop_default_crop_grid_stoke_width=0x7f0604b9;
    public static final int ucrop_default_crop_logo_size=0x7f0604ba;
    public static final int ucrop_default_crop_rect_corner_touch_area_line_length=0x7f0604bb;
    public static final int ucrop_default_crop_rect_corner_touch_threshold=0x7f0604bc;
    public static final int ucrop_default_crop_rect_min_size=0x7f0604bd;
    public static final int ucrop_height_crop_aspect_ratio_text=0x7f0604be;
    public static final int ucrop_height_divider_shadow=0x7f0604bf;
    public static final int ucrop_height_horizontal_wheel_progress_line=0x7f0604c0;
    public static final int ucrop_height_wrapper_controls=0x7f0604c1;
    public static final int ucrop_height_wrapper_states=0x7f0604c2;
    public static final int ucrop_margin_horizontal_wheel_progress_line=0x7f0604c3;
    public static final int ucrop_margit_top_widget_text=0x7f0604c4;
    public static final int ucrop_padding_crop_frame=0x7f0604c5;
    public static final int ucrop_progress_size=0x7f0604c6;
    public static final int ucrop_size_dot_scale_text_view=0x7f0604c7;
    public static final int ucrop_size_wrapper_rotate_button=0x7f0604c8;
    public static final int ucrop_text_size_widget_text=0x7f0604c9;
    public static final int ucrop_width_horizontal_wheel_progress_line=0x7f0604ca;
    public static final int underline_bottom_spacing=0x7f0604cb;
    public static final int underline_top_spacing=0x7f0604cc;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f070007;
    public static final int abc_action_bar_item_background_material=0x7f070008;
    public static final int abc_btn_borderless_material=0x7f070009;
    public static final int abc_btn_check_material=0x7f07000a;
    public static final int abc_btn_check_material_anim=0x7f07000b;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f07000c;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f07000d;
    public static final int abc_btn_colored_material=0x7f07000e;
    public static final int abc_btn_default_mtrl_shape=0x7f07000f;
    public static final int abc_btn_radio_material=0x7f070010;
    public static final int abc_btn_radio_material_anim=0x7f070011;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f070012;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f070013;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f070014;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f070015;
    public static final int abc_cab_background_internal_bg=0x7f070016;
    public static final int abc_cab_background_top_material=0x7f070017;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f070018;
    public static final int abc_control_background_material=0x7f070019;
    public static final int abc_dialog_material_background=0x7f07001a;
    public static final int abc_edit_text_material=0x7f07001b;
    public static final int abc_ic_ab_back_material=0x7f07001c;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f07001d;
    public static final int abc_ic_clear_material=0x7f07001e;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f07001f;
    public static final int abc_ic_go_search_api_material=0x7f070020;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f070021;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f070022;
    public static final int abc_ic_menu_overflow_material=0x7f070023;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f070024;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f070025;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f070026;
    public static final int abc_ic_search_api_material=0x7f070027;
    public static final int abc_ic_star_black_16dp=0x7f070028;
    public static final int abc_ic_star_black_36dp=0x7f070029;
    public static final int abc_ic_star_black_48dp=0x7f07002a;
    public static final int abc_ic_star_half_black_16dp=0x7f07002b;
    public static final int abc_ic_star_half_black_36dp=0x7f07002c;
    public static final int abc_ic_star_half_black_48dp=0x7f07002d;
    public static final int abc_ic_voice_search_api_material=0x7f07002e;
    public static final int abc_item_background_holo_dark=0x7f07002f;
    public static final int abc_item_background_holo_light=0x7f070030;
    public static final int abc_list_divider_material=0x7f070031;
    public static final int abc_list_divider_mtrl_alpha=0x7f070032;
    public static final int abc_list_focused_holo=0x7f070033;
    public static final int abc_list_longpressed_holo=0x7f070034;
    public static final int abc_list_pressed_holo_dark=0x7f070035;
    public static final int abc_list_pressed_holo_light=0x7f070036;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f070037;
    public static final int abc_list_selector_background_transition_holo_light=0x7f070038;
    public static final int abc_list_selector_disabled_holo_dark=0x7f070039;
    public static final int abc_list_selector_disabled_holo_light=0x7f07003a;
    public static final int abc_list_selector_holo_dark=0x7f07003b;
    public static final int abc_list_selector_holo_light=0x7f07003c;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f07003d;
    public static final int abc_popup_background_mtrl_mult=0x7f07003e;
    public static final int abc_ratingbar_indicator_material=0x7f07003f;
    public static final int abc_ratingbar_material=0x7f070040;
    public static final int abc_ratingbar_small_material=0x7f070041;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f070042;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f070043;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f070044;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f070045;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f070046;
    public static final int abc_seekbar_thumb_material=0x7f070047;
    public static final int abc_seekbar_tick_mark_material=0x7f070048;
    public static final int abc_seekbar_track_material=0x7f070049;
    public static final int abc_spinner_mtrl_am_alpha=0x7f07004a;
    public static final int abc_spinner_textfield_background_material=0x7f07004b;
    public static final int abc_switch_thumb_material=0x7f07004c;
    public static final int abc_switch_track_mtrl_alpha=0x7f07004d;
    public static final int abc_tab_indicator_material=0x7f07004e;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f07004f;
    public static final int abc_text_cursor_material=0x7f070050;
    public static final int abc_text_select_handle_left_mtrl_dark=0x7f070051;
    public static final int abc_text_select_handle_left_mtrl_light=0x7f070052;
    public static final int abc_text_select_handle_middle_mtrl_dark=0x7f070053;
    public static final int abc_text_select_handle_middle_mtrl_light=0x7f070054;
    public static final int abc_text_select_handle_right_mtrl_dark=0x7f070055;
    public static final int abc_text_select_handle_right_mtrl_light=0x7f070056;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f070057;
    public static final int abc_textfield_default_mtrl_alpha=0x7f070058;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f070059;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f07005a;
    public static final int abc_textfield_search_material=0x7f07005b;
    public static final int abc_vector_test=0x7f07005c;
    public static final int add_image=0x7f07005d;
    public static final int add_image_box=0x7f07005e;
    public static final int amu_bubble_mask=0x7f07005f;
    public static final int amu_bubble_shadow=0x7f070060;
    public static final int app_icon=0x7f070061;
    public static final int app_icon_round=0x7f070062;
    public static final int attach_pin=0x7f070063;
    public static final int attach_tow=0x7f070064;
    public static final int avd_hide_password=0x7f070065;
    public static final int avd_show_password=0x7f070066;
    public static final int back_arrow=0x7f070067;
    public static final int bg=0x7f070068;
    public static final int bg_background_yellow=0x7f070069;
    public static final int bg_border_yellow=0x7f07006a;
    public static final int bg_bottomsheet_dark=0x7f07006b;
    public static final int bg_bottomviewdark_border=0x7f07006c;
    public static final int bg_btn=0x7f07006d;
    public static final int bg_circle_color_primary=0x7f07006e;
    public static final int bg_grey_round=0x7f07006f;
    public static final int bg_pin=0x7f070070;
    public static final int bg_rectangle_gray_border=0x7f070071;
    public static final int bg_round_corner_border=0x7f070072;
    public static final int bg_rounded_corner_primary=0x7f070073;
    public static final int bg_shadow=0x7f070074;
    public static final int bg_white_border=0x7f070075;
    public static final int btn_bgg=0x7f070076;
    public static final int btn_checkbox_checked_mtrl=0x7f070077;
    public static final int btn_checkbox_checked_to_unchecked_mtrl_animation=0x7f070078;
    public static final int btn_checkbox_unchecked_mtrl=0x7f070079;
    public static final int btn_checkbox_unchecked_to_checked_mtrl_animation=0x7f07007a;
    public static final int btn_radio_off_mtrl=0x7f07007b;
    public static final int btn_radio_off_to_on_mtrl_animation=0x7f07007c;
    public static final int btn_radio_on_mtrl=0x7f07007d;
    public static final int btn_radio_on_to_off_mtrl_animation=0x7f07007e;
    public static final int button_background=0x7f07007f;
    public static final int call2=0x7f070080;
    public static final int call_tow=0x7f070081;
    public static final int cardviewbg=0x7f070082;
    public static final int ccp_ic_arrow_drop_down=0x7f070083;
    public static final int clock=0x7f070084;
    public static final int clock_tow=0x7f070085;
    public static final int closeblue=0x7f070086;
    public static final int com_facebook_auth_dialog_background=0x7f070087;
    public static final int com_facebook_auth_dialog_cancel_background=0x7f070088;
    public static final int com_facebook_auth_dialog_header_background=0x7f070089;
    public static final int com_facebook_button_background=0x7f07008a;
    public static final int com_facebook_button_icon=0x7f07008b;
    public static final int com_facebook_button_like_background=0x7f07008c;
    public static final int com_facebook_button_like_icon_selected=0x7f07008d;
    public static final int com_facebook_close=0x7f07008e;
    public static final int com_facebook_favicon_blue=0x7f07008f;
    public static final int com_facebook_profile_picture_blank_portrait=0x7f070090;
    public static final int com_facebook_profile_picture_blank_square=0x7f070091;
    public static final int com_facebook_tooltip_black_background=0x7f070092;
    public static final int com_facebook_tooltip_black_bottomnub=0x7f070093;
    public static final int com_facebook_tooltip_black_topnub=0x7f070094;
    public static final int com_facebook_tooltip_black_xout=0x7f070095;
    public static final int com_facebook_tooltip_blue_background=0x7f070096;
    public static final int com_facebook_tooltip_blue_bottomnub=0x7f070097;
    public static final int com_facebook_tooltip_blue_topnub=0x7f070098;
    public static final int com_facebook_tooltip_blue_xout=0x7f070099;
    public static final int common_full_open_on_phone=0x7f07009a;
    public static final int common_google_signin_btn_icon_dark=0x7f07009b;
    public static final int common_google_signin_btn_icon_dark_focused=0x7f07009c;
    public static final int common_google_signin_btn_icon_dark_normal=0x7f07009d;
    public static final int common_google_signin_btn_icon_dark_normal_background=0x7f07009e;
    public static final int common_google_signin_btn_icon_disabled=0x7f07009f;
    public static final int common_google_signin_btn_icon_light=0x7f0700a0;
    public static final int common_google_signin_btn_icon_light_focused=0x7f0700a1;
    public static final int common_google_signin_btn_icon_light_normal=0x7f0700a2;
    public static final int common_google_signin_btn_icon_light_normal_background=0x7f0700a3;
    public static final int common_google_signin_btn_text_dark=0x7f0700a4;
    public static final int common_google_signin_btn_text_dark_focused=0x7f0700a5;
    public static final int common_google_signin_btn_text_dark_normal=0x7f0700a6;
    public static final int common_google_signin_btn_text_dark_normal_background=0x7f0700a7;
    public static final int common_google_signin_btn_text_disabled=0x7f0700a8;
    public static final int common_google_signin_btn_text_light=0x7f0700a9;
    public static final int common_google_signin_btn_text_light_focused=0x7f0700aa;
    public static final int common_google_signin_btn_text_light_normal=0x7f0700ab;
    public static final int common_google_signin_btn_text_light_normal_background=0x7f0700ac;
    public static final int d=0x7f0700ad;
    public static final int delete_img=0x7f0700ae;
    public static final int design_bottom_navigation_item_background=0x7f0700af;
    public static final int design_fab_background=0x7f0700b0;
    public static final int design_ic_visibility=0x7f0700b1;
    public static final int design_ic_visibility_off=0x7f0700b2;
    public static final int design_password_eye=0x7f0700b3;
    public static final int design_snackbar_background=0x7f0700b4;
    public static final int distance=0x7f0700b5;
    public static final int distance_medium=0x7f0700b6;
    public static final int dummy_image=0x7f0700b7;
    public static final int edit_text_background=0x7f0700b8;
    public static final int eye=0x7f0700b9;
    public static final int eye2=0x7f0700ba;
    public static final int eye_new=0x7f0700bb;
    public static final int eye_new_close=0x7f0700bc;
    public static final int eye_open=0x7f0700bd;
    public static final int fastscroll__default_bubble=0x7f0700be;
    public static final int fastscroll__default_handle=0x7f0700bf;
    public static final int flag_afghanistan=0x7f0700c0;
    public static final int flag_aland=0x7f0700c1;
    public static final int flag_albania=0x7f0700c2;
    public static final int flag_algeria=0x7f0700c3;
    public static final int flag_american_samoa=0x7f0700c4;
    public static final int flag_andorra=0x7f0700c5;
    public static final int flag_angola=0x7f0700c6;
    public static final int flag_anguilla=0x7f0700c7;
    public static final int flag_antarctica=0x7f0700c8;
    public static final int flag_antigua_and_barbuda=0x7f0700c9;
    public static final int flag_argentina=0x7f0700ca;
    public static final int flag_armenia=0x7f0700cb;
    public static final int flag_aruba=0x7f0700cc;
    public static final int flag_australia=0x7f0700cd;
    public static final int flag_austria=0x7f0700ce;
    public static final int flag_azerbaijan=0x7f0700cf;
    public static final int flag_bahamas=0x7f0700d0;
    public static final int flag_bahrain=0x7f0700d1;
    public static final int flag_bangladesh=0x7f0700d2;
    public static final int flag_barbados=0x7f0700d3;
    public static final int flag_belarus=0x7f0700d4;
    public static final int flag_belgium=0x7f0700d5;
    public static final int flag_belize=0x7f0700d6;
    public static final int flag_benin=0x7f0700d7;
    public static final int flag_bermuda=0x7f0700d8;
    public static final int flag_bhutan=0x7f0700d9;
    public static final int flag_bolivia=0x7f0700da;
    public static final int flag_bosnia=0x7f0700db;
    public static final int flag_botswana=0x7f0700dc;
    public static final int flag_brazil=0x7f0700dd;
    public static final int flag_british_indian_ocean_territory=0x7f0700de;
    public static final int flag_british_virgin_islands=0x7f0700df;
    public static final int flag_brunei=0x7f0700e0;
    public static final int flag_bulgaria=0x7f0700e1;
    public static final int flag_burkina_faso=0x7f0700e2;
    public static final int flag_burundi=0x7f0700e3;
    public static final int flag_cambodia=0x7f0700e4;
    public static final int flag_cameroon=0x7f0700e5;
    public static final int flag_canada=0x7f0700e6;
    public static final int flag_cape_verde=0x7f0700e7;
    public static final int flag_cayman_islands=0x7f0700e8;
    public static final int flag_central_african_republic=0x7f0700e9;
    public static final int flag_chad=0x7f0700ea;
    public static final int flag_chile=0x7f0700eb;
    public static final int flag_china=0x7f0700ec;
    public static final int flag_christmas_island=0x7f0700ed;
    public static final int flag_cocos=0x7f0700ee;
    public static final int flag_colombia=0x7f0700ef;
    public static final int flag_comoros=0x7f0700f0;
    public static final int flag_cook_islands=0x7f0700f1;
    public static final int flag_costa_rica=0x7f0700f2;
    public static final int flag_cote_divoire=0x7f0700f3;
    public static final int flag_croatia=0x7f0700f4;
    public static final int flag_cuba=0x7f0700f5;
    public static final int flag_curacao=0x7f0700f6;
    public static final int flag_cyprus=0x7f0700f7;
    public static final int flag_czech_republic=0x7f0700f8;
    public static final int flag_democratic_republic_of_the_congo=0x7f0700f9;
    public static final int flag_denmark=0x7f0700fa;
    public static final int flag_djibouti=0x7f0700fb;
    public static final int flag_dominica=0x7f0700fc;
    public static final int flag_dominican_republic=0x7f0700fd;
    public static final int flag_ecuador=0x7f0700fe;
    public static final int flag_egypt=0x7f0700ff;
    public static final int flag_el_salvador=0x7f070100;
    public static final int flag_equatorial_guinea=0x7f070101;
    public static final int flag_eritrea=0x7f070102;
    public static final int flag_estonia=0x7f070103;
    public static final int flag_ethiopia=0x7f070104;
    public static final int flag_falkland_islands=0x7f070105;
    public static final int flag_faroe_islands=0x7f070106;
    public static final int flag_fiji=0x7f070107;
    public static final int flag_finland=0x7f070108;
    public static final int flag_france=0x7f070109;
    public static final int flag_french_polynesia=0x7f07010a;
    public static final int flag_gabon=0x7f07010b;
    public static final int flag_gambia=0x7f07010c;
    public static final int flag_georgia=0x7f07010d;
    public static final int flag_germany=0x7f07010e;
    public static final int flag_ghana=0x7f07010f;
    public static final int flag_gibraltar=0x7f070110;
    public static final int flag_greece=0x7f070111;
    public static final int flag_greenland=0x7f070112;
    public static final int flag_grenada=0x7f070113;
    public static final int flag_guadeloupe=0x7f070114;
    public static final int flag_guam=0x7f070115;
    public static final int flag_guatemala=0x7f070116;
    public static final int flag_guernsey=0x7f070117;
    public static final int flag_guinea=0x7f070118;
    public static final int flag_guinea_bissau=0x7f070119;
    public static final int flag_guyana=0x7f07011a;
    public static final int flag_guyane=0x7f07011b;
    public static final int flag_haiti=0x7f07011c;
    public static final int flag_honduras=0x7f07011d;
    public static final int flag_hong_kong=0x7f07011e;
    public static final int flag_hungary=0x7f07011f;
    public static final int flag_iceland=0x7f070120;
    public static final int flag_india=0x7f070121;
    public static final int flag_indonesia=0x7f070122;
    public static final int flag_iran=0x7f070123;
    public static final int flag_iraq=0x7f070124;
    public static final int flag_iraq_new=0x7f070125;
    public static final int flag_ireland=0x7f070126;
    public static final int flag_isleof_man=0x7f070127;
    public static final int flag_israel=0x7f070128;
    public static final int flag_italy=0x7f070129;
    public static final int flag_jamaica=0x7f07012a;
    public static final int flag_japan=0x7f07012b;
    public static final int flag_jersey=0x7f07012c;
    public static final int flag_jordan=0x7f07012d;
    public static final int flag_kazakhstan=0x7f07012e;
    public static final int flag_kenya=0x7f07012f;
    public static final int flag_kiribati=0x7f070130;
    public static final int flag_kosovo=0x7f070131;
    public static final int flag_kuwait=0x7f070132;
    public static final int flag_kyrgyzstan=0x7f070133;
    public static final int flag_laos=0x7f070134;
    public static final int flag_latvia=0x7f070135;
    public static final int flag_lebanon=0x7f070136;
    public static final int flag_lesotho=0x7f070137;
    public static final int flag_liberia=0x7f070138;
    public static final int flag_libya=0x7f070139;
    public static final int flag_liechtenstein=0x7f07013a;
    public static final int flag_lithuania=0x7f07013b;
    public static final int flag_luxembourg=0x7f07013c;
    public static final int flag_macao=0x7f07013d;
    public static final int flag_macedonia=0x7f07013e;
    public static final int flag_madagascar=0x7f07013f;
    public static final int flag_malawi=0x7f070140;
    public static final int flag_malaysia=0x7f070141;
    public static final int flag_maldives=0x7f070142;
    public static final int flag_mali=0x7f070143;
    public static final int flag_malta=0x7f070144;
    public static final int flag_marshall_islands=0x7f070145;
    public static final int flag_martinique=0x7f070146;
    public static final int flag_mauritania=0x7f070147;
    public static final int flag_mauritius=0x7f070148;
    public static final int flag_mexico=0x7f070149;
    public static final int flag_micronesia=0x7f07014a;
    public static final int flag_moldova=0x7f07014b;
    public static final int flag_monaco=0x7f07014c;
    public static final int flag_mongolia=0x7f07014d;
    public static final int flag_montserrat=0x7f07014e;
    public static final int flag_morocco=0x7f07014f;
    public static final int flag_mozambique=0x7f070150;
    public static final int flag_myanmar=0x7f070151;
    public static final int flag_namibia=0x7f070152;
    public static final int flag_nauru=0x7f070153;
    public static final int flag_nepal=0x7f070154;
    public static final int flag_netherlands=0x7f070155;
    public static final int flag_netherlands_antilles=0x7f070156;
    public static final int flag_new_caledonia=0x7f070157;
    public static final int flag_new_zealand=0x7f070158;
    public static final int flag_nicaragua=0x7f070159;
    public static final int flag_niger=0x7f07015a;
    public static final int flag_nigeria=0x7f07015b;
    public static final int flag_niue=0x7f07015c;
    public static final int flag_norfolk_island=0x7f07015d;
    public static final int flag_north_korea=0x7f07015e;
    public static final int flag_northern_mariana_islands=0x7f07015f;
    public static final int flag_norway=0x7f070160;
    public static final int flag_of_montenegro=0x7f070161;
    public static final int flag_oman=0x7f070162;
    public static final int flag_pakistan=0x7f070163;
    public static final int flag_palau=0x7f070164;
    public static final int flag_palestine=0x7f070165;
    public static final int flag_panama=0x7f070166;
    public static final int flag_papua_new_guinea=0x7f070167;
    public static final int flag_paraguay=0x7f070168;
    public static final int flag_peru=0x7f070169;
    public static final int flag_philippines=0x7f07016a;
    public static final int flag_pitcairn_islands=0x7f07016b;
    public static final int flag_poland=0x7f07016c;
    public static final int flag_portugal=0x7f07016d;
    public static final int flag_puerto_rico=0x7f07016e;
    public static final int flag_qatar=0x7f07016f;
    public static final int flag_republic_of_the_congo=0x7f070170;
    public static final int flag_romania=0x7f070171;
    public static final int flag_russian_federation=0x7f070172;
    public static final int flag_rwanda=0x7f070173;
    public static final int flag_saint_barthelemy=0x7f070174;
    public static final int flag_saint_helena=0x7f070175;
    public static final int flag_saint_kitts_and_nevis=0x7f070176;
    public static final int flag_saint_lucia=0x7f070177;
    public static final int flag_saint_martin=0x7f070178;
    public static final int flag_saint_pierre=0x7f070179;
    public static final int flag_saint_vicent_and_the_grenadines=0x7f07017a;
    public static final int flag_samoa=0x7f07017b;
    public static final int flag_san_marino=0x7f07017c;
    public static final int flag_sao_tome_and_principe=0x7f07017d;
    public static final int flag_saudi_arabia=0x7f07017e;
    public static final int flag_senegal=0x7f07017f;
    public static final int flag_serbia=0x7f070180;
    public static final int flag_serbia_and_montenegro=0x7f070181;
    public static final int flag_seychelles=0x7f070182;
    public static final int flag_sierra_leone=0x7f070183;
    public static final int flag_singapore=0x7f070184;
    public static final int flag_sint_maarten=0x7f070185;
    public static final int flag_slovakia=0x7f070186;
    public static final int flag_slovenia=0x7f070187;
    public static final int flag_soloman_islands=0x7f070188;
    public static final int flag_somalia=0x7f070189;
    public static final int flag_south_africa=0x7f07018a;
    public static final int flag_south_georgia=0x7f07018b;
    public static final int flag_south_korea=0x7f07018c;
    public static final int flag_south_sudan=0x7f07018d;
    public static final int flag_soviet_union=0x7f07018e;
    public static final int flag_spain=0x7f07018f;
    public static final int flag_sri_lanka=0x7f070190;
    public static final int flag_sudan=0x7f070191;
    public static final int flag_suriname=0x7f070192;
    public static final int flag_swaziland=0x7f070193;
    public static final int flag_sweden=0x7f070194;
    public static final int flag_switzerland=0x7f070195;
    public static final int flag_syria=0x7f070196;
    public static final int flag_taiwan=0x7f070197;
    public static final int flag_tajikistan=0x7f070198;
    public static final int flag_tanzania=0x7f070199;
    public static final int flag_thailand=0x7f07019a;
    public static final int flag_tibet=0x7f07019b;
    public static final int flag_timor_leste=0x7f07019c;
    public static final int flag_togo=0x7f07019d;
    public static final int flag_tokelau=0x7f07019e;
    public static final int flag_tonga=0x7f07019f;
    public static final int flag_transparent=0x7f0701a0;
    public static final int flag_trinidad_and_tobago=0x7f0701a1;
    public static final int flag_tunisia=0x7f0701a2;
    public static final int flag_turkey=0x7f0701a3;
    public static final int flag_turkmenistan=0x7f0701a4;
    public static final int flag_turks_and_caicos_islands=0x7f0701a5;
    public static final int flag_tuvalu=0x7f0701a6;
    public static final int flag_uae=0x7f0701a7;
    public static final int flag_uganda=0x7f0701a8;
    public static final int flag_ukraine=0x7f0701a9;
    public static final int flag_united_kingdom=0x7f0701aa;
    public static final int flag_united_states_of_america=0x7f0701ab;
    public static final int flag_uruguay=0x7f0701ac;
    public static final int flag_us_virgin_islands=0x7f0701ad;
    public static final int flag_uzbekistan=0x7f0701ae;
    public static final int flag_vanuatu=0x7f0701af;
    public static final int flag_vatican_city=0x7f0701b0;
    public static final int flag_venezuela=0x7f0701b1;
    public static final int flag_vietnam=0x7f0701b2;
    public static final int flag_wallis_and_futuna=0x7f0701b3;
    public static final int flag_yemen=0x7f0701b4;
    public static final int flag_zambia=0x7f0701b5;
    public static final int flag_zimbabwe=0x7f0701b6;
    public static final int googleg_disabled_color_18=0x7f0701b7;
    public static final int googleg_standard_color_18=0x7f0701b8;
    public static final int grey_background=0x7f0701b9;
    public static final int grey_bg=0x7f0701ba;
    public static final int ic_add=0x7f0701bb;
    public static final int ic_arrow_down_24dp=0x7f0701bc;
    public static final int ic_arrow_drop_down_white_24dp=0x7f0701bd;
    public static final int ic_attach=0x7f0701be;
    public static final int ic_back_arrow_black=0x7f0701bf;
    public static final int ic_backspace_black_24dp=0x7f0701c0;
    public static final int ic_baseline_keyboard_arrow_right_24=0x7f0701c1;
    public static final int ic_baseline_keyboard_backspace_24=0x7f0701c2;
    public static final int ic_calendar=0x7f0701c3;
    public static final int ic_call=0x7f0701c4;
    public static final int ic_call2=0x7f0701c5;
    public static final int ic_camera=0x7f0701c6;
    public static final int ic_camera1=0x7f0701c7;
    public static final int ic_check_white_18dp=0x7f0701c8;
    public static final int ic_clear_black_24dp=0x7f0701c9;
    public static final int ic_clock=0x7f0701ca;
    public static final int ic_clock_black_24dp=0x7f0701cb;
    public static final int ic_close=0x7f0701cc;
    public static final int ic_company=0x7f0701cd;
    public static final int ic_company1=0x7f0701ce;
    public static final int ic_company_image=0x7f0701cf;
    public static final int ic_distance=0x7f0701d0;
    public static final int ic_down_arrow=0x7f0701d1;
    public static final int ic_drop_down=0x7f0701d2;
    public static final int ic_edit=0x7f0701d3;
    public static final int ic_empty_dracula=0x7f0701d4;
    public static final int ic_empty_zhihu=0x7f0701d5;
    public static final int ic_gif=0x7f0701d6;
    public static final int ic_group_image=0x7f0701d7;
    public static final int ic_icon_back=0x7f0701d8;
    public static final int ic_icon_close_circle=0x7f0701d9;
    public static final int ic_icon_plus_bg=0x7f0701da;
    public static final int ic_icon_target=0x7f0701db;
    public static final int ic_img=0x7f0701dc;
    public static final int ic_keyboard_black_24dp=0x7f0701dd;
    public static final int ic_launcher_background=0x7f0701de;
    public static final int ic_launcher_foreground=0x7f0701df;
    public static final int ic_list_view=0x7f0701e0;
    public static final int ic_location=0x7f0701e1;
    public static final int ic_mail=0x7f0701e2;
    public static final int ic_map=0x7f0701e3;
    public static final int ic_mtrl_checked_circle=0x7f0701e4;
    public static final int ic_mtrl_chip_checked_black=0x7f0701e5;
    public static final int ic_mtrl_chip_checked_circle=0x7f0701e6;
    public static final int ic_mtrl_chip_close_circle=0x7f0701e7;
    public static final int ic_next=0x7f0701e8;
    public static final int ic_photo_camera_white_24dp=0x7f0701e9;
    public static final int ic_placeholder__7__2=0x7f0701ea;
    public static final int ic_play_circle_outline_white_48dp=0x7f0701eb;
    public static final int ic_preview_radio_off=0x7f0701ec;
    public static final int ic_preview_radio_on=0x7f0701ed;
    public static final int ic_search_yellow=0x7f0701ee;
    public static final int ic_upload_new=0x7f0701ef;
    public static final int ic_user=0x7f0701f0;
    public static final int ic_user1=0x7f0701f1;
    public static final int mail=0x7f0701f2;
    public static final int maraker_2=0x7f0701f3;
    public static final int marker_1=0x7f0701f4;
    public static final int material_cursor_drawable=0x7f0701f5;
    public static final int material_ic_calendar_black_24dp=0x7f0701f6;
    public static final int material_ic_clear_black_24dp=0x7f0701f7;
    public static final int material_ic_edit_black_24dp=0x7f0701f8;
    public static final int material_ic_keyboard_arrow_left_black_24dp=0x7f0701f9;
    public static final int material_ic_keyboard_arrow_next_black_24dp=0x7f0701fa;
    public static final int material_ic_keyboard_arrow_previous_black_24dp=0x7f0701fb;
    public static final int material_ic_keyboard_arrow_right_black_24dp=0x7f0701fc;
    public static final int material_ic_menu_arrow_down_black_24dp=0x7f0701fd;
    public static final int material_ic_menu_arrow_up_black_24dp=0x7f0701fe;
    public static final int menu=0x7f0701ff;
    public static final int menu_attendance_active_btn=0x7f070200;
    public static final int menu_attendance_btn=0x7f070201;
    public static final int menu_notification_active_btn=0x7f070202;
    public static final int menu_notification_btn=0x7f070203;
    public static final int menu_profile_active_btn=0x7f070204;
    public static final int menu_profile_btn=0x7f070205;
    public static final int menu_projects_active_btn=0x7f070206;
    public static final int menu_projects_btn=0x7f070207;
    public static final int mtrl_dialog_background=0x7f070208;
    public static final int mtrl_dropdown_arrow=0x7f070209;
    public static final int mtrl_ic_arrow_drop_down=0x7f07020a;
    public static final int mtrl_ic_arrow_drop_up=0x7f07020b;
    public static final int mtrl_ic_cancel=0x7f07020c;
    public static final int mtrl_ic_error=0x7f07020d;
    public static final int mtrl_popupmenu_background=0x7f07020e;
    public static final int mtrl_popupmenu_background_dark=0x7f07020f;
    public static final int mtrl_tabs_default_indicator=0x7f070210;
    public static final int my_background=0x7f070211;
    public static final int navigation_empty_icon=0x7f070212;
    public static final int new_bottom_nav_bg=0x7f070213;
    public static final int no_internet_thumb=0x7f070214;
    public static final int notification_action_background=0x7f070215;
    public static final int notification_bg=0x7f070216;
    public static final int notification_bg_low=0x7f070217;
    public static final int notification_bg_low_normal=0x7f070218;
    public static final int notification_bg_low_pressed=0x7f070219;
    public static final int notification_bg_normal=0x7f07021a;
    public static final int notification_bg_normal_pressed=0x7f07021b;
    public static final int notification_icon_background=0x7f07021c;
    public static final int notification_template_icon_bg=0x7f07021d;
    public static final int notification_template_icon_low_bg=0x7f07021e;
    public static final int notification_tile_bg=0x7f07021f;
    public static final int notify_panel_notification_icon_bg=0x7f070220;
    public static final int pin1=0x7f070221;
    public static final int pin2=0x7f070222;
    public static final int places_autocomplete_toolbar_shadow=0x7f070223;
    public static final int places_powered_by_google_dark=0x7f070224;
    public static final int places_powered_by_google_light=0x7f070225;
    public static final int preference_list_divider_material=0x7f070226;
    public static final int quantum_ic_arrow_back_grey600_24=0x7f070227;
    public static final int quantum_ic_clear_grey600_24=0x7f070228;
    public static final int quantum_ic_cloud_off_vd_theme_24=0x7f070229;
    public static final int quantum_ic_search_grey600_24=0x7f07022a;
    public static final int red_cross=0x7f07022b;
    public static final int search=0x7f07022c;
    public static final int shadow_bg=0x7f07022d;
    public static final int spinner_background=0x7f07022e;
    public static final int splash_towrevo=0x7f07022f;
    public static final int test_custom_background=0x7f070230;
    public static final int tooltip_frame_dark=0x7f070231;
    public static final int tooltip_frame_light=0x7f070232;
    public static final int tow_splash=0x7f070233;
    public static final int ucrop_ic_angle=0x7f070234;
    public static final int ucrop_ic_crop=0x7f070235;
    public static final int ucrop_ic_cross=0x7f070236;
    public static final int ucrop_ic_done=0x7f070237;
    public static final int ucrop_ic_next=0x7f070238;
    public static final int ucrop_ic_reset=0x7f070239;
    public static final int ucrop_ic_rotate=0x7f07023a;
    public static final int ucrop_ic_scale=0x7f07023b;
    public static final int ucrop_shadow_upside=0x7f07023c;
    public static final int ucrop_vector_ic_crop=0x7f07023d;
    public static final int ucrop_vector_loader=0x7f07023e;
    public static final int ucrop_vector_loader_animated=0x7f07023f;
    public static final int white=0x7f070240;
  }
  public static final class font {
    public static final int sf_pro_text_bold=0x7f080000;
    public static final int sf_pro_text_heavy=0x7f080001;
    public static final int sf_pro_text_light=0x7f080002;
    public static final int sf_pro_text_medium=0x7f080003;
    public static final int sf_pro_text_regular=0x7f080004;
    public static final int sf_pro_text_semibold=0x7f080005;
  }
  public static final class id {
    public static final int AFRIKAANS=0x7f090000;
    public static final int ALT=0x7f090001;
    public static final int ARABIC=0x7f090002;
    public static final int BENGALI=0x7f090003;
    public static final int BOTTOM_END=0x7f090004;
    public static final int BOTTOM_START=0x7f090005;
    public static final int CENTER=0x7f090006;
    public static final int CHINESE_SIMPLIFIED=0x7f090007;
    public static final int CHINESE_TRADITIONAL=0x7f090008;
    public static final int CTRL=0x7f090009;
    public static final int CZECH=0x7f09000a;
    public static final int CarimagesREC=0x7f09000b;
    public static final int DANISH=0x7f09000c;
    public static final int DUTCH=0x7f09000d;
    public static final int ENGLISH=0x7f09000e;
    public static final int FARSI=0x7f09000f;
    public static final int FIXED_LINE=0x7f090010;
    public static final int FIXED_LINE_OR_MOBILE=0x7f090011;
    public static final int FRENCH=0x7f090012;
    public static final int FUNCTION=0x7f090013;
    public static final int GERMAN=0x7f090014;
    public static final int GREEK=0x7f090015;
    public static final int GUJARATI=0x7f090016;
    public static final int HEBREW=0x7f090017;
    public static final int HINDI=0x7f090018;
    public static final int INDONESIA=0x7f090019;
    public static final int ITALIAN=0x7f09001a;
    public static final int JAPANESE=0x7f09001b;
    public static final int KAZAKH=0x7f09001c;
    public static final int KOREAN=0x7f09001d;
    public static final int LEFT=0x7f09001e;
    public static final int LOCALE_NETWORK=0x7f09001f;
    public static final int LOCALE_NETWORK_SIM=0x7f090020;
    public static final int LOCALE_ONLY=0x7f090021;
    public static final int LOCALE_SIM=0x7f090022;
    public static final int LOCALE_SIM_NETWORK=0x7f090023;
    public static final int MARATHI=0x7f090024;
    public static final int META=0x7f090025;
    public static final int MOBILE=0x7f090026;
    public static final int NETWORK_LOCALE=0x7f090027;
    public static final int NETWORK_LOCALE_SIM=0x7f090028;
    public static final int NETWORK_ONLY=0x7f090029;
    public static final int NETWORK_SIM=0x7f09002a;
    public static final int NETWORK_SIM_LOCALE=0x7f09002b;
    public static final int NO_DEBUG=0x7f09002c;
    public static final int PAGER=0x7f09002d;
    public static final int PERSONAL_NUMBER=0x7f09002e;
    public static final int POLISH=0x7f09002f;
    public static final int PORTUGUESE=0x7f090030;
    public static final int PREMIUM_RATE=0x7f090031;
    public static final int PUNJABI=0x7f090032;
    public static final int ProfileLL=0x7f090033;
    public static final int RIGHT=0x7f090034;
    public static final int RUSSIAN=0x7f090035;
    public static final int SHARED_COST=0x7f090036;
    public static final int SHIFT=0x7f090037;
    public static final int SHOW_ALL=0x7f090038;
    public static final int SHOW_PATH=0x7f090039;
    public static final int SHOW_PROGRESS=0x7f09003a;
    public static final int SIM_LOCALE=0x7f09003b;
    public static final int SIM_LOCALE_NETWORK=0x7f09003c;
    public static final int SIM_NETWORK=0x7f09003d;
    public static final int SIM_NETWORK_LOCALE=0x7f09003e;
    public static final int SIM_ONLY=0x7f09003f;
    public static final int SLOVAK=0x7f090040;
    public static final int SLOVENIAN=0x7f090041;
    public static final int SPANISH=0x7f090042;
    public static final int SWEDISH=0x7f090043;
    public static final int SYM=0x7f090044;
    public static final int TAGALOG=0x7f090045;
    public static final int TOLL_FREE=0x7f090046;
    public static final int TOP_END=0x7f090047;
    public static final int TOP_START=0x7f090048;
    public static final int TURKISH=0x7f090049;
    public static final int UAN=0x7f09004a;
    public static final int UKRAINIAN=0x7f09004b;
    public static final int UNKNOWN=0x7f09004c;
    public static final int URDU=0x7f09004d;
    public static final int UZBEK=0x7f09004e;
    public static final int VIETNAMESE=0x7f09004f;
    public static final int VOICEMAIL=0x7f090050;
    public static final int VOIP=0x7f090051;
    public static final int aboutDesTV=0x7f090052;
    public static final int aboutET=0x7f090053;
    public static final int aboutInquiryTV=0x7f090054;
    public static final int aboutTV=0x7f090055;
    public static final int aboutUSTV=0x7f090056;
    public static final int aboutUsWV=0x7f090057;
    public static final int accelerate=0x7f090058;
    public static final int accessibility_action_clickable_span=0x7f090059;
    public static final int accessibility_custom_action_0=0x7f09005a;
    public static final int accessibility_custom_action_1=0x7f09005b;
    public static final int accessibility_custom_action_10=0x7f09005c;
    public static final int accessibility_custom_action_11=0x7f09005d;
    public static final int accessibility_custom_action_12=0x7f09005e;
    public static final int accessibility_custom_action_13=0x7f09005f;
    public static final int accessibility_custom_action_14=0x7f090060;
    public static final int accessibility_custom_action_15=0x7f090061;
    public static final int accessibility_custom_action_16=0x7f090062;
    public static final int accessibility_custom_action_17=0x7f090063;
    public static final int accessibility_custom_action_18=0x7f090064;
    public static final int accessibility_custom_action_19=0x7f090065;
    public static final int accessibility_custom_action_2=0x7f090066;
    public static final int accessibility_custom_action_20=0x7f090067;
    public static final int accessibility_custom_action_21=0x7f090068;
    public static final int accessibility_custom_action_22=0x7f090069;
    public static final int accessibility_custom_action_23=0x7f09006a;
    public static final int accessibility_custom_action_24=0x7f09006b;
    public static final int accessibility_custom_action_25=0x7f09006c;
    public static final int accessibility_custom_action_26=0x7f09006d;
    public static final int accessibility_custom_action_27=0x7f09006e;
    public static final int accessibility_custom_action_28=0x7f09006f;
    public static final int accessibility_custom_action_29=0x7f090070;
    public static final int accessibility_custom_action_3=0x7f090071;
    public static final int accessibility_custom_action_30=0x7f090072;
    public static final int accessibility_custom_action_31=0x7f090073;
    public static final int accessibility_custom_action_4=0x7f090074;
    public static final int accessibility_custom_action_5=0x7f090075;
    public static final int accessibility_custom_action_6=0x7f090076;
    public static final int accessibility_custom_action_7=0x7f090077;
    public static final int accessibility_custom_action_8=0x7f090078;
    public static final int accessibility_custom_action_9=0x7f090079;
    public static final int accidentRB=0x7f09007a;
    public static final int action0=0x7f09007b;
    public static final int action_bar=0x7f09007c;
    public static final int action_bar_activity_content=0x7f09007d;
    public static final int action_bar_container=0x7f09007e;
    public static final int action_bar_root=0x7f09007f;
    public static final int action_bar_spinner=0x7f090080;
    public static final int action_bar_subtitle=0x7f090081;
    public static final int action_bar_title=0x7f090082;
    public static final int action_container=0x7f090083;
    public static final int action_context_bar=0x7f090084;
    public static final int action_divider=0x7f090085;
    public static final int action_image=0x7f090086;
    public static final int action_menu_divider=0x7f090087;
    public static final int action_menu_presenter=0x7f090088;
    public static final int action_mode_bar=0x7f090089;
    public static final int action_mode_bar_stub=0x7f09008a;
    public static final int action_mode_close_button=0x7f09008b;
    public static final int action_text=0x7f09008c;
    public static final int actions=0x7f09008d;
    public static final int activity_chooser_view_content=0x7f09008e;
    public static final int add=0x7f09008f;
    public static final int addAddressRL=0x7f090090;
    public static final int addNewImage=0x7f090091;
    public static final int addPhotosFL=0x7f090092;
    public static final int addressET=0x7f090093;
    public static final int addressTIL=0x7f090094;
    public static final int addressTV=0x7f090095;
    public static final int addressView=0x7f090096;
    public static final int adjust_height=0x7f090097;
    public static final int adjust_width=0x7f090098;
    public static final int agreeconditionCB=0x7f090099;
    public static final int album_cover=0x7f09009a;
    public static final int album_media_count=0x7f09009b;
    public static final int album_name=0x7f09009c;
    public static final int alertTitle=0x7f09009d;
    public static final int aligned=0x7f09009e;
    public static final int all=0x7f09009f;
    public static final int alreadyHaveAccountTTV=0x7f0900a0;
    public static final int alreadyHaveAccountTV=0x7f0900a1;
    public static final int always=0x7f0900a2;
    public static final int amu_text=0x7f0900a3;
    public static final int andTV=0x7f0900a4;
    public static final int animateToEnd=0x7f0900a5;
    public static final int animateToStart=0x7f0900a6;
    public static final int asConfigured=0x7f0900a7;
    public static final int async=0x7f0900a8;
    public static final int attachImageTV=0x7f0900a9;
    public static final int attendenceLL=0x7f0900aa;
    public static final int auto=0x7f0900ab;
    public static final int autoComplete=0x7f0900ac;
    public static final int autoCompleteToEnd=0x7f0900ad;
    public static final int autoCompleteToStart=0x7f0900ae;
    public static final int automatic=0x7f0900af;
    public static final int backArrowIV=0x7f0900b0;
    public static final int backIV=0x7f0900b1;
    public static final int backRL=0x7f0900b2;
    public static final int backiv=0x7f0900b3;
    public static final int badge_text_view=0x7f0900b4;
    public static final int barrier=0x7f0900b5;
    public static final int baseline=0x7f0900b6;
    public static final int batteryIssueRB=0x7f0900b7;
    public static final int beginOnFirstDraw=0x7f0900b8;
    public static final int beginning=0x7f0900b9;
    public static final int blocking=0x7f0900ba;
    public static final int bottom=0x7f0900bb;
    public static final int bottomSheetBT=0x7f0900bc;
    public static final int bottom_toolbar=0x7f0900bd;
    public static final int bounce=0x7f0900be;
    public static final int box_count=0x7f0900bf;
    public static final int browseImageIV=0x7f0900c0;
    public static final int browseUserImageIV=0x7f0900c1;
    public static final int browser_actions_header_text=0x7f0900c2;
    public static final int browser_actions_menu_item_icon=0x7f0900c3;
    public static final int browser_actions_menu_item_text=0x7f0900c4;
    public static final int browser_actions_menu_items=0x7f0900c5;
    public static final int browser_actions_menu_view=0x7f0900c6;
    public static final int btnsLL=0x7f0900c7;
    public static final int button=0x7f0900c8;
    public static final int buttonPanel=0x7f0900c9;
    public static final int button_apply=0x7f0900ca;
    public static final int button_back=0x7f0900cb;
    public static final int button_preview=0x7f0900cc;
    public static final int calenderCard=0x7f0900cd;
    public static final int callID=0x7f0900ce;
    public static final int callIV=0x7f0900cf;
    public static final int callTV=0x7f0900d0;
    public static final int callUsTV=0x7f0900d1;
    public static final int cancelBTN=0x7f0900d2;
    public static final int cancel_action=0x7f0900d3;
    public static final int cancel_button=0x7f0900d4;
    public static final int carCompanyTowingServiceTV=0x7f0900d5;
    public static final int carTowingServiceTV=0x7f0900d6;
    public static final int categoryCheck=0x7f0900d7;
    public static final int categoryIdTV=0x7f0900d8;
    public static final int categoryREC=0x7f0900d9;
    public static final int categoryTV=0x7f0900da;
    public static final int center=0x7f0900db;
    public static final int center_horizontal=0x7f0900dc;
    public static final int center_vertical=0x7f0900dd;
    public static final int chain=0x7f0900de;
    public static final int chains=0x7f0900df;
    public static final int changePWMainLL=0x7f0900e0;
    public static final int changePWTV=0x7f0900e1;
    public static final int check_view=0x7f0900e2;
    public static final int checkbox=0x7f0900e3;
    public static final int checked=0x7f0900e4;
    public static final int chip=0x7f0900e5;
    public static final int chip1=0x7f0900e6;
    public static final int chip2=0x7f0900e7;
    public static final int chip3=0x7f0900e8;
    public static final int chip_group=0x7f0900e9;
    public static final int chnageTV=0x7f0900ea;
    public static final int chronometer=0x7f0900eb;
    public static final int circle_center=0x7f0900ec;
    public static final int clear_text=0x7f0900ed;
    public static final int clip_horizontal=0x7f0900ee;
    public static final int clip_vertical=0x7f0900ef;
    public static final int clockwise=0x7f0900f0;
    public static final int closeBT=0x7f0900f1;
    public static final int closeIv=0x7f0900f2;
    public static final int collapseActionView=0x7f0900f3;
    public static final int com_facebook_body_frame=0x7f0900f4;
    public static final int com_facebook_button_xout=0x7f0900f5;
    public static final int com_facebook_device_auth_instructions=0x7f0900f6;
    public static final int com_facebook_fragment_container=0x7f0900f7;
    public static final int com_facebook_login_fragment_progress_bar=0x7f0900f8;
    public static final int com_facebook_smart_instructions_0=0x7f0900f9;
    public static final int com_facebook_smart_instructions_or=0x7f0900fa;
    public static final int com_facebook_tooltip_bubble_view_bottom_pointer=0x7f0900fb;
    public static final int com_facebook_tooltip_bubble_view_text_body=0x7f0900fc;
    public static final int com_facebook_tooltip_bubble_view_top_pointer=0x7f0900fd;
    public static final int companyCV=0x7f0900fe;
    public static final int companyDetailsTV=0x7f0900ff;
    public static final int companyImageIV=0x7f090100;
    public static final int companyNameET=0x7f090101;
    public static final int companyNameTV=0x7f090102;
    public static final int companyProfileIV=0x7f090103;
    public static final int companyTV=0x7f090104;
    public static final int confirmPasswordEET=0x7f090105;
    public static final int confirmPasswordTV=0x7f090106;
    public static final int confirm_button=0x7f090107;
    public static final int confirmation_code=0x7f090108;
    public static final int contactTV=0x7f090109;
    public static final int container=0x7f09010a;
    public static final int content=0x7f09010b;
    public static final int contentPanel=0x7f09010c;
    public static final int continueBTN=0x7f09010d;
    public static final int continuueBtn=0x7f09010e;
    public static final int coordinator=0x7f09010f;
    public static final int cos=0x7f090110;
    public static final int counterclockwise=0x7f090111;
    public static final int countryCodeHolder=0x7f090112;
    public static final int countryCodePicker=0x7f090113;
    public static final int crashRB=0x7f090114;
    public static final int createTextTV=0x7f090115;
    public static final int currentPasswordEET=0x7f090116;
    public static final int currentPasswordTV=0x7f090117;
    public static final int custom=0x7f090118;
    public static final int customPanel=0x7f090119;
    public static final int customerLocationET=0x7f09011a;
    public static final int cut=0x7f09011b;
    public static final int dark=0x7f09011c;
    public static final int dateOfInquiryTV=0x7f09011d;
    public static final int dateTV=0x7f09011e;
    public static final int date_picker_actions=0x7f09011f;
    public static final int decelerate=0x7f090120;
    public static final int decelerateAndComplete=0x7f090121;
    public static final int decor_content_parent=0x7f090122;
    public static final int default_activity_button=0x7f090123;
    public static final int deltaRelative=0x7f090124;
    public static final int descriptionTV=0x7f090125;
    public static final int design_bottom_sheet=0x7f090126;
    public static final int design_menu_item_action_area=0x7f090127;
    public static final int design_menu_item_action_area_stub=0x7f090128;
    public static final int design_menu_item_text=0x7f090129;
    public static final int design_navigation_view=0x7f09012a;
    public static final int dialog_button=0x7f09012b;
    public static final int dimensions=0x7f09012c;
    public static final int direct=0x7f09012d;
    public static final int disableHome=0x7f09012e;
    public static final int disablePostScroll=0x7f09012f;
    public static final int disableScroll=0x7f090130;
    public static final int display_always=0x7f090131;
    public static final int distanceTV=0x7f090132;
    public static final int doneTV=0x7f090133;
    public static final int dontHaveAccountTV=0x7f090134;
    public static final int dontHaveAnAccountTV=0x7f090135;
    public static final int dragDown=0x7f090136;
    public static final int dragEnd=0x7f090137;
    public static final int dragLeft=0x7f090138;
    public static final int dragRight=0x7f090139;
    public static final int dragStart=0x7f09013a;
    public static final int dragUp=0x7f09013b;
    public static final int dropdown_menu=0x7f09013c;
    public static final int eaddressET=0x7f09013d;
    public static final int easeIn=0x7f09013e;
    public static final int easeInOut=0x7f09013f;
    public static final int easeOut=0x7f090140;
    public static final int editIV=0x7f090141;
    public static final int editImage=0x7f090142;
    public static final int editImageFL=0x7f090143;
    public static final int editProfileMainRL=0x7f090144;
    public static final int editText_search=0x7f090145;
    public static final int editUserImageFL=0x7f090146;
    public static final int edit_query=0x7f090147;
    public static final int elastic=0x7f090148;
    public static final int emailAddressTV=0x7f090149;
    public static final int emailContactTV=0x7f09014a;
    public static final int emailET=0x7f09014b;
    public static final int emailHintTV=0x7f09014c;
    public static final int emailIdET=0x7f09014d;
    public static final int emailTIL=0x7f09014e;
    public static final int emailaddressTV=0x7f09014f;
    public static final int empty_view=0x7f090150;
    public static final int empty_view_content=0x7f090151;
    public static final int end=0x7f090152;
    public static final int endToStart=0x7f090153;
    public static final int end_padder=0x7f090154;
    public static final int enterAlways=0x7f090155;
    public static final int enterAlwaysCollapsed=0x7f090156;
    public static final int exitUntilCollapsed=0x7f090157;
    public static final int expand_activities_button=0x7f090158;
    public static final int expanded_menu=0x7f090159;
    public static final int fNameET=0x7f09015a;
    public static final int fade=0x7f09015b;
    public static final int faqChildTV=0x7f09015c;
    public static final int faqExpandableList=0x7f09015d;
    public static final int faqHeaderTV=0x7f09015e;
    public static final int faqIV=0x7f09015f;
    public static final int fastscroll=0x7f090160;
    public static final int fbLoginBT=0x7f090161;
    public static final int fill=0x7f090162;
    public static final int fill_horizontal=0x7f090163;
    public static final int fill_vertical=0x7f090164;
    public static final int filled=0x7f090165;
    public static final int filterLL=0x7f090166;
    public static final int firstNameTV=0x7f090167;
    public static final int firstnameET=0x7f090168;
    public static final int fitToContents=0x7f090169;
    public static final int fixed=0x7f09016a;
    public static final int flatTireRB=0x7f09016b;
    public static final int flip=0x7f09016c;
    public static final int floating=0x7f09016d;
    public static final int fnameTIL=0x7f09016e;
    public static final int forever=0x7f09016f;
    public static final int forgetPasswordTV=0x7f090170;
    public static final int forgotMainRL=0x7f090171;
    public static final int forgotpasswordTV=0x7f090172;
    public static final int fragment_container_view_tag=0x7f090173;
    public static final int fullAddressTV=0x7f090174;
    public static final int getDirectionLL=0x7f090175;
    public static final int getDirectionTV=0x7f090176;
    public static final int ghost_view=0x7f090177;
    public static final int ghost_view_holder=0x7f090178;
    public static final int gif=0x7f090179;
    public static final int give_us_a_review_landmine_button=0x7f09017a;
    public static final int give_us_a_review_landmine_main_layout=0x7f09017b;
    public static final int give_us_a_review_landmine_text_1=0x7f09017c;
    public static final int give_us_a_review_landmine_text_2=0x7f09017d;
    public static final int glide_custom_view_target_tag=0x7f09017e;
    public static final int gone=0x7f09017f;
    public static final int googleLoginBT=0x7f090180;
    public static final int graph=0x7f090181;
    public static final int graph_wrap=0x7f090182;
    public static final int group_divider=0x7f090183;
    public static final int groups=0x7f090184;
    public static final int guideline=0x7f090185;
    public static final int header_title=0x7f090186;
    public static final int hideable=0x7f090187;
    public static final int hint=0x7f090188;
    public static final int hintText=0x7f090189;
    public static final int hintTv=0x7f09018a;
    public static final int home=0x7f09018b;
    public static final int homeAsUp=0x7f09018c;
    public static final int honorRequest=0x7f09018d;
    public static final int hybrid=0x7f09018e;
    public static final int icon=0x7f09018f;
    public static final int icon_frame=0x7f090190;
    public static final int icon_group=0x7f090191;
    public static final int icon_only=0x7f090192;
    public static final int ifRoom=0x7f090193;
    public static final int ignore=0x7f090194;
    public static final int ignoreRequest=0x7f090195;
    public static final int image=0x7f090196;
    public static final int imageCalender=0x7f090197;
    public static final int imageViewPager=0x7f090198;
    public static final int imageViewRV=0x7f090199;
    public static final int imageView_arrow=0x7f09019a;
    public static final int image_back_arrow=0x7f09019b;
    public static final int image_flag=0x7f09019c;
    public static final int image_view=0x7f09019d;
    public static final int image_view_crop=0x7f09019e;
    public static final int image_view_logo=0x7f09019f;
    public static final int image_view_state_aspect_ratio=0x7f0901a0;
    public static final int image_view_state_rotate=0x7f0901a1;
    public static final int image_view_state_scale=0x7f0901a2;
    public static final int imagesREC=0x7f0901a3;
    public static final int imagesTV=0x7f0901a4;
    public static final int imgDelete=0x7f0901a5;
    public static final int imgDeleteIV=0x7f0901a6;
    public static final int imgTaskIV=0x7f0901a7;
    public static final int imgUser=0x7f0901a8;
    public static final int img_clear_query=0x7f0901a9;
    public static final int img_dismiss=0x7f0901aa;
    public static final int info=0x7f0901ab;
    public static final int informationTV=0x7f0901ac;
    public static final int inline=0x7f0901ad;
    public static final int inquiryManagementREC=0x7f0901ae;
    public static final int inquiryManagementTV=0x7f0901af;
    public static final int invisible=0x7f0901b0;
    public static final int inward=0x7f0901b1;
    public static final int italic=0x7f0901b2;
    public static final int itemCatImageView=0x7f0901b3;
    public static final int item_touch_helper_previous_elevation=0x7f0901b4;
    public static final int jumpToEnd=0x7f0901b5;
    public static final int jumpToStart=0x7f0901b6;
    public static final int kmTV=0x7f0901b7;
    public static final int lNameET=0x7f0901b8;
    public static final int labelGroup=0x7f0901b9;
    public static final int labeled=0x7f0901ba;
    public static final int large=0x7f0901bb;
    public static final int largeLabel=0x7f0901bc;
    public static final int lastNameTV=0x7f0901bd;
    public static final int lastnameET=0x7f0901be;
    public static final int layout=0x7f0901bf;
    public static final int layout_aspect_ratio=0x7f0901c0;
    public static final int layout_rotate_wheel=0x7f0901c1;
    public static final int layout_scale_wheel=0x7f0901c2;
    public static final int left=0x7f0901c3;
    public static final int leftToRight=0x7f0901c4;
    public static final int light=0x7f0901c5;
    public static final int line=0x7f0901c6;
    public static final int line1=0x7f0901c7;
    public static final int line3=0x7f0901c8;
    public static final int linear=0x7f0901c9;
    public static final int linear_flag_border=0x7f0901ca;
    public static final int linear_flag_holder=0x7f0901cb;
    public static final int listMode=0x7f0901cc;
    public static final int listViewIV=0x7f0901cd;
    public static final int listViewwIV=0x7f0901ce;
    public static final int list_item=0x7f0901cf;
    public static final int llAdd=0x7f0901d0;
    public static final int llNoInternet=0x7f0901d1;
    public static final int ll_image_pic=0x7f0901d2;
    public static final int ll_info=0x7f0901d3;
    public static final int ll_towingReason=0x7f0901d4;
    public static final int ll_type=0x7f0901d5;
    public static final int lnameTIL=0x7f0901d6;
    public static final int loader=0x7f0901d7;
    public static final int location=0x7f0901d8;
    public static final int locationIV=0x7f0901d9;
    public static final int logOutBT=0x7f0901da;
    public static final int loginBT=0x7f0901db;
    public static final int loginMainLL=0x7f0901dc;
    public static final int logoIV=0x7f0901dd;
    public static final int mDotProgressBar=0x7f0901de;
    public static final int mailID=0x7f0901df;
    public static final int mailLL=0x7f0901e0;
    public static final int mailTV=0x7f0901e1;
    public static final int mailUsTV=0x7f0901e2;
    public static final int main=0x7f0901e3;
    public static final int mainDrawer=0x7f0901e4;
    public static final int mainLL=0x7f0901e5;
    public static final int mainLayoutLL=0x7f0901e6;
    public static final int mainNavigation=0x7f0901e7;
    public static final int mainRL=0x7f0901e8;
    public static final int mainSplashLL=0x7f0901e9;
    public static final int map=0x7f0901ea;
    public static final int map2IV=0x7f0901eb;
    public static final int maps=0x7f0901ec;
    public static final int masked=0x7f0901ed;
    public static final int material_clock_display=0x7f0901ee;
    public static final int material_clock_face=0x7f0901ef;
    public static final int material_clock_hand=0x7f0901f0;
    public static final int material_clock_period_am_button=0x7f0901f1;
    public static final int material_clock_period_pm_button=0x7f0901f2;
    public static final int material_clock_period_toggle=0x7f0901f3;
    public static final int material_hour_text_input=0x7f0901f4;
    public static final int material_hour_tv=0x7f0901f5;
    public static final int material_label=0x7f0901f6;
    public static final int material_minute_text_input=0x7f0901f7;
    public static final int material_minute_tv=0x7f0901f8;
    public static final int material_textinput_timepicker=0x7f0901f9;
    public static final int material_timepicker_cancel_button=0x7f0901fa;
    public static final int material_timepicker_container=0x7f0901fb;
    public static final int material_timepicker_edit_text=0x7f0901fc;
    public static final int material_timepicker_mode_button=0x7f0901fd;
    public static final int material_timepicker_ok_button=0x7f0901fe;
    public static final int material_timepicker_view=0x7f0901ff;
    public static final int material_value_index=0x7f090200;
    public static final int media_actions=0x7f090201;
    public static final int media_thumbnail=0x7f090202;
    public static final int menuAttendanceImageIV=0x7f090203;
    public static final int menuAttendenceTV=0x7f090204;
    public static final int menuIV=0x7f090205;
    public static final int menuNotificationImageIV=0x7f090206;
    public static final int menuNotificationTV=0x7f090207;
    public static final int menuProfileImageIV=0x7f090208;
    public static final int menuProfileTV=0x7f090209;
    public static final int menuProjectImageIV=0x7f09020a;
    public static final int menuProjectTV=0x7f09020b;
    public static final int menu_crop=0x7f09020c;
    public static final int menu_loader=0x7f09020d;
    public static final int message=0x7f09020e;
    public static final int messageContactTV=0x7f09020f;
    public static final int messageET=0x7f090210;
    public static final int messageTV=0x7f090211;
    public static final int middle=0x7f090212;
    public static final int mini=0x7f090213;
    public static final int mobileNumberTV=0x7f090214;
    public static final int mobile_navigation=0x7f090215;
    public static final int mobile_otp=0x7f090216;
    public static final int month_grid=0x7f090217;
    public static final int month_navigation_bar=0x7f090218;
    public static final int month_navigation_fragment_toggle=0x7f090219;
    public static final int month_navigation_next=0x7f09021a;
    public static final int month_navigation_previous=0x7f09021b;
    public static final int month_title=0x7f09021c;
    public static final int motion_base=0x7f09021d;
    public static final int mtrl_anchor_parent=0x7f09021e;
    public static final int mtrl_calendar_day_selector_frame=0x7f09021f;
    public static final int mtrl_calendar_days_of_week=0x7f090220;
    public static final int mtrl_calendar_frame=0x7f090221;
    public static final int mtrl_calendar_main_pane=0x7f090222;
    public static final int mtrl_calendar_months=0x7f090223;
    public static final int mtrl_calendar_selection_frame=0x7f090224;
    public static final int mtrl_calendar_text_input_frame=0x7f090225;
    public static final int mtrl_calendar_year_selector_frame=0x7f090226;
    public static final int mtrl_card_checked_layer_id=0x7f090227;
    public static final int mtrl_child_content_container=0x7f090228;
    public static final int mtrl_internal_children_alpha_tag=0x7f090229;
    public static final int mtrl_motion_snapshot_view=0x7f09022a;
    public static final int mtrl_picker_fullscreen=0x7f09022b;
    public static final int mtrl_picker_header=0x7f09022c;
    public static final int mtrl_picker_header_selection_text=0x7f09022d;
    public static final int mtrl_picker_header_title_and_selection=0x7f09022e;
    public static final int mtrl_picker_header_toggle=0x7f09022f;
    public static final int mtrl_picker_text_input_date=0x7f090230;
    public static final int mtrl_picker_text_input_range_end=0x7f090231;
    public static final int mtrl_picker_text_input_range_start=0x7f090232;
    public static final int mtrl_picker_title_text=0x7f090233;
    public static final int mtrl_view_tag_bottom_padding=0x7f090234;
    public static final int multipleImageBT=0x7f090235;
    public static final int multiply=0x7f090236;
    public static final int myInquiresREC=0x7f090237;
    public static final int nameContactTV=0x7f090238;
    public static final int nameET=0x7f090239;
    public static final int nameTV=0x7f09023a;
    public static final int navCompanyREC=0x7f09023b;
    public static final int navController=0x7f09023c;
    public static final int navLogoutLL=0x7f09023d;
    public static final int navLogoutLLL=0x7f09023e;
    public static final int navLogoutTV=0x7f09023f;
    public static final int navREC=0x7f090240;
    public static final int navTitleTV=0x7f090241;
    public static final int navView=0x7f090242;
    public static final int navViewLL=0x7f090243;
    public static final int nav_controller_view_tag=0x7f090244;
    public static final int nav_host_fragment_container=0x7f090245;
    public static final int navigation_attendance=0x7f090246;
    public static final int navigation_header_container=0x7f090247;
    public static final int navigation_notification=0x7f090248;
    public static final int navigation_profile=0x7f090249;
    public static final int navigation_projects=0x7f09024a;
    public static final int never=0x7f09024b;
    public static final int never_display=0x7f09024c;
    public static final int newPasswordEET=0x7f09024d;
    public static final int newPasswordTV=0x7f09024e;
    public static final int newTitle=0x7f09024f;
    public static final int nextBT=0x7f090250;
    public static final int noDataFoundTv=0x7f090251;
    public static final int noInternetView=0x7f090252;
    public static final int noScroll=0x7f090253;
    public static final int none=0x7f090254;
    public static final int normal=0x7f090255;
    public static final int notificationLL=0x7f090256;
    public static final int notification_background=0x7f090257;
    public static final int notification_main_column=0x7f090258;
    public static final int notification_main_column_container=0x7f090259;
    public static final int nowBTN=0x7f09025a;
    public static final int numberET=0x7f09025b;
    public static final int numberLT=0x7f09025c;
    public static final int off=0x7f09025d;
    public static final int on=0x7f09025e;
    public static final int open_graph=0x7f09025f;
    public static final int original=0x7f090260;
    public static final int originalLayout=0x7f090261;
    public static final int otherRB=0x7f090262;
    public static final int otpTV=0x7f090263;
    public static final int otpTv=0x7f090264;
    public static final int otp_view=0x7f090265;
    public static final int outline=0x7f090266;
    public static final int outward=0x7f090267;
    public static final int pNumberET=0x7f090268;
    public static final int packed=0x7f090269;
    public static final int page=0x7f09026a;
    public static final int pager=0x7f09026b;
    public static final int parallax=0x7f09026c;
    public static final int parent=0x7f09026d;
    public static final int parentPanel=0x7f09026e;
    public static final int parentRelative=0x7f09026f;
    public static final int parent_matrix=0x7f090270;
    public static final int passwordEET=0x7f090271;
    public static final int passwordET=0x7f090272;
    public static final int passwordHintTV=0x7f090273;
    public static final int passwordTV=0x7f090274;
    public static final int password_toggle=0x7f090275;
    public static final int path=0x7f090276;
    public static final int pathRelative=0x7f090277;
    public static final int peekHeight=0x7f090278;
    public static final int percent=0x7f090279;
    public static final int phoneContactTV=0x7f09027a;
    public static final int phoneET=0x7f09027b;
    public static final int phoneNumberET=0x7f09027c;
    public static final int phoneTIL=0x7f09027d;
    public static final int photo_view=0x7f09027e;
    public static final int pickupTV=0x7f09027f;
    public static final int pin=0x7f090280;
    public static final int pinIV=0x7f090281;
    public static final int place_autocomplete_fragment=0x7f090282;
    public static final int places_autocomplete_back_button=0x7f090283;
    public static final int places_autocomplete_clear_button=0x7f090284;
    public static final int places_autocomplete_content=0x7f090285;
    public static final int places_autocomplete_error_message=0x7f090286;
    public static final int places_autocomplete_list=0x7f090287;
    public static final int places_autocomplete_powered_by_google=0x7f090288;
    public static final int places_autocomplete_powered_by_google_separator=0x7f090289;
    public static final int places_autocomplete_prediction_primary_text=0x7f09028a;
    public static final int places_autocomplete_prediction_secondary_text=0x7f09028b;
    public static final int places_autocomplete_progress=0x7f09028c;
    public static final int places_autocomplete_sad_cloud=0x7f09028d;
    public static final int places_autocomplete_search_bar=0x7f09028e;
    public static final int places_autocomplete_search_bar_container=0x7f09028f;
    public static final int places_autocomplete_search_bar_separator=0x7f090290;
    public static final int places_autocomplete_search_button=0x7f090291;
    public static final int places_autocomplete_search_input=0x7f090292;
    public static final int places_autocomplete_try_again=0x7f090293;
    public static final int places_autocomplete_try_again_progress=0x7f090294;
    public static final int pleaseEnterYourNumberToRestPasswordTV=0x7f090295;
    public static final int position=0x7f090296;
    public static final int postLayout=0x7f090297;
    public static final int preferenceDivider=0x7f090298;
    public static final int privacyTV=0x7f090299;
    public static final int privacybutton=0x7f09029a;
    public static final int privacypolicyTV=0x7f09029b;
    public static final int privacypolicyWV=0x7f09029c;
    public static final int profileDetailLL=0x7f09029d;
    public static final int profileIV=0x7f09029e;
    public static final int profileImageIV=0x7f09029f;
    public static final int profileLL=0x7f0902a0;
    public static final int profileUserImageIV=0x7f0902a1;
    public static final int progress_bar=0x7f0902a2;
    public static final int progress_circular=0x7f0902a3;
    public static final int progress_horizontal=0x7f0902a4;
    public static final int projectLL=0x7f0902a5;
    public static final int rNameET=0x7f0902a6;
    public static final int rNameLT=0x7f0902a7;
    public static final int rPhoneNumberET=0x7f0902a8;
    public static final int rPhoneNumberLT=0x7f0902a9;
    public static final int radio=0x7f0902aa;
    public static final int radioGroup=0x7f0902ab;
    public static final int ratio=0x7f0902ac;
    public static final int rectangle=0x7f0902ad;
    public static final int rectangles=0x7f0902ae;
    public static final int recycler_countryDialog=0x7f0902af;
    public static final int recycler_view=0x7f0902b0;
    public static final int recyclerview=0x7f0902b1;
    public static final int recycleview=0x7f0902b2;
    public static final int registerBT=0x7f0902b3;
    public static final int registerTV=0x7f0902b4;
    public static final int reportTV=0x7f0902b5;
    public static final int resendEmailVerifyTV=0x7f0902b6;
    public static final int resetBTN=0x7f0902b7;
    public static final int retryTV=0x7f0902b8;
    public static final int reverseSawtooth=0x7f0902b9;
    public static final int right=0x7f0902ba;
    public static final int rightToLeft=0x7f0902bb;
    public static final int right_icon=0x7f0902bc;
    public static final int right_side=0x7f0902bd;
    public static final int rlClickConsumer=0x7f0902be;
    public static final int rlNoInternet=0x7f0902bf;
    public static final int rl_holder=0x7f0902c0;
    public static final int rl_query_holder=0x7f0902c1;
    public static final int rl_title=0x7f0902c2;
    public static final int roadServiceRB=0x7f0902c3;
    public static final int root=0x7f0902c4;
    public static final int rootRL=0x7f0902c5;
    public static final int rotate_scroll_wheel=0x7f0902c6;
    public static final int rounded=0x7f0902c7;
    public static final int row_index_key=0x7f0902c8;
    public static final int rvNotification=0x7f0902c9;
    public static final int satellite=0x7f0902ca;
    public static final int save_non_transition_alpha=0x7f0902cb;
    public static final int save_overlay_view=0x7f0902cc;
    public static final int sawtooth=0x7f0902cd;
    public static final int scale=0x7f0902ce;
    public static final int scale_scroll_wheel=0x7f0902cf;
    public static final int scheduleBTN=0x7f0902d0;
    public static final int screen=0x7f0902d1;
    public static final int scroll=0x7f0902d2;
    public static final int scrollIndicatorDown=0x7f0902d3;
    public static final int scrollIndicatorUp=0x7f0902d4;
    public static final int scrollView=0x7f0902d5;
    public static final int scrollable=0x7f0902d6;
    public static final int seamless=0x7f0902d7;
    public static final int searchIV=0x7f0902d8;
    public static final int searchLocationLL=0x7f0902d9;
    public static final int searchLocationTV=0x7f0902da;
    public static final int searchRL=0x7f0902db;
    public static final int search_badge=0x7f0902dc;
    public static final int search_bar=0x7f0902dd;
    public static final int search_button=0x7f0902de;
    public static final int search_close_btn=0x7f0902df;
    public static final int search_edit_frame=0x7f0902e0;
    public static final int search_go_btn=0x7f0902e1;
    public static final int search_mag_icon=0x7f0902e2;
    public static final int search_plate=0x7f0902e3;
    public static final int search_src_text=0x7f0902e4;
    public static final int search_voice_btn=0x7f0902e5;
    public static final int seekbar=0x7f0902e6;
    public static final int seekbar_value=0x7f0902e7;
    public static final int selectBTN=0x7f0902e8;
    public static final int selectTV=0x7f0902e9;
    public static final int select_dialog_listview=0x7f0902ea;
    public static final int selected=0x7f0902eb;
    public static final int selected_album=0x7f0902ec;
    public static final int selection_type=0x7f0902ed;
    public static final int sendBTN=0x7f0902ee;
    public static final int sendButton=0x7f0902ef;
    public static final int sendInquiryBT=0x7f0902f0;
    public static final int shareBT=0x7f0902f1;
    public static final int shortcut=0x7f0902f2;
    public static final int showCustom=0x7f0902f3;
    public static final int showHome=0x7f0902f4;
    public static final int showTitle=0x7f0902f5;
    public static final int signInBTN=0x7f0902f6;
    public static final int signInTV=0x7f0902f7;
    public static final int signUpBTN=0x7f0902f8;
    public static final int signUpLable=0x7f0902f9;
    public static final int signUpLoginTV=0x7f0902fa;
    public static final int signupTV=0x7f0902fb;
    public static final int sin=0x7f0902fc;
    public static final int size=0x7f0902fd;
    public static final int skipCollapsed=0x7f0902fe;
    public static final int slide=0x7f0902ff;
    public static final int small=0x7f090300;
    public static final int smallLabel=0x7f090301;
    public static final int snackbar_action=0x7f090302;
    public static final int snackbar_text=0x7f090303;
    public static final int snap=0x7f090304;
    public static final int snapMargins=0x7f090305;
    public static final int spacer=0x7f090306;
    public static final int spacing=0x7f090307;
    public static final int spinner=0x7f090308;
    public static final int spline=0x7f090309;
    public static final int split_action_bar=0x7f09030a;
    public static final int spread=0x7f09030b;
    public static final int spread_inside=0x7f09030c;
    public static final int square=0x7f09030d;
    public static final int src_atop=0x7f09030e;
    public static final int src_in=0x7f09030f;
    public static final int src_over=0x7f090310;
    public static final int standard=0x7f090311;
    public static final int start=0x7f090312;
    public static final int startHorizontal=0x7f090313;
    public static final int startToEnd=0x7f090314;
    public static final int startVertical=0x7f090315;
    public static final int state_aspect_ratio=0x7f090316;
    public static final int state_rotate=0x7f090317;
    public static final int state_scale=0x7f090318;
    public static final int staticLayout=0x7f090319;
    public static final int staticPostLayout=0x7f09031a;
    public static final int status_bar_latest_event_content=0x7f09031b;
    public static final int stop=0x7f09031c;
    public static final int stretch=0x7f09031d;
    public static final int submenuarrow=0x7f09031e;
    public static final int submitBT=0x7f09031f;
    public static final int submitBTN=0x7f090320;
    public static final int submitButton=0x7f090321;
    public static final int submit_area=0x7f090322;
    public static final int swipetorefreshNotificaton=0x7f090323;
    public static final int switchWidget=0x7f090324;
    public static final int tabMode=0x7f090325;
    public static final int tag_accessibility_actions=0x7f090326;
    public static final int tag_accessibility_clickable_spans=0x7f090327;
    public static final int tag_accessibility_heading=0x7f090328;
    public static final int tag_accessibility_pane_title=0x7f090329;
    public static final int tag_screen_reader_focusable=0x7f09032a;
    public static final int tag_transition_group=0x7f09032b;
    public static final int tag_unhandled_key_event_manager=0x7f09032c;
    public static final int tag_unhandled_key_listeners=0x7f09032d;
    public static final int termbutton=0x7f09032e;
    public static final int termconditonTV=0x7f09032f;
    public static final int termsTV=0x7f090330;
    public static final int termsconditionWV=0x7f090331;
    public static final int terrain=0x7f090332;
    public static final int test_checkbox_android_button_tint=0x7f090333;
    public static final int test_checkbox_app_button_tint=0x7f090334;
    public static final int test_radiobutton_android_button_tint=0x7f090335;
    public static final int test_radiobutton_app_button_tint=0x7f090336;
    public static final int text=0x7f090337;
    public static final int text2=0x7f090338;
    public static final int textEnd=0x7f090339;
    public static final int textSpacerNoButtons=0x7f09033a;
    public static final int textSpacerNoTitle=0x7f09033b;
    public static final int textStart=0x7f09033c;
    public static final int textTop=0x7f09033d;
    public static final int textView_code=0x7f09033e;
    public static final int textView_countryName=0x7f09033f;
    public static final int textView_noresult=0x7f090340;
    public static final int textView_selectedCountry=0x7f090341;
    public static final int textView_title=0x7f090342;
    public static final int text_input_end_icon=0x7f090343;
    public static final int text_input_error_icon=0x7f090344;
    public static final int text_input_start_icon=0x7f090345;
    public static final int text_view_rotate=0x7f090346;
    public static final int text_view_scale=0x7f090347;
    public static final int textinput_counter=0x7f090348;
    public static final int textinput_error=0x7f090349;
    public static final int textinput_helper_text=0x7f09034a;
    public static final int textinput_placeholder=0x7f09034b;
    public static final int textinput_prefix_text=0x7f09034c;
    public static final int textinput_suffix_text=0x7f09034d;
    public static final int thumbIV=0x7f09034e;
    public static final int time=0x7f09034f;
    public static final int timeTV=0x7f090350;
    public static final int title=0x7f090351;
    public static final int titleBar=0x7f090352;
    public static final int titleBarTV=0x7f090353;
    public static final int titleDividerNoCustom=0x7f090354;
    public static final int titleRL=0x7f090355;
    public static final int title_bar=0x7f090356;
    public static final int title_template=0x7f090357;
    public static final int titlebar_layout=0x7f090358;
    public static final int toggle=0x7f090359;
    public static final int toolbar=0x7f09035a;
    public static final int toolbar_layout=0x7f09035b;
    public static final int toolbar_title=0x7f09035c;
    public static final int top=0x7f09035d;
    public static final int topPanel=0x7f09035e;
    public static final int top_toolbar=0x7f09035f;
    public static final int tosCheckBox=0x7f090360;
    public static final int tosTextView=0x7f090361;
    public static final int touch_outside=0x7f090362;
    public static final int towing=0x7f090363;
    public static final int towingCompaniesREC=0x7f090364;
    public static final int towingReasonTV=0x7f090365;
    public static final int transitionToEnd=0x7f090366;
    public static final int transitionToStart=0x7f090367;
    public static final int transition_current_scene=0x7f090368;
    public static final int transition_layout_save=0x7f090369;
    public static final int transition_position=0x7f09036a;
    public static final int transition_scene_layoutid_cache=0x7f09036b;
    public static final int transition_transform=0x7f09036c;
    public static final int triangle=0x7f09036d;
    public static final int txtDelete=0x7f09036e;
    public static final int txtEmail=0x7f09036f;
    public static final int txtExpiring=0x7f090370;
    public static final int txtName=0x7f090371;
    public static final int txtNoInternetConnection=0x7f090372;
    public static final int txtPleaseCheck=0x7f090373;
    public static final int ucrop=0x7f090374;
    public static final int ucrop_frame=0x7f090375;
    public static final int ucrop_photobox=0x7f090376;
    public static final int unchecked=0x7f090377;
    public static final int uniform=0x7f090378;
    public static final int unknown=0x7f090379;
    public static final int unlabeled=0x7f09037a;
    public static final int up=0x7f09037b;
    public static final int uploadedByTV=0x7f09037c;
    public static final int uploadedDateTV=0x7f09037d;
    public static final int useLogo=0x7f09037e;
    public static final int userCV=0x7f09037f;
    public static final int userEmailTV=0x7f090380;
    public static final int userImageIV=0x7f090381;
    public static final int userNameTV=0x7f090382;
    public static final int userProfileIV=0x7f090383;
    public static final int userProfileLL=0x7f090384;
    public static final int userTV=0x7f090385;
    public static final int vehicleImageRV=0x7f090386;
    public static final int vehicleImageTV=0x7f090387;
    public static final int vehicleNameSpinner=0x7f090388;
    public static final int vehicleTypeSpinner=0x7f090389;
    public static final int vehicleTypeTV=0x7f09038a;
    public static final int verifyBT=0x7f09038b;
    public static final int versionTV=0x7f09038c;
    public static final int versionsTV=0x7f09038d;
    public static final int video_duration=0x7f09038e;
    public static final int video_play_button=0x7f09038f;
    public static final int view=0x7f090390;
    public static final int view1=0x7f090391;
    public static final int view_offset_helper=0x7f090392;
    public static final int view_overlay=0x7f090393;
    public static final int visible=0x7f090394;
    public static final int visible_removing_fragment_view_tag=0x7f090395;
    public static final int webview=0x7f090396;
    public static final int wide=0x7f090397;
    public static final int window=0x7f090398;
    public static final int withText=0x7f090399;
    public static final int withinBounds=0x7f09039a;
    public static final int workingHourET=0x7f09039b;
    public static final int workingHourTV=0x7f09039c;
    public static final int wrap=0x7f09039d;
    public static final int wrap_content=0x7f09039e;
    public static final int wrapper_controls=0x7f09039f;
    public static final int wrapper_reset_rotate=0x7f0903a0;
    public static final int wrapper_rotate_by_angle=0x7f0903a1;
    public static final int wrapper_states=0x7f0903a2;
    public static final int zero_corner_chip=0x7f0903a3;
  }
  public static final class integer {
    public static final int abc_config_activityDefaultDur=0x7f0a0000;
    public static final int abc_config_activityShortDur=0x7f0a0001;
    public static final int app_bar_elevation_anim_duration=0x7f0a0002;
    public static final int bottom_sheet_slide_duration=0x7f0a0003;
    public static final int cancel_button_image_alpha=0x7f0a0004;
    public static final int config_navAnimTime=0x7f0a0005;
    public static final int config_tooltipAnimTime=0x7f0a0006;
    public static final int design_snackbar_text_max_lines=0x7f0a0007;
    public static final int design_tab_indicator_anim_duration_ms=0x7f0a0008;
    public static final int google_play_services_version=0x7f0a0009;
    public static final int hide_password_duration=0x7f0a000a;
    public static final int mtrl_badge_max_character_count=0x7f0a000b;
    public static final int mtrl_btn_anim_delay_ms=0x7f0a000c;
    public static final int mtrl_btn_anim_duration_ms=0x7f0a000d;
    public static final int mtrl_calendar_header_orientation=0x7f0a000e;
    public static final int mtrl_calendar_selection_text_lines=0x7f0a000f;
    public static final int mtrl_calendar_year_selector_span=0x7f0a0010;
    public static final int mtrl_card_anim_delay_ms=0x7f0a0011;
    public static final int mtrl_card_anim_duration_ms=0x7f0a0012;
    public static final int mtrl_chip_anim_duration=0x7f0a0013;
    public static final int mtrl_tab_indicator_anim_duration_ms=0x7f0a0014;
    public static final int show_password_duration=0x7f0a0015;
    public static final int status_bar_notification_info_maxnum=0x7f0a0016;
    public static final int ucrop_progress_loading_anim_time=0x7f0a0017;
  }
  public static final class interpolator {
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_0=0x7f0b0000;
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_1=0x7f0b0001;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_0=0x7f0b0002;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_1=0x7f0b0003;
    public static final int btn_radio_to_off_mtrl_animation_interpolator_0=0x7f0b0004;
    public static final int btn_radio_to_on_mtrl_animation_interpolator_0=0x7f0b0005;
    public static final int fast_out_slow_in=0x7f0b0006;
    public static final int mtrl_fast_out_linear_in=0x7f0b0007;
    public static final int mtrl_fast_out_slow_in=0x7f0b0008;
    public static final int mtrl_linear=0x7f0b0009;
    public static final int mtrl_linear_out_slow_in=0x7f0b000a;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0c0000;
    public static final int abc_action_bar_up_container=0x7f0c0001;
    public static final int abc_action_menu_item_layout=0x7f0c0002;
    public static final int abc_action_menu_layout=0x7f0c0003;
    public static final int abc_action_mode_bar=0x7f0c0004;
    public static final int abc_action_mode_close_item_material=0x7f0c0005;
    public static final int abc_activity_chooser_view=0x7f0c0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0c0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0c0008;
    public static final int abc_alert_dialog_material=0x7f0c0009;
    public static final int abc_alert_dialog_title_material=0x7f0c000a;
    public static final int abc_cascading_menu_item_layout=0x7f0c000b;
    public static final int abc_dialog_title_material=0x7f0c000c;
    public static final int abc_expanded_menu_layout=0x7f0c000d;
    public static final int abc_list_menu_item_checkbox=0x7f0c000e;
    public static final int abc_list_menu_item_icon=0x7f0c000f;
    public static final int abc_list_menu_item_layout=0x7f0c0010;
    public static final int abc_list_menu_item_radio=0x7f0c0011;
    public static final int abc_popup_menu_header_item_layout=0x7f0c0012;
    public static final int abc_popup_menu_item_layout=0x7f0c0013;
    public static final int abc_screen_content_include=0x7f0c0014;
    public static final int abc_screen_simple=0x7f0c0015;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0c0016;
    public static final int abc_screen_toolbar=0x7f0c0017;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0c0018;
    public static final int abc_search_view=0x7f0c0019;
    public static final int abc_select_dialog_material=0x7f0c001a;
    public static final int abc_tooltip=0x7f0c001b;
    public static final int activity_about_us=0x7f0c001c;
    public static final int activity_add_vehicle=0x7f0c001d;
    public static final int activity_car_towing_service=0x7f0c001e;
    public static final int activity_car_tows_service=0x7f0c001f;
    public static final int activity_category=0x7f0c0020;
    public static final int activity_change_new_password=0x7f0c0021;
    public static final int activity_company_edit_profile=0x7f0c0022;
    public static final int activity_company_home=0x7f0c0023;
    public static final int activity_company_registeration=0x7f0c0024;
    public static final int activity_contact=0x7f0c0025;
    public static final int activity_contact_form=0x7f0c0026;
    public static final int activity_create_new_password=0x7f0c0027;
    public static final int activity_customer_detail=0x7f0c0028;
    public static final int activity_faqs=0x7f0c0029;
    public static final int activity_forgetpassword=0x7f0c002a;
    public static final int activity_forgot_password=0x7f0c002b;
    public static final int activity_full_image=0x7f0c002c;
    public static final int activity_full_images=0x7f0c002d;
    public static final int activity_get_direction=0x7f0c002e;
    public static final int activity_inquiry=0x7f0c002f;
    public static final int activity_location=0x7f0c0030;
    public static final int activity_location_picker=0x7f0c0031;
    public static final int activity_login=0x7f0c0032;
    public static final int activity_main=0x7f0c0033;
    public static final int activity_matisse=0x7f0c0034;
    public static final int activity_media_preview=0x7f0c0035;
    public static final int activity_multiple_image_grid=0x7f0c0036;
    public static final int activity_my_inquires=0x7f0c0037;
    public static final int activity_otp_verification=0x7f0c0038;
    public static final int activity_privacy_policy=0x7f0c0039;
    public static final int activity_recepient_details=0x7f0c003a;
    public static final int activity_register=0x7f0c003b;
    public static final int activity_registration=0x7f0c003c;
    public static final int activity_sign_in=0x7f0c003d;
    public static final int activity_splash=0x7f0c003e;
    public static final int activity_term_condition=0x7f0c003f;
    public static final int activity_towing_companies=0x7f0c0040;
    public static final int activity_towing_type=0x7f0c0041;
    public static final int activity_user_edit_profile=0x7f0c0042;
    public static final int activity_user_list=0x7f0c0043;
    public static final int activity_user_sign_up=0x7f0c0044;
    public static final int album_list_item=0x7f0c0045;
    public static final int amu_info_window=0x7f0c0046;
    public static final int amu_text_bubble=0x7f0c0047;
    public static final int amu_webview=0x7f0c0048;
    public static final int bottom_sheet=0x7f0c0049;
    public static final int bottomsheet_location_address=0x7f0c004a;
    public static final int browser_actions_context_menu_page=0x7f0c004b;
    public static final int browser_actions_context_menu_row=0x7f0c004c;
    public static final int com_facebook_activity_layout=0x7f0c004d;
    public static final int com_facebook_device_auth_dialog_fragment=0x7f0c004e;
    public static final int com_facebook_login_fragment=0x7f0c004f;
    public static final int com_facebook_smart_device_dialog_fragment=0x7f0c0050;
    public static final int com_facebook_tooltip_bubble=0x7f0c0051;
    public static final int custom_dialog=0x7f0c0052;
    public static final int design_bottom_navigation_item=0x7f0c0053;
    public static final int design_bottom_sheet_dialog=0x7f0c0054;
    public static final int design_layout_snackbar=0x7f0c0055;
    public static final int design_layout_snackbar_include=0x7f0c0056;
    public static final int design_layout_tab_icon=0x7f0c0057;
    public static final int design_layout_tab_text=0x7f0c0058;
    public static final int design_menu_item_action_area=0x7f0c0059;
    public static final int design_navigation_item=0x7f0c005a;
    public static final int design_navigation_item_header=0x7f0c005b;
    public static final int design_navigation_item_separator=0x7f0c005c;
    public static final int design_navigation_item_subheader=0x7f0c005d;
    public static final int design_navigation_menu=0x7f0c005e;
    public static final int design_navigation_menu_item=0x7f0c005f;
    public static final int design_text_input_end_icon=0x7f0c0060;
    public static final int design_text_input_start_icon=0x7f0c0061;
    public static final int dp_example=0x7f0c0062;
    public static final int drawer=0x7f0c0063;
    public static final int expand_button=0x7f0c0064;
    public static final int fastscroll__default_bubble=0x7f0c0065;
    public static final int fragment_attendance=0x7f0c0066;
    public static final int fragment_media_selection=0x7f0c0067;
    public static final int fragment_notification=0x7f0c0068;
    public static final int fragment_preview_item=0x7f0c0069;
    public static final int fragment_profile=0x7f0c006a;
    public static final int fragment_projects=0x7f0c006b;
    public static final int image_frame=0x7f0c006c;
    public static final int item_add_task_image=0x7f0c006d;
    public static final int item_cat=0x7f0c006e;
    public static final int item_category_list=0x7f0c006f;
    public static final int item_faq_header=0x7f0c0070;
    public static final int item_hint=0x7f0c0071;
    public static final int item_image_grid=0x7f0c0072;
    public static final int item_inquiry_image=0x7f0c0073;
    public static final int item_inquiry_management_layout=0x7f0c0074;
    public static final int item_my_inquires_layout=0x7f0c0075;
    public static final int item_navigation=0x7f0c0076;
    public static final int item_notification_card=0x7f0c0077;
    public static final int item_spinner=0x7f0c0078;
    public static final int item_towing_companies_layout=0x7f0c0079;
    public static final int item_user_list=0x7f0c007a;
    public static final int item_vehicle_spinner_dropdown=0x7f0c007b;
    public static final int layout_code_picker=0x7f0c007c;
    public static final int layout_full_width_code_picker=0x7f0c007d;
    public static final int layout_loading_dialog=0x7f0c007e;
    public static final int layout_picker_dialog=0x7f0c007f;
    public static final int layout_recycler_country_tile=0x7f0c0080;
    public static final int list_row_child=0x7f0c0081;
    public static final int map_companies_layout=0x7f0c0082;
    public static final int material_chip_input_combo=0x7f0c0083;
    public static final int material_clock_display=0x7f0c0084;
    public static final int material_clock_display_divider=0x7f0c0085;
    public static final int material_clock_period_toggle=0x7f0c0086;
    public static final int material_clock_period_toggle_land=0x7f0c0087;
    public static final int material_clockface_textview=0x7f0c0088;
    public static final int material_clockface_view=0x7f0c0089;
    public static final int material_radial_view_group=0x7f0c008a;
    public static final int material_textinput_timepicker=0x7f0c008b;
    public static final int material_time_chip=0x7f0c008c;
    public static final int material_time_input=0x7f0c008d;
    public static final int material_timepicker=0x7f0c008e;
    public static final int material_timepicker_dialog=0x7f0c008f;
    public static final int material_timepicker_textinput_display=0x7f0c0090;
    public static final int media_grid_content=0x7f0c0091;
    public static final int media_grid_item=0x7f0c0092;
    public static final int mtrl_alert_dialog=0x7f0c0093;
    public static final int mtrl_alert_dialog_actions=0x7f0c0094;
    public static final int mtrl_alert_dialog_title=0x7f0c0095;
    public static final int mtrl_alert_select_dialog_item=0x7f0c0096;
    public static final int mtrl_alert_select_dialog_multichoice=0x7f0c0097;
    public static final int mtrl_alert_select_dialog_singlechoice=0x7f0c0098;
    public static final int mtrl_calendar_day=0x7f0c0099;
    public static final int mtrl_calendar_day_of_week=0x7f0c009a;
    public static final int mtrl_calendar_days_of_week=0x7f0c009b;
    public static final int mtrl_calendar_horizontal=0x7f0c009c;
    public static final int mtrl_calendar_month=0x7f0c009d;
    public static final int mtrl_calendar_month_labeled=0x7f0c009e;
    public static final int mtrl_calendar_month_navigation=0x7f0c009f;
    public static final int mtrl_calendar_months=0x7f0c00a0;
    public static final int mtrl_calendar_vertical=0x7f0c00a1;
    public static final int mtrl_calendar_year=0x7f0c00a2;
    public static final int mtrl_layout_snackbar=0x7f0c00a3;
    public static final int mtrl_layout_snackbar_include=0x7f0c00a4;
    public static final int mtrl_picker_actions=0x7f0c00a5;
    public static final int mtrl_picker_dialog=0x7f0c00a6;
    public static final int mtrl_picker_fullscreen=0x7f0c00a7;
    public static final int mtrl_picker_header_dialog=0x7f0c00a8;
    public static final int mtrl_picker_header_fullscreen=0x7f0c00a9;
    public static final int mtrl_picker_header_selection_text=0x7f0c00aa;
    public static final int mtrl_picker_header_title_text=0x7f0c00ab;
    public static final int mtrl_picker_header_toggle=0x7f0c00ac;
    public static final int mtrl_picker_text_input_date=0x7f0c00ad;
    public static final int mtrl_picker_text_input_date_range=0x7f0c00ae;
    public static final int no_internet_layout=0x7f0c00af;
    public static final int notification_action=0x7f0c00b0;
    public static final int notification_action_tombstone=0x7f0c00b1;
    public static final int notification_media_action=0x7f0c00b2;
    public static final int notification_media_cancel_action=0x7f0c00b3;
    public static final int notification_template_big_media=0x7f0c00b4;
    public static final int notification_template_big_media_custom=0x7f0c00b5;
    public static final int notification_template_big_media_narrow=0x7f0c00b6;
    public static final int notification_template_big_media_narrow_custom=0x7f0c00b7;
    public static final int notification_template_custom_big=0x7f0c00b8;
    public static final int notification_template_icon_group=0x7f0c00b9;
    public static final int notification_template_lines_media=0x7f0c00ba;
    public static final int notification_template_media=0x7f0c00bb;
    public static final int notification_template_media_custom=0x7f0c00bc;
    public static final int notification_template_part_chronometer=0x7f0c00bd;
    public static final int notification_template_part_time=0x7f0c00be;
    public static final int photo_capture_item=0x7f0c00bf;
    public static final int places_autocomplete_activity=0x7f0c00c0;
    public static final int places_autocomplete_fragment=0x7f0c00c1;
    public static final int places_autocomplete_impl_error=0x7f0c00c2;
    public static final int places_autocomplete_impl_fragment_fullscreen=0x7f0c00c3;
    public static final int places_autocomplete_impl_fragment_overlay=0x7f0c00c4;
    public static final int places_autocomplete_impl_powered_by_google=0x7f0c00c5;
    public static final int places_autocomplete_impl_search_bar=0x7f0c00c6;
    public static final int places_autocomplete_prediction=0x7f0c00c7;
    public static final int popup_category=0x7f0c00c8;
    public static final int preference=0x7f0c00c9;
    public static final int preference_category=0x7f0c00ca;
    public static final int preference_category_material=0x7f0c00cb;
    public static final int preference_dialog_edittext=0x7f0c00cc;
    public static final int preference_dropdown=0x7f0c00cd;
    public static final int preference_dropdown_material=0x7f0c00ce;
    public static final int preference_information=0x7f0c00cf;
    public static final int preference_information_material=0x7f0c00d0;
    public static final int preference_list_fragment=0x7f0c00d1;
    public static final int preference_material=0x7f0c00d2;
    public static final int preference_recyclerview=0x7f0c00d3;
    public static final int preference_widget_checkbox=0x7f0c00d4;
    public static final int preference_widget_seekbar=0x7f0c00d5;
    public static final int preference_widget_seekbar_material=0x7f0c00d6;
    public static final int preference_widget_switch=0x7f0c00d7;
    public static final int preference_widget_switch_compat=0x7f0c00d8;
    public static final int sdp_example=0x7f0c00d9;
    public static final int select_dialog_item_material=0x7f0c00da;
    public static final int select_dialog_multichoice_material=0x7f0c00db;
    public static final int select_dialog_singlechoice_material=0x7f0c00dc;
    public static final int sp_example=0x7f0c00dd;
    public static final int ssp_example=0x7f0c00de;
    public static final int support_simple_spinner_dropdown_item=0x7f0c00df;
    public static final int test_action_chip=0x7f0c00e0;
    public static final int test_chip_zero_corner_radius=0x7f0c00e1;
    public static final int test_design_checkbox=0x7f0c00e2;
    public static final int test_design_radiobutton=0x7f0c00e3;
    public static final int test_reflow_chipgroup=0x7f0c00e4;
    public static final int test_toolbar=0x7f0c00e5;
    public static final int test_toolbar_custom_background=0x7f0c00e6;
    public static final int test_toolbar_elevation=0x7f0c00e7;
    public static final int test_toolbar_surface=0x7f0c00e8;
    public static final int testing=0x7f0c00e9;
    public static final int text_view_with_line_height_from_appearance=0x7f0c00ea;
    public static final int text_view_with_line_height_from_layout=0x7f0c00eb;
    public static final int text_view_with_line_height_from_style=0x7f0c00ec;
    public static final int text_view_with_theme_line_height=0x7f0c00ed;
    public static final int text_view_without_line_height=0x7f0c00ee;
    public static final int titlebar_layout=0x7f0c00ef;
    public static final int toolbar_layout=0x7f0c00f0;
    public static final int ucrop_activity_photobox=0x7f0c00f1;
    public static final int ucrop_aspect_ratio=0x7f0c00f2;
    public static final int ucrop_controls=0x7f0c00f3;
    public static final int ucrop_fragment_photobox=0x7f0c00f4;
    public static final int ucrop_layout_rotate_wheel=0x7f0c00f5;
    public static final int ucrop_layout_scale_wheel=0x7f0c00f6;
    public static final int ucrop_view=0x7f0c00f7;
    public static final int view_divider=0x7f0c00f8;
  }
  public static final class menu {
    public static final int ucrop_menu_activity=0x7f0d0000;
  }
  public static final class mipmap {
    public static final int ic_launcher=0x7f0e0000;
    public static final int ic_launcher_foreground=0x7f0e0001;
    public static final int ic_launcher_round=0x7f0e0002;
  }
  public static final class navigation {
    public static final int mobile_navigation=0x7f0f0000;
  }
  public static final class plurals {
    public static final int mtrl_badge_content_description=0x7f100001;
  }
  public static final class raw {
    public static final int a_new_lang_template=0x7f110000;
    public static final int ccp_afrikaans=0x7f110001;
    public static final int ccp_arabic=0x7f110002;
    public static final int ccp_bengali=0x7f110003;
    public static final int ccp_chinese_simplified=0x7f110004;
    public static final int ccp_chinese_traditional=0x7f110005;
    public static final int ccp_czech=0x7f110006;
    public static final int ccp_danish=0x7f110007;
    public static final int ccp_dutch=0x7f110008;
    public static final int ccp_english=0x7f110009;
    public static final int ccp_farsi=0x7f11000a;
    public static final int ccp_french=0x7f11000b;
    public static final int ccp_german=0x7f11000c;
    public static final int ccp_greek=0x7f11000d;
    public static final int ccp_gujarati=0x7f11000e;
    public static final int ccp_hebrew=0x7f11000f;
    public static final int ccp_hindi=0x7f110010;
    public static final int ccp_indonesia=0x7f110011;
    public static final int ccp_italian=0x7f110012;
    public static final int ccp_japanese=0x7f110013;
    public static final int ccp_kazakh=0x7f110014;
    public static final int ccp_korean=0x7f110015;
    public static final int ccp_marathi=0x7f110016;
    public static final int ccp_polish=0x7f110017;
    public static final int ccp_portuguese=0x7f110018;
    public static final int ccp_punjabi=0x7f110019;
    public static final int ccp_russian=0x7f11001a;
    public static final int ccp_slovak=0x7f11001b;
    public static final int ccp_slovenian=0x7f11001c;
    public static final int ccp_spanish=0x7f11001d;
    public static final int ccp_swedish=0x7f11001e;
    public static final int ccp_tagalog=0x7f11001f;
    public static final int ccp_turkish=0x7f110020;
    public static final int ccp_ukrainian=0x7f110021;
    public static final int ccp_urdu=0x7f110022;
    public static final int ccp_uzbek=0x7f110023;
    public static final int ccp_vietnamese=0x7f110024;
    public static final int keep_ccp=0x7f110025;
    public static final int places_keep=0x7f110026;
  }
  public static final class string {
    public static final int GOOGLE_MAP_KEY=0x7f120000;
    public static final int GOOGLE_PLACE_KEY=0x7f120001;
    public static final int What_essential_documents_do_I_need_to_take=0x7f120002;
    public static final int _10_am_to_9_am_5_2_km=0x7f120003;
    public static final int _2913_austin_avenue_lumber_city_ga_georgia_31549=0x7f120004;
    public static final int _5_2_km=0x7f120005;
    public static final int abc_action_bar_home_description=0x7f120006;
    public static final int abc_action_bar_up_description=0x7f120007;
    public static final int abc_action_menu_overflow_description=0x7f120008;
    public static final int abc_action_mode_done=0x7f120009;
    public static final int abc_activity_chooser_view_see_all=0x7f12000a;
    public static final int abc_activitychooserview_choose_application=0x7f12000b;
    public static final int abc_capital_off=0x7f12000c;
    public static final int abc_capital_on=0x7f12000d;
    public static final int abc_menu_alt_shortcut_label=0x7f12000e;
    public static final int abc_menu_ctrl_shortcut_label=0x7f12000f;
    public static final int abc_menu_delete_shortcut_label=0x7f120010;
    public static final int abc_menu_enter_shortcut_label=0x7f120011;
    public static final int abc_menu_function_shortcut_label=0x7f120012;
    public static final int abc_menu_meta_shortcut_label=0x7f120013;
    public static final int abc_menu_shift_shortcut_label=0x7f120014;
    public static final int abc_menu_space_shortcut_label=0x7f120015;
    public static final int abc_menu_sym_shortcut_label=0x7f120016;
    public static final int abc_prepend_shortcut_label=0x7f120017;
    public static final int abc_search_hint=0x7f120018;
    public static final int abc_searchview_description_clear=0x7f120019;
    public static final int abc_searchview_description_query=0x7f12001a;
    public static final int abc_searchview_description_search=0x7f12001b;
    public static final int abc_searchview_description_submit=0x7f12001c;
    public static final int abc_searchview_description_voice=0x7f12001d;
    public static final int abc_shareactionprovider_share_with=0x7f12001e;
    public static final int abc_shareactionprovider_share_with_application=0x7f12001f;
    public static final int abc_toolbar_collapse_description=0x7f120020;
    public static final int about=0x7f120021;
    public static final int about_us=0x7f120022;
    public static final int aboutus_can_not_blank=0x7f120023;
    public static final int accident=0x7f120024;
    public static final int add_vehicle=0x7f120025;
    public static final int address=0x7f120026;
    public static final int address_can_not_blank=0x7f120027;
    public static final int album_name_all=0x7f120028;
    public static final int already_have_account=0x7f120029;
    public static final int app_name=0x7f12002a;
    public static final int appbar_scrolling_view_behavior=0x7f12002b;
    public static final int are_you_sure_want_to_exit=0x7f12002c;
    public static final int battery_issue=0x7f12002d;
    public static final int bottom_sheet_behavior=0x7f12002e;
    public static final int bottomsheet_action_expand_halfway=0x7f12002f;
    public static final int button_apply=0x7f120030;
    public static final int button_apply_default=0x7f120031;
    public static final int button_back=0x7f120032;
    public static final int button_ok=0x7f120033;
    public static final int button_original=0x7f120034;
    public static final int button_preview=0x7f120035;
    public static final int button_sure=0x7f120036;
    public static final int button_sure_default=0x7f120037;
    public static final int call_us=0x7f120038;
    public static final int camera=0x7f120039;
    public static final int camera_permission=0x7f12003a;
    public static final int cancel=0x7f12003b;
    public static final int car_towing_service=0x7f12003c;
    public static final int category=0x7f12003d;
    public static final int change=0x7f12003e;
    public static final int change_password=0x7f12003f;
    public static final int character_counter_content_description=0x7f120040;
    public static final int character_counter_overflowed_content_description=0x7f120041;
    public static final int character_counter_pattern=0x7f120042;
    public static final int chip_text=0x7f120043;
    public static final int clear_search_button_content_description=0x7f120044;
    public static final int clear_text_end_icon_content_description=0x7f120045;
    public static final int close=0x7f120046;
    public static final int com_facebook_device_auth_instructions=0x7f120047;
    public static final int com_facebook_image_download_unknown_error=0x7f120048;
    public static final int com_facebook_internet_permission_error_message=0x7f120049;
    public static final int com_facebook_internet_permission_error_title=0x7f12004a;
    public static final int com_facebook_like_button_liked=0x7f12004b;
    public static final int com_facebook_like_button_not_liked=0x7f12004c;
    public static final int com_facebook_loading=0x7f12004d;
    public static final int com_facebook_loginview_cancel_action=0x7f12004e;
    public static final int com_facebook_loginview_log_in_button=0x7f12004f;
    public static final int com_facebook_loginview_log_in_button_continue=0x7f120050;
    public static final int com_facebook_loginview_log_in_button_long=0x7f120051;
    public static final int com_facebook_loginview_log_out_action=0x7f120052;
    public static final int com_facebook_loginview_log_out_button=0x7f120053;
    public static final int com_facebook_loginview_logged_in_as=0x7f120054;
    public static final int com_facebook_loginview_logged_in_using_facebook=0x7f120055;
    public static final int com_facebook_send_button_text=0x7f120056;
    public static final int com_facebook_share_button_text=0x7f120057;
    public static final int com_facebook_smart_device_instructions=0x7f120058;
    public static final int com_facebook_smart_device_instructions_or=0x7f120059;
    public static final int com_facebook_smart_login_confirmation_cancel=0x7f12005a;
    public static final int com_facebook_smart_login_confirmation_continue_as=0x7f12005b;
    public static final int com_facebook_smart_login_confirmation_title=0x7f12005c;
    public static final int com_facebook_tooltip_default=0x7f12005d;
    public static final int common_google_play_services_enable_button=0x7f12005e;
    public static final int common_google_play_services_enable_text=0x7f12005f;
    public static final int common_google_play_services_enable_title=0x7f120060;
    public static final int common_google_play_services_install_button=0x7f120061;
    public static final int common_google_play_services_install_text=0x7f120062;
    public static final int common_google_play_services_install_title=0x7f120063;
    public static final int common_google_play_services_notification_channel_name=0x7f120064;
    public static final int common_google_play_services_notification_ticker=0x7f120065;
    public static final int common_google_play_services_unknown_issue=0x7f120066;
    public static final int common_google_play_services_unsupported_text=0x7f120067;
    public static final int common_google_play_services_update_button=0x7f120068;
    public static final int common_google_play_services_update_text=0x7f120069;
    public static final int common_google_play_services_update_title=0x7f12006a;
    public static final int common_google_play_services_updating_text=0x7f12006b;
    public static final int common_google_play_services_wear_update_text=0x7f12006c;
    public static final int common_open_on_phone=0x7f12006d;
    public static final int common_signin_button_text=0x7f12006e;
    public static final int common_signin_button_text_long=0x7f12006f;
    public static final int company=0x7f120070;
    public static final int company_name=0x7f120071;
    public static final int company_registration=0x7f120072;
    public static final int companyname_can_not_blank=0x7f120073;
    public static final int confirm_password=0x7f120074;
    public static final int confirm_password_can_not_less_then_4_blank=0x7f120075;
    public static final int confirm_password_can_not_match=0x7f120076;
    public static final int confirm_passwords=0x7f120077;
    public static final int confirm_pw_can_not_blank=0x7f120078;
    public static final int confirm_pw_can_not_match=0x7f120079;
    public static final int congue_a_adipiscing_primis_vestibulum_ante_eros=0x7f12007a;
    public static final int contact=0x7f12007b;
    public static final int contact_id=0x7f12007c;
    public static final int contact_us=0x7f12007d;
    public static final int continue_key=0x7f12007e;
    public static final int copy=0x7f12007f;
    public static final int crash=0x7f120080;
    public static final int create_new_password=0x7f120081;
    public static final int current_password=0x7f120082;
    public static final int current_password_can_not_less_then_4_blank=0x7f120083;
    public static final int current_passwords=0x7f120084;
    public static final int current_pw_can_not_blank=0x7f120085;
    public static final int current_pw_can_not_match=0x7f120086;
    public static final int customer_details=0x7f120087;
    public static final int default_web_client_id=0x7f120088;
    public static final int dismiss_button_content_description=0x7f120089;
    public static final int done=0x7f12008a;
    public static final int dont_have_account=0x7f12008b;
    public static final int edit_profile=0x7f12008c;
    public static final int email=0x7f12008d;
    public static final int email_addres=0x7f12008e;
    public static final int email_address=0x7f12008f;
    public static final int email_address_isvalid=0x7f120090;
    public static final int email_address_or_phone=0x7f120091;
    public static final int email_can_not_blank=0x7f120092;
    public static final int email_phone_can_not_blank=0x7f120093;
    public static final int email_should_valid=0x7f120094;
    public static final int emailaddress_cant_blank=0x7f120095;
    public static final int empty_text=0x7f120096;
    public static final int enter_confirm_password=0x7f120097;
    public static final int enter_recepient_name=0x7f120098;
    public static final int enter_recepient_pnumber=0x7f120099;
    public static final int error_file_type=0x7f12009a;
    public static final int error_gif=0x7f12009b;
    public static final int error_icon_content_description=0x7f12009c;
    public static final int error_no_video_activity=0x7f12009d;
    public static final int error_over_count=0x7f12009e;
    public static final int error_over_count_default=0x7f12009f;
    public static final int error_over_original_count=0x7f1200a0;
    public static final int error_over_original_size=0x7f1200a1;
    public static final int error_over_quality=0x7f1200a2;
    public static final int error_type_conflict=0x7f1200a3;
    public static final int error_under_quality=0x7f1200a4;
    public static final int expand_button_title=0x7f1200a5;
    public static final int expiring_in=0x7f1200a6;
    public static final int expiring_in_01_00=0x7f1200a7;
    public static final int exposed_dropdown_menu_content_description=0x7f1200a8;
    public static final int fab_transformation_scrim_behavior=0x7f1200a9;
    public static final int fab_transformation_sheet_behavior=0x7f1200aa;
    public static final int facebook_app_id=0x7f1200ab;
    public static final int faq=0x7f1200ac;
    public static final int fastscroll__app_name=0x7f1200ad;
    public static final int fb_login_protocol_scheme=0x7f1200ae;
    public static final int fcm_fallback_notification_channel_label=0x7f1200af;
    public static final int firebase_database_url=0x7f1200b0;
    public static final int first_name=0x7f1200b1;
    public static final int firstname_can_not_blank=0x7f1200b2;
    public static final int flat_tire=0x7f1200b3;
    public static final int forget_password=0x7f1200b4;
    public static final int forget_password1=0x7f1200b5;
    public static final int gallery=0x7f1200b6;
    public static final int gcm_defaultSenderId=0x7f1200b7;
    public static final int get_direction=0x7f1200b8;
    public static final int google_api_key=0x7f1200b9;
    public static final int google_app_id=0x7f1200ba;
    public static final int google_crash_reporting_api_key=0x7f1200bb;
    public static final int google_storage_bucket=0x7f1200bc;
    public static final int goto_settings=0x7f1200bd;
    public static final int hello_blank_fragment=0x7f1200be;
    public static final int hide_bottom_view_on_scroll_behavior=0x7f1200bf;
    public static final int how_can_i_share_my_trips_to_my_friend=0x7f1200c0;
    public static final int how_do_i_obtain_essential_trip_information_with_full_details_of_my_trip=0x7f1200c1;
    public static final int icon_content_description=0x7f1200c2;
    public static final int images=0x7f1200c3;
    public static final int information=0x7f1200c4;
    public static final int inquiries_management=0x7f1200c5;
    public static final int inquiry=0x7f1200c6;
    public static final int inquiry_management=0x7f1200c7;
    public static final int item_view_role_description=0x7f1200c8;
    public static final int kindly_select_one_option_from_the_following_before_registering=0x7f1200c9;
    public static final int last_name=0x7f1200ca;
    public static final int lastname_can_not_blank=0x7f1200cb;
    public static final int login=0x7f1200cc;
    public static final int logout=0x7f1200cd;
    public static final int mail_id=0x7f1200ce;
    public static final int mail_us=0x7f1200cf;
    public static final int material_clock_display_divider=0x7f1200d0;
    public static final int material_clock_toggle_content_description=0x7f1200d1;
    public static final int material_hour_selection=0x7f1200d2;
    public static final int material_hour_suffix=0x7f1200d3;
    public static final int material_minute_selection=0x7f1200d4;
    public static final int material_minute_suffix=0x7f1200d5;
    public static final int material_slider_range_end=0x7f1200d6;
    public static final int material_slider_range_start=0x7f1200d7;
    public static final int material_timepicker_am=0x7f1200d8;
    public static final int material_timepicker_clock_mode_description=0x7f1200d9;
    public static final int material_timepicker_hour=0x7f1200da;
    public static final int material_timepicker_minute=0x7f1200db;
    public static final int material_timepicker_pm=0x7f1200dc;
    public static final int material_timepicker_select_time=0x7f1200dd;
    public static final int material_timepicker_text_input_mode_description=0x7f1200de;
    public static final int message=0x7f1200df;
    public static final int message_can_not_blank=0x7f1200e0;
    public static final int miles=0x7f1200e1;
    public static final int mobile_number=0x7f1200e2;
    public static final int mtrl_badge_numberless_content_description=0x7f1200e3;
    public static final int mtrl_chip_close_icon_content_description=0x7f1200e4;
    public static final int mtrl_exceed_max_badge_number_content_description=0x7f1200e5;
    public static final int mtrl_exceed_max_badge_number_suffix=0x7f1200e6;
    public static final int mtrl_picker_a11y_next_month=0x7f1200e7;
    public static final int mtrl_picker_a11y_prev_month=0x7f1200e8;
    public static final int mtrl_picker_announce_current_selection=0x7f1200e9;
    public static final int mtrl_picker_cancel=0x7f1200ea;
    public static final int mtrl_picker_confirm=0x7f1200eb;
    public static final int mtrl_picker_date_header_selected=0x7f1200ec;
    public static final int mtrl_picker_date_header_title=0x7f1200ed;
    public static final int mtrl_picker_date_header_unselected=0x7f1200ee;
    public static final int mtrl_picker_day_of_week_column_header=0x7f1200ef;
    public static final int mtrl_picker_invalid_format=0x7f1200f0;
    public static final int mtrl_picker_invalid_format_example=0x7f1200f1;
    public static final int mtrl_picker_invalid_format_use=0x7f1200f2;
    public static final int mtrl_picker_invalid_range=0x7f1200f3;
    public static final int mtrl_picker_navigate_to_year_description=0x7f1200f4;
    public static final int mtrl_picker_out_of_range=0x7f1200f5;
    public static final int mtrl_picker_range_header_only_end_selected=0x7f1200f6;
    public static final int mtrl_picker_range_header_only_start_selected=0x7f1200f7;
    public static final int mtrl_picker_range_header_selected=0x7f1200f8;
    public static final int mtrl_picker_range_header_title=0x7f1200f9;
    public static final int mtrl_picker_range_header_unselected=0x7f1200fa;
    public static final int mtrl_picker_save=0x7f1200fb;
    public static final int mtrl_picker_text_input_date_hint=0x7f1200fc;
    public static final int mtrl_picker_text_input_date_range_end_hint=0x7f1200fd;
    public static final int mtrl_picker_text_input_date_range_start_hint=0x7f1200fe;
    public static final int mtrl_picker_text_input_day_abbr=0x7f1200ff;
    public static final int mtrl_picker_text_input_month_abbr=0x7f120100;
    public static final int mtrl_picker_text_input_year_abbr=0x7f120101;
    public static final int mtrl_picker_toggle_to_calendar_input_mode=0x7f120102;
    public static final int mtrl_picker_toggle_to_day_selection=0x7f120103;
    public static final int mtrl_picker_toggle_to_text_input_mode=0x7f120104;
    public static final int mtrl_picker_toggle_to_year_selection=0x7f120105;
    public static final int multiple_image=0x7f120106;
    public static final int my_inquiries=0x7f120107;
    public static final int name=0x7f120108;
    public static final int name_can_not_blank=0x7f120109;
    public static final int nav_app_bar_navigate_up_description=0x7f12010a;
    public static final int nav_app_bar_open_drawer_description=0x7f12010b;
    public static final int new_password=0x7f12010c;
    public static final int new_password_can_not_less_then_4_blank=0x7f12010d;
    public static final int new_passwords=0x7f12010e;
    public static final int new_pw_can_not_blank=0x7f12010f;
    public static final int next=0x7f120110;
    public static final int no=0x7f120111;
    public static final int no_data_found=0x7f120112;
    public static final int no_internet=0x7f120113;
    public static final int no_result_found=0x7f120114;
    public static final int not_set=0x7f120115;
    public static final int now=0x7f120116;
    public static final int nunc_porttitor_ac_lorem_fames_morbi_gravida_vestibulum=0x7f120117;
    public static final int ok=0x7f120118;
    public static final int onRoad_service=0x7f120119;
    public static final int open=0x7f12011a;
    public static final int other=0x7f12011b;
    public static final int otp_verification=0x7f12011c;
    public static final int password=0x7f12011d;
    public static final int password_can_not_blank=0x7f12011e;
    public static final int password_can_not_less_then_4_blank=0x7f12011f;
    public static final int password_toggle_content_description=0x7f120120;
    public static final int passwords=0x7f120121;
    public static final int path_password_eye=0x7f120122;
    public static final int path_password_eye_mask_strike_through=0x7f120123;
    public static final int path_password_eye_mask_visible=0x7f120124;
    public static final int path_password_strike_through=0x7f120125;
    public static final int phone=0x7f120126;
    public static final int phone_can_not_blank=0x7f120127;
    public static final int phone_number=0x7f120128;
    public static final int phone_should_valid=0x7f120129;
    public static final int photo_grid_capture=0x7f12012a;
    public static final int pickup_location=0x7f12012b;
    public static final int places_autocomplete_clear_button=0x7f12012c;
    public static final int places_autocomplete_label=0x7f12012d;
    public static final int places_autocomplete_no_results_for_query=0x7f12012e;
    public static final int places_autocomplete_search_hint=0x7f12012f;
    public static final int places_cancel=0x7f120130;
    public static final int places_powered_by_google=0x7f120131;
    public static final int places_search_error=0x7f120132;
    public static final int places_try_again=0x7f120133;
    public static final int please_check_your_internet_connection=0x7f120134;
    public static final int please_enter_email_to_reset_password=0x7f120135;
    public static final int please_enter_otp=0x7f120136;
    public static final int please_enter_recepient_name=0x7f120137;
    public static final int please_enter_recepient_pnumber=0x7f120138;
    public static final int please_enter_valid_mobile_number=0x7f120139;
    public static final int please_enter_your_mobile_number_to_reset_your_password=0x7f12013a;
    public static final int please_select_category=0x7f12013b;
    public static final int please_update_version=0x7f12013c;
    public static final int preference_copied=0x7f12013d;
    public static final int privacy_and_policy=0x7f12013e;
    public static final int privacy_policy=0x7f12013f;
    public static final int project_id=0x7f120140;
    public static final int re_send_code=0x7f120141;
    public static final int recepient_details=0x7f120142;
    public static final int register=0x7f120143;
    public static final int register_as=0x7f120144;
    public static final int registration=0x7f120145;
    public static final int report=0x7f120146;
    public static final int resend_code=0x7f120147;
    public static final int reset=0x7f120148;
    public static final int retry=0x7f120149;
    public static final int sapien_ultricies_hac_netus_ullamcorper_sapien_tempor_aliquam_ultrices_senectus_ac_venenatis=0x7f12014a;
    public static final int save=0x7f12014b;
    public static final int schedule=0x7f12014c;
    public static final int search_hint=0x7f12014d;
    public static final int search_location=0x7f12014e;
    public static final int search_menu_title=0x7f12014f;
    public static final int select=0x7f120150;
    public static final int select_category=0x7f120151;
    public static final int select_country=0x7f120152;
    public static final int select_option=0x7f120153;
    public static final int select_reason_for_towing=0x7f120154;
    public static final int send=0x7f120155;
    public static final int send_inquiry=0x7f120156;
    public static final int share=0x7f120157;
    public static final int signIn=0x7f120158;
    public static final int signup=0x7f120159;
    public static final int sms_with_code=0x7f12015a;
    public static final int status_bar_notification_info_overflow=0x7f12015b;
    public static final int submit=0x7f12015c;
    public static final int summary_collapsed_preference_list=0x7f12015d;
    public static final int term_and_condition=0x7f12015e;
    public static final int term_condition=0x7f12015f;
    public static final int the_app_needs_permission_to_use_this_feature=0x7f120160;
    public static final int title_attendance=0x7f120161;
    public static final int title_notification=0x7f120162;
    public static final int title_profile=0x7f120163;
    public static final int title_projects=0x7f120164;
    public static final int towing_companies=0x7f120165;
    public static final int towing_service_is_one_among_the_very_few_roadside_assistance_provider_with_its_own_fleet_of_towing_truck_providing_car_towing_service=0x7f120166;
    public static final int towing_vehicle_type=0x7f120167;
    public static final int ucrop_error_input_data_is_absent=0x7f120168;
    public static final int ucrop_label_edit_photo=0x7f120169;
    public static final int ucrop_label_original=0x7f12016a;
    public static final int ucrop_menu_crop=0x7f12016b;
    public static final int ucrop_mutate_exception_hint=0x7f12016c;
    public static final int update=0x7f12016d;
    public static final int uploaded_by=0x7f12016e;
    public static final int user=0x7f12016f;
    public static final int user_registration=0x7f120170;
    public static final int v7_preference_off=0x7f120171;
    public static final int v7_preference_on=0x7f120172;
    public static final int vehicle_image=0x7f120173;
    public static final int vehicle_name=0x7f120174;
    public static final int vehicle_plate_number=0x7f120175;
    public static final int vehicle_plate_number_cant_blanck=0x7f120176;
    public static final int vehicle_type=0x7f120177;
    public static final int verify=0x7f120178;
    public static final int we_have_sent_you_an_sms_with_a_code_to_the_number_33_1234_456_789=0x7f120179;
    public static final int working_hour=0x7f12017a;
    public static final int working_hours_cant_be_blank=0x7f12017b;
    public static final int yes=0x7f12017c;
  }
  public static final class style {
    public static final int AlertDialog_AppCompat=0x7f130000;
    public static final int AlertDialog_AppCompat_Light=0x7f130001;
    public static final int AndroidThemeColorAccentYellow=0x7f130002;
    public static final int Animation_AppCompat_Dialog=0x7f130003;
    public static final int Animation_AppCompat_DropDownUp=0x7f130004;
    public static final int Animation_AppCompat_Tooltip=0x7f130005;
    public static final int Animation_Design_BottomSheetDialog=0x7f130006;
    public static final int Animation_MaterialComponents_BottomSheetDialog=0x7f130007;
    public static final int AppTheme=0x7f130008;
    public static final int Base_AlertDialog_AppCompat=0x7f130009;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f13000a;
    public static final int Base_Animation_AppCompat_Dialog=0x7f13000b;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f13000c;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f13000d;
    public static final int Base_CardView=0x7f13000e;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f13000f;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f130010;
    public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Icon=0x7f130011;
    public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Panel=0x7f130012;
    public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Text=0x7f130013;
    public static final int Base_TextAppearance_AppCompat=0x7f130014;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f130015;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f130016;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f130017;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f130018;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f130019;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f13001a;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f13001b;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f13001c;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f13001d;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f13001e;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f13001f;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f130020;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f130021;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f130022;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f130023;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f130024;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f130025;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f130026;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f130027;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f130028;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f130029;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f13002a;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f13002b;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f13002c;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f13002d;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f13002e;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f13002f;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f130030;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f130031;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f130032;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f130033;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f130034;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f130035;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f130036;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f130037;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f130038;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f130039;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f13003a;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f13003b;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f13003c;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f13003d;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f13003e;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f13003f;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f130040;
    public static final int Base_TextAppearance_MaterialComponents_Badge=0x7f130041;
    public static final int Base_TextAppearance_MaterialComponents_Button=0x7f130042;
    public static final int Base_TextAppearance_MaterialComponents_Headline6=0x7f130043;
    public static final int Base_TextAppearance_MaterialComponents_Subtitle2=0x7f130044;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f130045;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f130046;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f130047;
    public static final int Base_Theme_AppCompat=0x7f130048;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f130049;
    public static final int Base_Theme_AppCompat_Dialog=0x7f13004a;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f13004b;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f13004c;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f13004d;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f13004e;
    public static final int Base_Theme_AppCompat_Light=0x7f13004f;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f130050;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f130051;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f130052;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f130053;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f130054;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f130055;
    public static final int Base_Theme_MaterialComponents=0x7f130056;
    public static final int Base_Theme_MaterialComponents_Bridge=0x7f130057;
    public static final int Base_Theme_MaterialComponents_CompactMenu=0x7f130058;
    public static final int Base_Theme_MaterialComponents_Dialog=0x7f130059;
    public static final int Base_Theme_MaterialComponents_Dialog_Alert=0x7f13005a;
    public static final int Base_Theme_MaterialComponents_Dialog_Bridge=0x7f13005b;
    public static final int Base_Theme_MaterialComponents_Dialog_FixedSize=0x7f13005c;
    public static final int Base_Theme_MaterialComponents_Dialog_MinWidth=0x7f13005d;
    public static final int Base_Theme_MaterialComponents_DialogWhenLarge=0x7f13005e;
    public static final int Base_Theme_MaterialComponents_Light=0x7f13005f;
    public static final int Base_Theme_MaterialComponents_Light_Bridge=0x7f130060;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar=0x7f130061;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f130062;
    public static final int Base_Theme_MaterialComponents_Light_Dialog=0x7f130063;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_Alert=0x7f130064;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_Bridge=0x7f130065;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_FixedSize=0x7f130066;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f130067;
    public static final int Base_Theme_MaterialComponents_Light_DialogWhenLarge=0x7f130068;
    public static final int Base_ThemeOverlay_AppCompat=0x7f130069;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f13006a;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f13006b;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f13006c;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f13006d;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f13006e;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f13006f;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog=0x7f130070;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f130071;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog_Alert_Framework=0x7f130072;
    public static final int Base_ThemeOverlay_MaterialComponents_Light_Dialog_Alert_Framework=0x7f130073;
    public static final int Base_ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x7f130074;
    public static final int Base_V14_Theme_MaterialComponents=0x7f130075;
    public static final int Base_V14_Theme_MaterialComponents_Bridge=0x7f130076;
    public static final int Base_V14_Theme_MaterialComponents_Dialog=0x7f130077;
    public static final int Base_V14_Theme_MaterialComponents_Dialog_Bridge=0x7f130078;
    public static final int Base_V14_Theme_MaterialComponents_Light=0x7f130079;
    public static final int Base_V14_Theme_MaterialComponents_Light_Bridge=0x7f13007a;
    public static final int Base_V14_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f13007b;
    public static final int Base_V14_Theme_MaterialComponents_Light_Dialog=0x7f13007c;
    public static final int Base_V14_Theme_MaterialComponents_Light_Dialog_Bridge=0x7f13007d;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog=0x7f13007e;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f13007f;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x7f130080;
    public static final int Base_V21_Theme_AppCompat=0x7f130081;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f130082;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f130083;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f130084;
    public static final int Base_V21_Theme_MaterialComponents=0x7f130085;
    public static final int Base_V21_Theme_MaterialComponents_Dialog=0x7f130086;
    public static final int Base_V21_Theme_MaterialComponents_Light=0x7f130087;
    public static final int Base_V21_Theme_MaterialComponents_Light_Dialog=0x7f130088;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f130089;
    public static final int Base_V22_Theme_AppCompat=0x7f13008a;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f13008b;
    public static final int Base_V23_Theme_AppCompat=0x7f13008c;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f13008d;
    public static final int Base_V26_Theme_AppCompat=0x7f13008e;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f13008f;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f130090;
    public static final int Base_V28_Theme_AppCompat=0x7f130091;
    public static final int Base_V28_Theme_AppCompat_Light=0x7f130092;
    public static final int Base_V7_Theme_AppCompat=0x7f130093;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f130094;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f130095;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f130096;
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f130097;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f130098;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f130099;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f13009a;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f13009b;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f13009c;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f13009d;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f13009e;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f13009f;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f1300a0;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f1300a1;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f1300a2;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f1300a3;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f1300a4;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f1300a5;
    public static final int Base_Widget_AppCompat_Button=0x7f1300a6;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f1300a7;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f1300a8;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f1300a9;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f1300aa;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f1300ab;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f1300ac;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f1300ad;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f1300ae;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f1300af;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f1300b0;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f1300b1;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f1300b2;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f1300b3;
    public static final int Base_Widget_AppCompat_EditText=0x7f1300b4;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f1300b5;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f1300b6;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f1300b7;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f1300b8;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f1300b9;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f1300ba;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f1300bb;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f1300bc;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f1300bd;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f1300be;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f1300bf;
    public static final int Base_Widget_AppCompat_ListView=0x7f1300c0;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f1300c1;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f1300c2;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f1300c3;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f1300c4;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f1300c5;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f1300c6;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f1300c7;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f1300c8;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f1300c9;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f1300ca;
    public static final int Base_Widget_AppCompat_SearchView=0x7f1300cb;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f1300cc;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f1300cd;
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f1300ce;
    public static final int Base_Widget_AppCompat_Spinner=0x7f1300cf;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f1300d0;
    public static final int Base_Widget_AppCompat_TextView=0x7f1300d1;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f1300d2;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f1300d3;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1300d4;
    public static final int Base_Widget_Design_TabLayout=0x7f1300d5;
    public static final int Base_Widget_MaterialComponents_AutoCompleteTextView=0x7f1300d6;
    public static final int Base_Widget_MaterialComponents_CheckedTextView=0x7f1300d7;
    public static final int Base_Widget_MaterialComponents_Chip=0x7f1300d8;
    public static final int Base_Widget_MaterialComponents_MaterialCalendar_NavigationButton=0x7f1300d9;
    public static final int Base_Widget_MaterialComponents_PopupMenu=0x7f1300da;
    public static final int Base_Widget_MaterialComponents_PopupMenu_ContextMenu=0x7f1300db;
    public static final int Base_Widget_MaterialComponents_PopupMenu_ListPopupWindow=0x7f1300dc;
    public static final int Base_Widget_MaterialComponents_PopupMenu_Overflow=0x7f1300dd;
    public static final int Base_Widget_MaterialComponents_Slider=0x7f1300de;
    public static final int Base_Widget_MaterialComponents_Snackbar=0x7f1300df;
    public static final int Base_Widget_MaterialComponents_TextInputEditText=0x7f1300e0;
    public static final int Base_Widget_MaterialComponents_TextInputLayout=0x7f1300e1;
    public static final int Base_Widget_MaterialComponents_TextView=0x7f1300e2;
    public static final int Button=0x7f1300e3;
    public static final int CardView=0x7f1300e4;
    public static final int CardView_Dark=0x7f1300e5;
    public static final int CardView_Light=0x7f1300e6;
    public static final int Dexter_Internal_Theme_Transparent=0x7f1300e7;
    public static final int EditText=0x7f1300e8;
    public static final int EmptyTheme=0x7f1300e9;
    public static final int Font10Regular=0x7f1300ea;
    public static final int Font12=0x7f1300eb;
    public static final int Font12Regular=0x7f1300ec;
    public static final int Font14=0x7f1300ed;
    public static final int Font14Bold=0x7f1300ee;
    public static final int Font18Bold=0x7f1300ef;
    public static final int Font20Bold=0x7f1300f0;
    public static final int Font7Regular=0x7f1300f1;
    public static final int Font8Regular=0x7f1300f2;
    public static final int FullHeightDialog=0x7f1300f3;
    public static final int HintTextAppearance=0x7f1300f4;
    public static final int MaterialAlertDialog_MaterialComponents=0x7f1300f5;
    public static final int MaterialAlertDialog_MaterialComponents_Body_Text=0x7f1300f6;
    public static final int MaterialAlertDialog_MaterialComponents_Picker_Date_Calendar=0x7f1300f7;
    public static final int MaterialAlertDialog_MaterialComponents_Picker_Date_Spinner=0x7f1300f8;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Icon=0x7f1300f9;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Icon_CenterStacked=0x7f1300fa;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Panel=0x7f1300fb;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Panel_CenterStacked=0x7f1300fc;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Text=0x7f1300fd;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Text_CenterStacked=0x7f1300fe;
    public static final int Matisse_Dracula=0x7f1300ff;
    public static final int Matisse_Zhihu=0x7f130100;
    public static final int OtpWidget=0x7f130101;
    public static final int OtpWidget_OtpView=0x7f130102;
    public static final int PlacesAutocompleteBase=0x7f130103;
    public static final int PlacesAutocompleteErrorButtonText=0x7f130104;
    public static final int PlacesAutocompleteErrorMessageText=0x7f130105;
    public static final int PlacesAutocompleteFullscreen=0x7f130106;
    public static final int PlacesAutocompleteOverlay=0x7f130107;
    public static final int Platform_AppCompat=0x7f130108;
    public static final int Platform_AppCompat_Light=0x7f130109;
    public static final int Platform_MaterialComponents=0x7f13010a;
    public static final int Platform_MaterialComponents_Dialog=0x7f13010b;
    public static final int Platform_MaterialComponents_Light=0x7f13010c;
    public static final int Platform_MaterialComponents_Light_Dialog=0x7f13010d;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f13010e;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f13010f;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f130110;
    public static final int Platform_V21_AppCompat=0x7f130111;
    public static final int Platform_V21_AppCompat_Light=0x7f130112;
    public static final int Platform_V25_AppCompat=0x7f130113;
    public static final int Platform_V25_AppCompat_Light=0x7f130114;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f130115;
    public static final int Popup_Dracula=0x7f130116;
    public static final int Popup_Zhihu=0x7f130117;
    public static final int Preference=0x7f130118;
    public static final int Preference_Category=0x7f130119;
    public static final int Preference_Category_Material=0x7f13011a;
    public static final int Preference_CheckBoxPreference=0x7f13011b;
    public static final int Preference_CheckBoxPreference_Material=0x7f13011c;
    public static final int Preference_DialogPreference=0x7f13011d;
    public static final int Preference_DialogPreference_EditTextPreference=0x7f13011e;
    public static final int Preference_DialogPreference_EditTextPreference_Material=0x7f13011f;
    public static final int Preference_DialogPreference_Material=0x7f130120;
    public static final int Preference_DropDown=0x7f130121;
    public static final int Preference_DropDown_Material=0x7f130122;
    public static final int Preference_Information=0x7f130123;
    public static final int Preference_Information_Material=0x7f130124;
    public static final int Preference_Material=0x7f130125;
    public static final int Preference_PreferenceScreen=0x7f130126;
    public static final int Preference_PreferenceScreen_Material=0x7f130127;
    public static final int Preference_SeekBarPreference=0x7f130128;
    public static final int Preference_SeekBarPreference_Material=0x7f130129;
    public static final int Preference_SwitchPreference=0x7f13012a;
    public static final int Preference_SwitchPreference_Material=0x7f13012b;
    public static final int Preference_SwitchPreferenceCompat=0x7f13012c;
    public static final int Preference_SwitchPreferenceCompat_Material=0x7f13012d;
    public static final int PreferenceCategoryTitleTextStyle=0x7f13012e;
    public static final int PreferenceFragment=0x7f13012f;
    public static final int PreferenceFragment_Material=0x7f130130;
    public static final int PreferenceFragmentList=0x7f130131;
    public static final int PreferenceFragmentList_Material=0x7f130132;
    public static final int PreferenceSummaryTextStyle=0x7f130133;
    public static final int PreferenceThemeOverlay=0x7f130134;
    public static final int PreferenceThemeOverlay_v14=0x7f130135;
    public static final int PreferenceThemeOverlay_v14_Material=0x7f130136;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f130137;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f130138;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f130139;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f13013a;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f13013b;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x7f13013c;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x7f13013d;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f13013e;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x7f13013f;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f130140;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f130141;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f130142;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f130143;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f130144;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f130145;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f130146;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f130147;
    public static final int ShapeAppearance_MaterialComponents=0x7f130148;
    public static final int ShapeAppearance_MaterialComponents_LargeComponent=0x7f130149;
    public static final int ShapeAppearance_MaterialComponents_MediumComponent=0x7f13014a;
    public static final int ShapeAppearance_MaterialComponents_SmallComponent=0x7f13014b;
    public static final int ShapeAppearance_MaterialComponents_Test=0x7f13014c;
    public static final int ShapeAppearance_MaterialComponents_Tooltip=0x7f13014d;
    public static final int ShapeAppearanceOverlay=0x7f13014e;
    public static final int ShapeAppearanceOverlay_BottomLeftDifferentCornerSize=0x7f13014f;
    public static final int ShapeAppearanceOverlay_BottomRightCut=0x7f130150;
    public static final int ShapeAppearanceOverlay_Cut=0x7f130151;
    public static final int ShapeAppearanceOverlay_DifferentCornerSize=0x7f130152;
    public static final int ShapeAppearanceOverlay_MaterialComponents_BottomSheet=0x7f130153;
    public static final int ShapeAppearanceOverlay_MaterialComponents_Chip=0x7f130154;
    public static final int ShapeAppearanceOverlay_MaterialComponents_ExtendedFloatingActionButton=0x7f130155;
    public static final int ShapeAppearanceOverlay_MaterialComponents_FloatingActionButton=0x7f130156;
    public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day=0x7f130157;
    public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Window_Fullscreen=0x7f130158;
    public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Year=0x7f130159;
    public static final int ShapeAppearanceOverlay_MaterialComponents_TextInputLayout_FilledBox=0x7f13015a;
    public static final int ShapeAppearanceOverlay_TopLeftCut=0x7f13015b;
    public static final int ShapeAppearanceOverlay_TopRightDifferentCornerSize=0x7f13015c;
    public static final int Test_ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day=0x7f13015d;
    public static final int Test_Theme_MaterialComponents_MaterialCalendar=0x7f13015e;
    public static final int Test_Widget_MaterialComponents_MaterialCalendar=0x7f13015f;
    public static final int Test_Widget_MaterialComponents_MaterialCalendar_Day=0x7f130160;
    public static final int Test_Widget_MaterialComponents_MaterialCalendar_Day_Selected=0x7f130161;
    public static final int TestStyleWithLineHeight=0x7f130162;
    public static final int TestStyleWithLineHeightAppearance=0x7f130163;
    public static final int TestStyleWithThemeLineHeightAttribute=0x7f130164;
    public static final int TestStyleWithoutLineHeight=0x7f130165;
    public static final int TestThemeWithLineHeight=0x7f130166;
    public static final int TestThemeWithLineHeightDisabled=0x7f130167;
    public static final int TextAppearance_AppCompat=0x7f130168;
    public static final int TextAppearance_AppCompat_Body1=0x7f130169;
    public static final int TextAppearance_AppCompat_Body2=0x7f13016a;
    public static final int TextAppearance_AppCompat_Button=0x7f13016b;
    public static final int TextAppearance_AppCompat_Caption=0x7f13016c;
    public static final int TextAppearance_AppCompat_Display1=0x7f13016d;
    public static final int TextAppearance_AppCompat_Display2=0x7f13016e;
    public static final int TextAppearance_AppCompat_Display3=0x7f13016f;
    public static final int TextAppearance_AppCompat_Display4=0x7f130170;
    public static final int TextAppearance_AppCompat_Headline=0x7f130171;
    public static final int TextAppearance_AppCompat_Inverse=0x7f130172;
    public static final int TextAppearance_AppCompat_Large=0x7f130173;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f130174;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f130175;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f130176;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f130177;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f130178;
    public static final int TextAppearance_AppCompat_Medium=0x7f130179;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f13017a;
    public static final int TextAppearance_AppCompat_Menu=0x7f13017b;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f13017c;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f13017d;
    public static final int TextAppearance_AppCompat_Small=0x7f13017e;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f13017f;
    public static final int TextAppearance_AppCompat_Subhead=0x7f130180;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f130181;
    public static final int TextAppearance_AppCompat_Title=0x7f130182;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f130183;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f130184;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f130185;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f130186;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f130187;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f130188;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f130189;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f13018a;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f13018b;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f13018c;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f13018d;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f13018e;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f13018f;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f130190;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f130191;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f130192;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f130193;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f130194;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f130195;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f130196;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f130197;
    public static final int TextAppearance_Compat_Notification=0x7f130198;
    public static final int TextAppearance_Compat_Notification_Info=0x7f130199;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f13019a;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f13019b;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f13019c;
    public static final int TextAppearance_Compat_Notification_Media=0x7f13019d;
    public static final int TextAppearance_Compat_Notification_Time=0x7f13019e;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f13019f;
    public static final int TextAppearance_Compat_Notification_Title=0x7f1301a0;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f1301a1;
    public static final int TextAppearance_Design_CollapsingToolbar_Expanded=0x7f1301a2;
    public static final int TextAppearance_Design_Counter=0x7f1301a3;
    public static final int TextAppearance_Design_Counter_Overflow=0x7f1301a4;
    public static final int TextAppearance_Design_Error=0x7f1301a5;
    public static final int TextAppearance_Design_HelperText=0x7f1301a6;
    public static final int TextAppearance_Design_Hint=0x7f1301a7;
    public static final int TextAppearance_Design_Placeholder=0x7f1301a8;
    public static final int TextAppearance_Design_Prefix=0x7f1301a9;
    public static final int TextAppearance_Design_Snackbar_Message=0x7f1301aa;
    public static final int TextAppearance_Design_Suffix=0x7f1301ab;
    public static final int TextAppearance_Design_Tab=0x7f1301ac;
    public static final int TextAppearance_MaterialComponents_Badge=0x7f1301ad;
    public static final int TextAppearance_MaterialComponents_Body1=0x7f1301ae;
    public static final int TextAppearance_MaterialComponents_Body2=0x7f1301af;
    public static final int TextAppearance_MaterialComponents_Button=0x7f1301b0;
    public static final int TextAppearance_MaterialComponents_Caption=0x7f1301b1;
    public static final int TextAppearance_MaterialComponents_Chip=0x7f1301b2;
    public static final int TextAppearance_MaterialComponents_Headline1=0x7f1301b3;
    public static final int TextAppearance_MaterialComponents_Headline2=0x7f1301b4;
    public static final int TextAppearance_MaterialComponents_Headline3=0x7f1301b5;
    public static final int TextAppearance_MaterialComponents_Headline4=0x7f1301b6;
    public static final int TextAppearance_MaterialComponents_Headline5=0x7f1301b7;
    public static final int TextAppearance_MaterialComponents_Headline6=0x7f1301b8;
    public static final int TextAppearance_MaterialComponents_Overline=0x7f1301b9;
    public static final int TextAppearance_MaterialComponents_Subtitle1=0x7f1301ba;
    public static final int TextAppearance_MaterialComponents_Subtitle2=0x7f1301bb;
    public static final int TextAppearance_MaterialComponents_TimePicker_Title=0x7f1301bc;
    public static final int TextAppearance_MaterialComponents_Tooltip=0x7f1301bd;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f1301be;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f1301bf;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f1301c0;
    public static final int Theme_AppCompat=0x7f1301c1;
    public static final int Theme_AppCompat_CompactMenu=0x7f1301c2;
    public static final int Theme_AppCompat_DayNight=0x7f1301c3;
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f1301c4;
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f1301c5;
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f1301c6;
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f1301c7;
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f1301c8;
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f1301c9;
    public static final int Theme_AppCompat_Dialog=0x7f1301ca;
    public static final int Theme_AppCompat_Dialog_Alert=0x7f1301cb;
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f1301cc;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f1301cd;
    public static final int Theme_AppCompat_Empty=0x7f1301ce;
    public static final int Theme_AppCompat_Light=0x7f1301cf;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f1301d0;
    public static final int Theme_AppCompat_Light_Dialog=0x7f1301d1;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f1301d2;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f1301d3;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f1301d4;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f1301d5;
    public static final int Theme_AppCompat_NoActionBar=0x7f1301d6;
    public static final int Theme_Design=0x7f1301d7;
    public static final int Theme_Design_BottomSheetDialog=0x7f1301d8;
    public static final int Theme_Design_Light=0x7f1301d9;
    public static final int Theme_Design_Light_BottomSheetDialog=0x7f1301da;
    public static final int Theme_Design_Light_NoActionBar=0x7f1301db;
    public static final int Theme_Design_NoActionBar=0x7f1301dc;
    public static final int Theme_MaterialComponents=0x7f1301dd;
    public static final int Theme_MaterialComponents_BottomSheetDialog=0x7f1301de;
    public static final int Theme_MaterialComponents_Bridge=0x7f1301df;
    public static final int Theme_MaterialComponents_CompactMenu=0x7f1301e0;
    public static final int Theme_MaterialComponents_DayNight=0x7f1301e1;
    public static final int Theme_MaterialComponents_DayNight_BottomSheetDialog=0x7f1301e2;
    public static final int Theme_MaterialComponents_DayNight_Bridge=0x7f1301e3;
    public static final int Theme_MaterialComponents_DayNight_DarkActionBar=0x7f1301e4;
    public static final int Theme_MaterialComponents_DayNight_DarkActionBar_Bridge=0x7f1301e5;
    public static final int Theme_MaterialComponents_DayNight_Dialog=0x7f1301e6;
    public static final int Theme_MaterialComponents_DayNight_Dialog_Alert=0x7f1301e7;
    public static final int Theme_MaterialComponents_DayNight_Dialog_Alert_Bridge=0x7f1301e8;
    public static final int Theme_MaterialComponents_DayNight_Dialog_Bridge=0x7f1301e9;
    public static final int Theme_MaterialComponents_DayNight_Dialog_FixedSize=0x7f1301ea;
    public static final int Theme_MaterialComponents_DayNight_Dialog_FixedSize_Bridge=0x7f1301eb;
    public static final int Theme_MaterialComponents_DayNight_Dialog_MinWidth=0x7f1301ec;
    public static final int Theme_MaterialComponents_DayNight_Dialog_MinWidth_Bridge=0x7f1301ed;
    public static final int Theme_MaterialComponents_DayNight_DialogWhenLarge=0x7f1301ee;
    public static final int Theme_MaterialComponents_DayNight_NoActionBar=0x7f1301ef;
    public static final int Theme_MaterialComponents_DayNight_NoActionBar_Bridge=0x7f1301f0;
    public static final int Theme_MaterialComponents_Dialog=0x7f1301f1;
    public static final int Theme_MaterialComponents_Dialog_Alert=0x7f1301f2;
    public static final int Theme_MaterialComponents_Dialog_Alert_Bridge=0x7f1301f3;
    public static final int Theme_MaterialComponents_Dialog_Bridge=0x7f1301f4;
    public static final int Theme_MaterialComponents_Dialog_FixedSize=0x7f1301f5;
    public static final int Theme_MaterialComponents_Dialog_FixedSize_Bridge=0x7f1301f6;
    public static final int Theme_MaterialComponents_Dialog_MinWidth=0x7f1301f7;
    public static final int Theme_MaterialComponents_Dialog_MinWidth_Bridge=0x7f1301f8;
    public static final int Theme_MaterialComponents_DialogWhenLarge=0x7f1301f9;
    public static final int Theme_MaterialComponents_Light=0x7f1301fa;
    public static final int Theme_MaterialComponents_Light_BarSize=0x7f1301fb;
    public static final int Theme_MaterialComponents_Light_BottomSheetDialog=0x7f1301fc;
    public static final int Theme_MaterialComponents_Light_Bridge=0x7f1301fd;
    public static final int Theme_MaterialComponents_Light_DarkActionBar=0x7f1301fe;
    public static final int Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f1301ff;
    public static final int Theme_MaterialComponents_Light_Dialog=0x7f130200;
    public static final int Theme_MaterialComponents_Light_Dialog_Alert=0x7f130201;
    public static final int Theme_MaterialComponents_Light_Dialog_Alert_Bridge=0x7f130202;
    public static final int Theme_MaterialComponents_Light_Dialog_Bridge=0x7f130203;
    public static final int Theme_MaterialComponents_Light_Dialog_FixedSize=0x7f130204;
    public static final int Theme_MaterialComponents_Light_Dialog_FixedSize_Bridge=0x7f130205;
    public static final int Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f130206;
    public static final int Theme_MaterialComponents_Light_Dialog_MinWidth_Bridge=0x7f130207;
    public static final int Theme_MaterialComponents_Light_DialogWhenLarge=0x7f130208;
    public static final int Theme_MaterialComponents_Light_LargeTouch=0x7f130209;
    public static final int Theme_MaterialComponents_Light_NoActionBar=0x7f13020a;
    public static final int Theme_MaterialComponents_Light_NoActionBar_Bridge=0x7f13020b;
    public static final int Theme_MaterialComponents_NoActionBar=0x7f13020c;
    public static final int Theme_MaterialComponents_NoActionBar_Bridge=0x7f13020d;
    public static final int Theme_Transparent=0x7f13020e;
    public static final int ThemeOverlay_AppCompat=0x7f13020f;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f130210;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f130211;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f130212;
    public static final int ThemeOverlay_AppCompat_DayNight=0x7f130213;
    public static final int ThemeOverlay_AppCompat_DayNight_ActionBar=0x7f130214;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f130215;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f130216;
    public static final int ThemeOverlay_AppCompat_Light=0x7f130217;
    public static final int ThemeOverlay_Design_TextInputEditText=0x7f130218;
    public static final int ThemeOverlay_MaterialComponents=0x7f130219;
    public static final int ThemeOverlay_MaterialComponents_ActionBar=0x7f13021a;
    public static final int ThemeOverlay_MaterialComponents_ActionBar_Primary=0x7f13021b;
    public static final int ThemeOverlay_MaterialComponents_ActionBar_Surface=0x7f13021c;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView=0x7f13021d;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox=0x7f13021e;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox_Dense=0x7f13021f;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox=0x7f130220;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense=0x7f130221;
    public static final int ThemeOverlay_MaterialComponents_BottomAppBar_Primary=0x7f130222;
    public static final int ThemeOverlay_MaterialComponents_BottomAppBar_Surface=0x7f130223;
    public static final int ThemeOverlay_MaterialComponents_BottomSheetDialog=0x7f130224;
    public static final int ThemeOverlay_MaterialComponents_Dark=0x7f130225;
    public static final int ThemeOverlay_MaterialComponents_Dark_ActionBar=0x7f130226;
    public static final int ThemeOverlay_MaterialComponents_DayNight_BottomSheetDialog=0x7f130227;
    public static final int ThemeOverlay_MaterialComponents_Dialog=0x7f130228;
    public static final int ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f130229;
    public static final int ThemeOverlay_MaterialComponents_Dialog_Alert_Framework=0x7f13022a;
    public static final int ThemeOverlay_MaterialComponents_Light=0x7f13022b;
    public static final int ThemeOverlay_MaterialComponents_Light_BottomSheetDialog=0x7f13022c;
    public static final int ThemeOverlay_MaterialComponents_Light_Dialog_Alert_Framework=0x7f13022d;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x7f13022e;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Centered=0x7f13022f;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date=0x7f130230;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Calendar=0x7f130231;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text=0x7f130232;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text_Day=0x7f130233;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Spinner=0x7f130234;
    public static final int ThemeOverlay_MaterialComponents_MaterialCalendar=0x7f130235;
    public static final int ThemeOverlay_MaterialComponents_MaterialCalendar_Fullscreen=0x7f130236;
    public static final int ThemeOverlay_MaterialComponents_MaterialTimePicker=0x7f130237;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText=0x7f130238;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox=0x7f130239;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f13023a;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox=0x7f13023b;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f13023c;
    public static final int ThemeOverlay_MaterialComponents_TimePicker_Display=0x7f13023d;
    public static final int ThemeOverlay_MaterialComponents_Toolbar_Primary=0x7f13023e;
    public static final int ThemeOverlay_MaterialComponents_Toolbar_Surface=0x7f13023f;
    public static final int ThemeOverlayColorAccentRed=0x7f130240;
    public static final int Toolbar_Dracula=0x7f130241;
    public static final int Toolbar_Zhihu=0x7f130242;
    public static final int Widget_AppCompat_ActionBar=0x7f130243;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f130244;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f130245;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f130246;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f130247;
    public static final int Widget_AppCompat_ActionButton=0x7f130248;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f130249;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f13024a;
    public static final int Widget_AppCompat_ActionMode=0x7f13024b;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f13024c;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f13024d;
    public static final int Widget_AppCompat_Button=0x7f13024e;
    public static final int Widget_AppCompat_Button_Borderless=0x7f13024f;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f130250;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f130251;
    public static final int Widget_AppCompat_Button_Colored=0x7f130252;
    public static final int Widget_AppCompat_Button_Small=0x7f130253;
    public static final int Widget_AppCompat_ButtonBar=0x7f130254;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f130255;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f130256;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f130257;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f130258;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f130259;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f13025a;
    public static final int Widget_AppCompat_EditText=0x7f13025b;
    public static final int Widget_AppCompat_ImageButton=0x7f13025c;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f13025d;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f13025e;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f13025f;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f130260;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f130261;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f130262;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f130263;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f130264;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f130265;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f130266;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f130267;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f130268;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f130269;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f13026a;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f13026b;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f13026c;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f13026d;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f13026e;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f13026f;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f130270;
    public static final int Widget_AppCompat_Light_SearchView=0x7f130271;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f130272;
    public static final int Widget_AppCompat_ListMenuView=0x7f130273;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f130274;
    public static final int Widget_AppCompat_ListView=0x7f130275;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f130276;
    public static final int Widget_AppCompat_ListView_Menu=0x7f130277;
    public static final int Widget_AppCompat_PopupMenu=0x7f130278;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f130279;
    public static final int Widget_AppCompat_PopupWindow=0x7f13027a;
    public static final int Widget_AppCompat_ProgressBar=0x7f13027b;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f13027c;
    public static final int Widget_AppCompat_RatingBar=0x7f13027d;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f13027e;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f13027f;
    public static final int Widget_AppCompat_SearchView=0x7f130280;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f130281;
    public static final int Widget_AppCompat_SeekBar=0x7f130282;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f130283;
    public static final int Widget_AppCompat_Spinner=0x7f130284;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f130285;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f130286;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f130287;
    public static final int Widget_AppCompat_TextView=0x7f130288;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f130289;
    public static final int Widget_AppCompat_Toolbar=0x7f13028a;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f13028b;
    public static final int Widget_Compat_NotificationActionContainer=0x7f13028c;
    public static final int Widget_Compat_NotificationActionText=0x7f13028d;
    public static final int Widget_Design_AppBarLayout=0x7f13028e;
    public static final int Widget_Design_BottomNavigationView=0x7f13028f;
    public static final int Widget_Design_BottomSheet_Modal=0x7f130290;
    public static final int Widget_Design_CollapsingToolbar=0x7f130291;
    public static final int Widget_Design_FloatingActionButton=0x7f130292;
    public static final int Widget_Design_NavigationView=0x7f130293;
    public static final int Widget_Design_ScrimInsetsFrameLayout=0x7f130294;
    public static final int Widget_Design_Snackbar=0x7f130295;
    public static final int Widget_Design_TabLayout=0x7f130296;
    public static final int Widget_Design_TextInputEditText=0x7f130297;
    public static final int Widget_Design_TextInputLayout=0x7f130298;
    public static final int Widget_MaterialComponents_ActionBar_Primary=0x7f130299;
    public static final int Widget_MaterialComponents_ActionBar_PrimarySurface=0x7f13029a;
    public static final int Widget_MaterialComponents_ActionBar_Solid=0x7f13029b;
    public static final int Widget_MaterialComponents_ActionBar_Surface=0x7f13029c;
    public static final int Widget_MaterialComponents_AppBarLayout_Primary=0x7f13029d;
    public static final int Widget_MaterialComponents_AppBarLayout_PrimarySurface=0x7f13029e;
    public static final int Widget_MaterialComponents_AppBarLayout_Surface=0x7f13029f;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_FilledBox=0x7f1302a0;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_FilledBox_Dense=0x7f1302a1;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox=0x7f1302a2;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense=0x7f1302a3;
    public static final int Widget_MaterialComponents_Badge=0x7f1302a4;
    public static final int Widget_MaterialComponents_BottomAppBar=0x7f1302a5;
    public static final int Widget_MaterialComponents_BottomAppBar_Colored=0x7f1302a6;
    public static final int Widget_MaterialComponents_BottomAppBar_PrimarySurface=0x7f1302a7;
    public static final int Widget_MaterialComponents_BottomNavigationView=0x7f1302a8;
    public static final int Widget_MaterialComponents_BottomNavigationView_Colored=0x7f1302a9;
    public static final int Widget_MaterialComponents_BottomNavigationView_PrimarySurface=0x7f1302aa;
    public static final int Widget_MaterialComponents_BottomSheet=0x7f1302ab;
    public static final int Widget_MaterialComponents_BottomSheet_Modal=0x7f1302ac;
    public static final int Widget_MaterialComponents_Button=0x7f1302ad;
    public static final int Widget_MaterialComponents_Button_Icon=0x7f1302ae;
    public static final int Widget_MaterialComponents_Button_OutlinedButton=0x7f1302af;
    public static final int Widget_MaterialComponents_Button_OutlinedButton_Icon=0x7f1302b0;
    public static final int Widget_MaterialComponents_Button_TextButton=0x7f1302b1;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog=0x7f1302b2;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Flush=0x7f1302b3;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Icon=0x7f1302b4;
    public static final int Widget_MaterialComponents_Button_TextButton_Icon=0x7f1302b5;
    public static final int Widget_MaterialComponents_Button_TextButton_Snackbar=0x7f1302b6;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton=0x7f1302b7;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton_Icon=0x7f1302b8;
    public static final int Widget_MaterialComponents_CardView=0x7f1302b9;
    public static final int Widget_MaterialComponents_CheckedTextView=0x7f1302ba;
    public static final int Widget_MaterialComponents_Chip_Action=0x7f1302bb;
    public static final int Widget_MaterialComponents_Chip_Choice=0x7f1302bc;
    public static final int Widget_MaterialComponents_Chip_Entry=0x7f1302bd;
    public static final int Widget_MaterialComponents_Chip_Filter=0x7f1302be;
    public static final int Widget_MaterialComponents_ChipGroup=0x7f1302bf;
    public static final int Widget_MaterialComponents_CircularProgressIndicator=0x7f1302c0;
    public static final int Widget_MaterialComponents_CollapsingToolbar=0x7f1302c1;
    public static final int Widget_MaterialComponents_CompoundButton_CheckBox=0x7f1302c2;
    public static final int Widget_MaterialComponents_CompoundButton_RadioButton=0x7f1302c3;
    public static final int Widget_MaterialComponents_CompoundButton_Switch=0x7f1302c4;
    public static final int Widget_MaterialComponents_ExtendedFloatingActionButton=0x7f1302c5;
    public static final int Widget_MaterialComponents_ExtendedFloatingActionButton_Icon=0x7f1302c6;
    public static final int Widget_MaterialComponents_FloatingActionButton=0x7f1302c7;
    public static final int Widget_MaterialComponents_Light_ActionBar_Solid=0x7f1302c8;
    public static final int Widget_MaterialComponents_LinearProgressIndicator=0x7f1302c9;
    public static final int Widget_MaterialComponents_MaterialButtonToggleGroup=0x7f1302ca;
    public static final int Widget_MaterialComponents_MaterialCalendar=0x7f1302cb;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day=0x7f1302cc;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day_Invalid=0x7f1302cd;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day_Selected=0x7f1302ce;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day_Today=0x7f1302cf;
    public static final int Widget_MaterialComponents_MaterialCalendar_DayTextView=0x7f1302d0;
    public static final int Widget_MaterialComponents_MaterialCalendar_Fullscreen=0x7f1302d1;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderCancelButton=0x7f1302d2;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderConfirmButton=0x7f1302d3;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderDivider=0x7f1302d4;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderLayout=0x7f1302d5;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderSelection=0x7f1302d6;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderSelection_Fullscreen=0x7f1302d7;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderTitle=0x7f1302d8;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderToggleButton=0x7f1302d9;
    public static final int Widget_MaterialComponents_MaterialCalendar_Item=0x7f1302da;
    public static final int Widget_MaterialComponents_MaterialCalendar_MonthNavigationButton=0x7f1302db;
    public static final int Widget_MaterialComponents_MaterialCalendar_MonthTextView=0x7f1302dc;
    public static final int Widget_MaterialComponents_MaterialCalendar_Year=0x7f1302dd;
    public static final int Widget_MaterialComponents_MaterialCalendar_Year_Selected=0x7f1302de;
    public static final int Widget_MaterialComponents_MaterialCalendar_Year_Today=0x7f1302df;
    public static final int Widget_MaterialComponents_MaterialCalendar_YearNavigationButton=0x7f1302e0;
    public static final int Widget_MaterialComponents_NavigationView=0x7f1302e1;
    public static final int Widget_MaterialComponents_PopupMenu=0x7f1302e2;
    public static final int Widget_MaterialComponents_PopupMenu_ContextMenu=0x7f1302e3;
    public static final int Widget_MaterialComponents_PopupMenu_ListPopupWindow=0x7f1302e4;
    public static final int Widget_MaterialComponents_PopupMenu_Overflow=0x7f1302e5;
    public static final int Widget_MaterialComponents_ProgressIndicator=0x7f1302e6;
    public static final int Widget_MaterialComponents_ShapeableImageView=0x7f1302e7;
    public static final int Widget_MaterialComponents_Slider=0x7f1302e8;
    public static final int Widget_MaterialComponents_Snackbar=0x7f1302e9;
    public static final int Widget_MaterialComponents_Snackbar_FullWidth=0x7f1302ea;
    public static final int Widget_MaterialComponents_Snackbar_TextView=0x7f1302eb;
    public static final int Widget_MaterialComponents_TabLayout=0x7f1302ec;
    public static final int Widget_MaterialComponents_TabLayout_Colored=0x7f1302ed;
    public static final int Widget_MaterialComponents_TabLayout_PrimarySurface=0x7f1302ee;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox=0x7f1302ef;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f1302f0;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox=0x7f1302f1;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f1302f2;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox=0x7f1302f3;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense=0x7f1302f4;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense_ExposedDropdownMenu=0x7f1302f5;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_ExposedDropdownMenu=0x7f1302f6;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox=0x7f1302f7;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense=0x7f1302f8;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense_ExposedDropdownMenu=0x7f1302f9;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_ExposedDropdownMenu=0x7f1302fa;
    public static final int Widget_MaterialComponents_TextView=0x7f1302fb;
    public static final int Widget_MaterialComponents_TimePicker=0x7f1302fc;
    public static final int Widget_MaterialComponents_TimePicker_Button=0x7f1302fd;
    public static final int Widget_MaterialComponents_TimePicker_Clock=0x7f1302fe;
    public static final int Widget_MaterialComponents_TimePicker_Display=0x7f1302ff;
    public static final int Widget_MaterialComponents_TimePicker_Display_TextInputEditText=0x7f130300;
    public static final int Widget_MaterialComponents_TimePicker_ImageButton=0x7f130301;
    public static final int Widget_MaterialComponents_TimePicker_ImageButton_ShapeAppearance=0x7f130302;
    public static final int Widget_MaterialComponents_Toolbar=0x7f130303;
    public static final int Widget_MaterialComponents_Toolbar_Primary=0x7f130304;
    public static final int Widget_MaterialComponents_Toolbar_PrimarySurface=0x7f130305;
    public static final int Widget_MaterialComponents_Toolbar_Surface=0x7f130306;
    public static final int Widget_MaterialComponents_Tooltip=0x7f130307;
    public static final int Widget_Support_CoordinatorLayout=0x7f130308;
    public static final int amu_Bubble_TextAppearance_Dark=0x7f130309;
    public static final int amu_Bubble_TextAppearance_Light=0x7f13030a;
    public static final int amu_ClusterIcon_TextAppearance=0x7f13030b;
    public static final int button=0x7f13030c;
    public static final int com_facebook_activity_theme=0x7f13030d;
    public static final int com_facebook_auth_dialog=0x7f13030e;
    public static final int com_facebook_auth_dialog_instructions_textview=0x7f13030f;
    public static final int com_facebook_button=0x7f130310;
    public static final int com_facebook_button_like=0x7f130311;
    public static final int com_facebook_loginview_default_style=0x7f130312;
    public static final int edittext=0x7f130313;
    public static final int radioButton=0x7f130314;
    public static final int smallLabel=0x7f130315;
    public static final int tooltip_bubble_text=0x7f130316;
    public static final int ucrop_ImageViewWidgetIcon=0x7f130317;
    public static final int ucrop_TextViewCropAspectRatio=0x7f130318;
    public static final int ucrop_TextViewWidgetText=0x7f130319;
    public static final int ucrop_WrapperIconState=0x7f13031a;
    public static final int ucrop_WrapperRotateButton=0x7f13031b;
    public static final int vehicle_plate_number_cant_blank=0x7f13031c;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.kotlinbaseapplication:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.kotlinbaseapplication:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.kotlinbaseapplication:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.kotlinbaseapplication:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.kotlinbaseapplication:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.kotlinbaseapplication:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.kotlinbaseapplication:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.kotlinbaseapplication:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.kotlinbaseapplication:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.kotlinbaseapplication:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.kotlinbaseapplication:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.kotlinbaseapplication:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.kotlinbaseapplication:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height com.kotlinbaseapplication:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.kotlinbaseapplication:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.kotlinbaseapplication:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.kotlinbaseapplication:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.kotlinbaseapplication:icon}</code></td><td>Icon drawable to display at the start of this view.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.kotlinbaseapplication:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.kotlinbaseapplication:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.kotlinbaseapplication:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.kotlinbaseapplication:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.kotlinbaseapplication:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.kotlinbaseapplication:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.kotlinbaseapplication:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.kotlinbaseapplication:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.kotlinbaseapplication:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.kotlinbaseapplication:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.kotlinbaseapplication:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f030057, 0x7f03005e, 0x7f03005f, 0x7f03014b, 
      0x7f03014c, 0x7f03014d, 0x7f03014e, 0x7f03014f, 
      0x7f030150, 0x7f030176, 0x7f030192, 0x7f030193, 
      0x7f0301ad, 0x7f03020d, 0x7f030214, 0x7f03021c, 
      0x7f03021d, 0x7f030220, 0x7f03022e, 0x7f030245, 
      0x7f0302ba, 0x7f030315, 0x7f030352, 0x7f030365, 
      0x7f030366, 0x7f0303c3, 0x7f0303c6, 0x7f030429, 
      0x7f030433
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.kotlinbaseapplication:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.kotlinbaseapplication:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.kotlinbaseapplication:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.kotlinbaseapplication:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.kotlinbaseapplication:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.kotlinbaseapplication:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f030057, 0x7f03005e, 0x7f030119, 0x7f03020d, 
      0x7f0303c6, 0x7f030433
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.kotlinbaseapplication:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.kotlinbaseapplication:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f0301c7, 0x7f030234
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a ActivityNavigator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityNavigator_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActivityNavigator_action com.kotlinbaseapplication:action}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActivityNavigator_data com.kotlinbaseapplication:data}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActivityNavigator_dataPattern com.kotlinbaseapplication:dataPattern}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActivityNavigator_targetPackage com.kotlinbaseapplication:targetPackage}</code></td><td></td></tr>
     * </table>
     * @see #ActivityNavigator_android_name
     * @see #ActivityNavigator_action
     * @see #ActivityNavigator_data
     * @see #ActivityNavigator_dataPattern
     * @see #ActivityNavigator_targetPackage
     */
    public static final int[] ActivityNavigator={
      0x01010003, 0x7f03000e, 0x7f030179, 0x7f03017a, 
      0x7f0303f2
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #ActivityNavigator} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int ActivityNavigator_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#action}
     * attribute's value can be found in the {@link #ActivityNavigator} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:action
     */
    public static final int ActivityNavigator_action=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#data}
     * attribute's value can be found in the {@link #ActivityNavigator} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:data
     */
    public static final int ActivityNavigator_data=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#dataPattern}
     * attribute's value can be found in the {@link #ActivityNavigator} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:dataPattern
     */
    public static final int ActivityNavigator_dataPattern=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#targetPackage}
     * attribute's value can be found in the {@link #ActivityNavigator} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:targetPackage
     */
    public static final int ActivityNavigator_targetPackage=4;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen com.kotlinbaseapplication:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.kotlinbaseapplication:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.kotlinbaseapplication:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.kotlinbaseapplication:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.kotlinbaseapplication:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.kotlinbaseapplication:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.kotlinbaseapplication:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x7f0300a0, 0x7f0300a1, 0x7f0302ae, 
      0x7f0302af, 0x7f030310, 0x7f030395, 0x7f030397
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:buttonIconDimen
     */
    public static final int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:listLayout
     */
    public static final int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:showTitle
     */
    public static final int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableCompat_android_dither
     * @see #AnimatedStateListDrawableCompat_android_visible
     * @see #AnimatedStateListDrawableCompat_android_variablePadding
     * @see #AnimatedStateListDrawableCompat_android_constantSize
     * @see #AnimatedStateListDrawableCompat_android_enterFadeDuration
     * @see #AnimatedStateListDrawableCompat_android_exitFadeDuration
     */
    public static final int[] AnimatedStateListDrawableCompat={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int AnimatedStateListDrawableCompat_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int AnimatedStateListDrawableCompat_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int AnimatedStateListDrawableCompat_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int AnimatedStateListDrawableCompat_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableItem_android_id
     * @see #AnimatedStateListDrawableItem_android_drawable
     */
    public static final int[] AnimatedStateListDrawableItem={
      0x010100d0, 0x01010199
    };
    /**
     * <p>
     * @attr description
     * Keyframe identifier for use in specifying transitions.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int AnimatedStateListDrawableItem_android_id=0;
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the frame.  If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableItem_android_drawable=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableTransition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_drawable android:drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_toId android:toId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_fromId android:fromId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_reversible android:reversible}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableTransition_android_drawable
     * @see #AnimatedStateListDrawableTransition_android_toId
     * @see #AnimatedStateListDrawableTransition_android_fromId
     * @see #AnimatedStateListDrawableTransition_android_reversible
     */
    public static final int[] AnimatedStateListDrawableTransition={
      0x01010199, 0x01010449, 0x0101044a, 0x0101044b
    };
    /**
     * <p>
     * @attr description
     * Reference to a animation drawable resource to use for the frame.  If not
     * given, the animation drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableTransition_android_drawable=0;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the ending state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:toId
     */
    public static final int AnimatedStateListDrawableTransition_android_toId=1;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the starting state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:fromId
     */
    public static final int AnimatedStateListDrawableTransition_android_fromId=2;
    /**
     * <p>
     * @attr description
     * Whether this transition is reversible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:reversible
     */
    public static final int AnimatedStateListDrawableTransition_android_reversible=3;
    /**
     * Attributes that can be used with a AppBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_touchscreenBlocksFocus android:touchscreenBlocksFocus}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_keyboardNavigationCluster android:keyboardNavigationCluster}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_elevation com.kotlinbaseapplication:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #AppBarLayout_expanded com.kotlinbaseapplication:expanded}</code></td><td>The initial expanded state for the AppBarLayout.</td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScroll com.kotlinbaseapplication:liftOnScroll}</code></td><td>Whether the {@link AppBarLayout} should lift on scroll.</td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScrollTargetViewId com.kotlinbaseapplication:liftOnScrollTargetViewId}</code></td><td>The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).</td></tr>
     * <tr><td><code>{@link #AppBarLayout_statusBarForeground com.kotlinbaseapplication:statusBarForeground}</code></td><td>The drawable to display in front of the layout's content, but behind the status bar.</td></tr>
     * </table>
     * @see #AppBarLayout_android_background
     * @see #AppBarLayout_android_touchscreenBlocksFocus
     * @see #AppBarLayout_android_keyboardNavigationCluster
     * @see #AppBarLayout_elevation
     * @see #AppBarLayout_expanded
     * @see #AppBarLayout_liftOnScroll
     * @see #AppBarLayout_liftOnScrollTargetViewId
     * @see #AppBarLayout_statusBarForeground
     */
    public static final int[] AppBarLayout={
      0x010100d4, 0x0101048f, 0x01010540, 0x7f0301ad, 
      0x7f0301c8, 0x7f0302a4, 0x7f0302a5, 0x7f0303bd
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int AppBarLayout_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#touchscreenBlocksFocus}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:touchscreenBlocksFocus
     */
    public static final int AppBarLayout_android_touchscreenBlocksFocus=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#keyboardNavigationCluster}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:keyboardNavigationCluster
     */
    public static final int AppBarLayout_android_keyboardNavigationCluster=2;
    /**
     * <p>
     * @attr description
     * Deprecated. Elevation is now controlled via a state list animator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:elevation
     */
    public static final int AppBarLayout_elevation=3;
    /**
     * <p>
     * @attr description
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:expanded
     */
    public static final int AppBarLayout_expanded=4;
    /**
     * <p>
     * @attr description
     * Whether the {@link AppBarLayout} should lift on scroll. If set to
     * true, the {@link AppBarLayout} will animate to the lifted, or
     * elevated, state when content is scrolled beneath it. Requires
     * `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
     * set on the scrolling sibling (e.g., `NestedScrollView`,
     * `RecyclerView`, etc.). Default is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:liftOnScroll
     */
    public static final int AppBarLayout_liftOnScroll=5;
    /**
     * <p>
     * @attr description
     * The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).
     * If this id is not set, the {@link AppBarLayout} will use the target view provided
     * by nested scrolling to determine whether it should be lifted.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:liftOnScrollTargetViewId
     */
    public static final int AppBarLayout_liftOnScrollTargetViewId=6;
    /**
     * <p>
     * @attr description
     * The drawable to display in front of the layout's content, but behind the status bar.
     * Only works on Lollipop when used together with android:fitSystemWindows="true".
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:statusBarForeground
     */
    public static final int AppBarLayout_statusBarForeground=7;
    /**
     * Attributes that can be used with a AppBarLayoutStates.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsed com.kotlinbaseapplication:state_collapsed}</code></td><td>@deprecated in favor of {@link R.attr#state_lifted}.</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsible com.kotlinbaseapplication:state_collapsible}</code></td><td>@deprecated in favor of {@link R.attr#state_liftable}.</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_liftable com.kotlinbaseapplication:state_liftable}</code></td><td>State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_lifted com.kotlinbaseapplication:state_lifted}</code></td><td>State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).</td></tr>
     * </table>
     * @see #AppBarLayoutStates_state_collapsed
     * @see #AppBarLayoutStates_state_collapsible
     * @see #AppBarLayoutStates_state_liftable
     * @see #AppBarLayoutStates_state_lifted
     */
    @Deprecated
    public static final int[] AppBarLayoutStates={
      0x7f0303b7, 0x7f0303b8, 0x7f0303ba, 0x7f0303bb
    };
    /**
     * <p>
     * @attr description
     * @deprecated in favor of {@link R.attr#state_lifted}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:state_collapsed
     */
    @Deprecated
    public static final int AppBarLayoutStates_state_collapsed=0;
    /**
     * <p>
     * @attr description
     * @deprecated in favor of {@link R.attr#state_liftable}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:state_collapsible
     */
    @Deprecated
    public static final int AppBarLayoutStates_state_collapsible=1;
    /**
     * <p>
     * @attr description
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:state_liftable
     */
    public static final int AppBarLayoutStates_state_liftable=2;
    /**
     * <p>
     * @attr description
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:state_lifted
     */
    public static final int AppBarLayoutStates_state_lifted=3;
    /**
     * Attributes that can be used with a AppBarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollFlags com.kotlinbaseapplication:layout_scrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollInterpolator com.kotlinbaseapplication:layout_scrollInterpolator}</code></td><td>An interpolator to use when scrolling this View.</td></tr>
     * </table>
     * @see #AppBarLayout_Layout_layout_scrollFlags
     * @see #AppBarLayout_Layout_layout_scrollInterpolator
     */
    public static final int[] AppBarLayout_Layout={
      0x7f0302a1, 0x7f0302a2
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_scrollFlags}
     * attribute's value can be found in the {@link #AppBarLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>noScroll</td><td>0</td><td>Disable scrolling on the view. This flag should not be combined with any of the other
     * scroll flags.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * <tr><td>snapMargins</td><td>20</td><td>An additional flag to be used with 'snap'. If set, the view will be snapped to its
     * top and bottom margins, as opposed to the edges of the view itself.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_scrollFlags
     */
    public static final int AppBarLayout_Layout_layout_scrollFlags=0;
    /**
     * <p>
     * @attr description
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layout_scrollInterpolator
     */
    public static final int AppBarLayout_Layout_layout_scrollInterpolator=1;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.kotlinbaseapplication:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.kotlinbaseapplication:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.kotlinbaseapplication:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x7f0303a5, 0x7f030427, 0x7f030428
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.kotlinbaseapplication:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.kotlinbaseapplication:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.kotlinbaseapplication:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x7f030423, 0x7f030424, 0x7f030425
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.kotlinbaseapplication:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.kotlinbaseapplication:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.kotlinbaseapplication:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.kotlinbaseapplication:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.kotlinbaseapplication:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableBottomCompat com.kotlinbaseapplication:drawableBottomCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableEndCompat com.kotlinbaseapplication:drawableEndCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableLeftCompat com.kotlinbaseapplication:drawableLeftCompat}</code></td><td>Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableRightCompat com.kotlinbaseapplication:drawableRightCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableStartCompat com.kotlinbaseapplication:drawableStartCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTint com.kotlinbaseapplication:drawableTint}</code></td><td>Tint to apply to the compound (left, top, etc.) drawables.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTintMode com.kotlinbaseapplication:drawableTintMode}</code></td><td>Blending mode used to apply the compound (left, top, etc.) drawables tint.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTopCompat com.kotlinbaseapplication:drawableTopCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight com.kotlinbaseapplication:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.kotlinbaseapplication:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontVariationSettings com.kotlinbaseapplication:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight com.kotlinbaseapplication:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight com.kotlinbaseapplication:lineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.kotlinbaseapplication:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textLocale com.kotlinbaseapplication:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_drawableBottomCompat
     * @see #AppCompatTextView_drawableEndCompat
     * @see #AppCompatTextView_drawableLeftCompat
     * @see #AppCompatTextView_drawableRightCompat
     * @see #AppCompatTextView_drawableStartCompat
     * @see #AppCompatTextView_drawableTint
     * @see #AppCompatTextView_drawableTintMode
     * @see #AppCompatTextView_drawableTopCompat
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_fontVariationSettings
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     * @see #AppCompatTextView_textLocale
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x7f030051, 0x7f030052, 0x7f030053, 
      0x7f030054, 0x7f030055, 0x7f03019b, 0x7f03019c, 
      0x7f03019d, 0x7f03019e, 0x7f0301a0, 0x7f0301a1, 
      0x7f0301a2, 0x7f0301a3, 0x7f0301e3, 0x7f0301f9, 
      0x7f030201, 0x7f03025c, 0x7f0302a7, 0x7f0303f6, 
      0x7f030412
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#drawableBottomCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:drawableBottomCompat
     */
    public static final int AppCompatTextView_drawableBottomCompat=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#drawableEndCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:drawableEndCompat
     */
    public static final int AppCompatTextView_drawableEndCompat=7;
    /**
     * <p>
     * @attr description
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:drawableLeftCompat
     */
    public static final int AppCompatTextView_drawableLeftCompat=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#drawableRightCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:drawableRightCompat
     */
    public static final int AppCompatTextView_drawableRightCompat=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#drawableStartCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:drawableStartCompat
     */
    public static final int AppCompatTextView_drawableStartCompat=10;
    /**
     * <p>
     * @attr description
     * Tint to apply to the compound (left, top, etc.) drawables.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:drawableTint
     */
    public static final int AppCompatTextView_drawableTint=11;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:drawableTintMode
     */
    public static final int AppCompatTextView_drawableTintMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#drawableTopCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:drawableTopCompat
     */
    public static final int AppCompatTextView_drawableTopCompat=13;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:firstBaselineToTopHeight
     */
    public static final int AppCompatTextView_firstBaselineToTopHeight=14;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=15;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available after api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:fontVariationSettings
     */
    public static final int AppCompatTextView_fontVariationSettings=16;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:lastBaselineToBottomHeight
     */
    public static final int AppCompatTextView_lastBaselineToBottomHeight=17;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:lineHeight
     */
    public static final int AppCompatTextView_lineHeight=18;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=19;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:textLocale
     */
    public static final int AppCompatTextView_textLocale=20;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.kotlinbaseapplication:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.kotlinbaseapplication:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.kotlinbaseapplication:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.kotlinbaseapplication:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.kotlinbaseapplication:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.kotlinbaseapplication:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.kotlinbaseapplication:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.kotlinbaseapplication:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.kotlinbaseapplication:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.kotlinbaseapplication:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.kotlinbaseapplication:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.kotlinbaseapplication:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.kotlinbaseapplication:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.kotlinbaseapplication:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.kotlinbaseapplication:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.kotlinbaseapplication:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.kotlinbaseapplication:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.kotlinbaseapplication:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.kotlinbaseapplication:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.kotlinbaseapplication:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.kotlinbaseapplication:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.kotlinbaseapplication:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.kotlinbaseapplication:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.kotlinbaseapplication:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.kotlinbaseapplication:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.kotlinbaseapplication:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.kotlinbaseapplication:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.kotlinbaseapplication:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.kotlinbaseapplication:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.kotlinbaseapplication:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.kotlinbaseapplication:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.kotlinbaseapplication:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.kotlinbaseapplication:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.kotlinbaseapplication:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.kotlinbaseapplication:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.kotlinbaseapplication:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.kotlinbaseapplication:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.kotlinbaseapplication:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.kotlinbaseapplication:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.kotlinbaseapplication:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.kotlinbaseapplication:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.kotlinbaseapplication:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.kotlinbaseapplication:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.kotlinbaseapplication:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.kotlinbaseapplication:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.kotlinbaseapplication:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.kotlinbaseapplication:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.kotlinbaseapplication:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.kotlinbaseapplication:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.kotlinbaseapplication:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.kotlinbaseapplication:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.kotlinbaseapplication:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.kotlinbaseapplication:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.kotlinbaseapplication:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.kotlinbaseapplication:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.kotlinbaseapplication:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.kotlinbaseapplication:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius com.kotlinbaseapplication:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.kotlinbaseapplication:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.kotlinbaseapplication:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.kotlinbaseapplication:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.kotlinbaseapplication:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.kotlinbaseapplication:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.kotlinbaseapplication:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.kotlinbaseapplication:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.kotlinbaseapplication:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.kotlinbaseapplication:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.kotlinbaseapplication:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.kotlinbaseapplication:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.kotlinbaseapplication:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorMultipleAnimated com.kotlinbaseapplication:listChoiceIndicatorMultipleAnimated}</code></td><td>Animated Drawable to use for single choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorSingleAnimated com.kotlinbaseapplication:listChoiceIndicatorSingleAnimated}</code></td><td>Animated Drawable to use for multiple choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.kotlinbaseapplication:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.kotlinbaseapplication:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.kotlinbaseapplication:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.kotlinbaseapplication:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.kotlinbaseapplication:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.kotlinbaseapplication:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingEnd com.kotlinbaseapplication:listPreferredItemPaddingEnd}</code></td><td>The preferred padding along the end edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.kotlinbaseapplication:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.kotlinbaseapplication:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingStart com.kotlinbaseapplication:listPreferredItemPaddingStart}</code></td><td>The preferred padding along the start edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.kotlinbaseapplication:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.kotlinbaseapplication:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.kotlinbaseapplication:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.kotlinbaseapplication:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.kotlinbaseapplication:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.kotlinbaseapplication:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.kotlinbaseapplication:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.kotlinbaseapplication:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.kotlinbaseapplication:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.kotlinbaseapplication:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.kotlinbaseapplication:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.kotlinbaseapplication:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.kotlinbaseapplication:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.kotlinbaseapplication:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.kotlinbaseapplication:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.kotlinbaseapplication:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.kotlinbaseapplication:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.kotlinbaseapplication:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.kotlinbaseapplication:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.kotlinbaseapplication:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.kotlinbaseapplication:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.kotlinbaseapplication:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.kotlinbaseapplication:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.kotlinbaseapplication:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.kotlinbaseapplication:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.kotlinbaseapplication:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.kotlinbaseapplication:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.kotlinbaseapplication:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.kotlinbaseapplication:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.kotlinbaseapplication:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass com.kotlinbaseapplication:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.kotlinbaseapplication:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.kotlinbaseapplication:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.kotlinbaseapplication:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.kotlinbaseapplication:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.kotlinbaseapplication:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.kotlinbaseapplication:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.kotlinbaseapplication:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.kotlinbaseapplication:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.kotlinbaseapplication:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.kotlinbaseapplication:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listChoiceIndicatorMultipleAnimated
     * @see #AppCompatTheme_listChoiceIndicatorSingleAnimated
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingEnd
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_listPreferredItemPaddingStart
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x7f03000f, 0x7f030010, 
      0x7f030011, 0x7f030012, 0x7f030013, 0x7f030014, 
      0x7f030015, 0x7f030016, 0x7f030017, 0x7f030018, 
      0x7f030019, 0x7f03001a, 0x7f03001b, 0x7f03001d, 
      0x7f03001e, 0x7f03001f, 0x7f030020, 0x7f030021, 
      0x7f030022, 0x7f030023, 0x7f030024, 0x7f030025, 
      0x7f030026, 0x7f030027, 0x7f030028, 0x7f030029, 
      0x7f03002a, 0x7f03002b, 0x7f03002c, 0x7f03002d, 
      0x7f030031, 0x7f030039, 0x7f03003a, 0x7f03003b, 
      0x7f03003c, 0x7f030050, 0x7f030080, 0x7f030099, 
      0x7f03009a, 0x7f03009b, 0x7f03009c, 0x7f03009d, 
      0x7f0300a3, 0x7f0300a4, 0x7f0300e8, 0x7f0300f1, 
      0x7f030121, 0x7f030122, 0x7f030123, 0x7f030124, 
      0x7f030125, 0x7f030126, 0x7f030127, 0x7f03012e, 
      0x7f03012f, 0x7f030136, 0x7f03015a, 0x7f030189, 
      0x7f03018e, 0x7f03018f, 0x7f030194, 0x7f030196, 
      0x7f0301a5, 0x7f0301a6, 0x7f0301a9, 0x7f0301aa, 
      0x7f0301ac, 0x7f03021c, 0x7f03022c, 0x7f0302aa, 
      0x7f0302ab, 0x7f0302ac, 0x7f0302ad, 0x7f0302b0, 
      0x7f0302b1, 0x7f0302b2, 0x7f0302b3, 0x7f0302b4, 
      0x7f0302b5, 0x7f0302b6, 0x7f0302b7, 0x7f0302b8, 
      0x7f030337, 0x7f030338, 0x7f030339, 0x7f030351, 
      0x7f030353, 0x7f030369, 0x7f03036b, 0x7f03036c, 
      0x7f03036d, 0x7f03037e, 0x7f030381, 0x7f030383, 
      0x7f030384, 0x7f0303a2, 0x7f0303a3, 0x7f0303d2, 
      0x7f030401, 0x7f030403, 0x7f030404, 0x7f030405, 
      0x7f030407, 0x7f030408, 0x7f030409, 0x7f03040a, 
      0x7f03040d, 0x7f03040e, 0x7f030436, 0x7f030437, 
      0x7f030438, 0x7f030439, 0x7f030471, 0x7f03047c, 
      0x7f03047d, 0x7f03047e, 0x7f03047f, 0x7f030480, 
      0x7f030481, 0x7f030482, 0x7f030483, 0x7f030484, 
      0x7f030485
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=23;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=24;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=26;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=27;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=28;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=29;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=30;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=31;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=33;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=34;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=35;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=36;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=37;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=38;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=39;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=43;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=44;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=45;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=46;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=47;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=48;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=49;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=50;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=53;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorError
     */
    public static final int AppCompatTheme_colorError=54;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=55;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=56;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=57;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=58;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:dialogCornerRadius
     */
    public static final int AppCompatTheme_dialogCornerRadius=59;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=60;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=61;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=62;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=63;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=64;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=65;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=66;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=67;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=68;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=69;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=70;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=71;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for single choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:listChoiceIndicatorMultipleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorMultipleAnimated=72;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for multiple choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:listChoiceIndicatorSingleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorSingleAnimated=73;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=74;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=75;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=76;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=77;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=78;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=79;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:listPreferredItemPaddingEnd
     */
    public static final int AppCompatTheme_listPreferredItemPaddingEnd=80;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=81;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=82;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:listPreferredItemPaddingStart
     */
    public static final int AppCompatTheme_listPreferredItemPaddingStart=83;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=84;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=85;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=86;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=87;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=88;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=89;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=90;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=91;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=92;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=93;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=94;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=95;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=96;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=97;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=98;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=99;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=100;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=101;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=102;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=103;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=104;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=105;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=106;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=107;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=108;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=109;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=110;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=111;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=112;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=113;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:viewInflaterClass
     */
    public static final int AppCompatTheme_viewInflaterClass=114;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=115;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=116;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=117;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=118;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=119;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=120;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=121;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=122;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=123;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=124;
    /**
     * Attributes that can be used with a BackgroundStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BackgroundStyle_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BackgroundStyle_selectableItemBackground com.kotlinbaseapplication:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #BackgroundStyle_android_selectableItemBackground
     * @see #BackgroundStyle_selectableItemBackground
     */
    public static final int[] BackgroundStyle={
      0x0101030e, 0x7f030383
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #BackgroundStyle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static final int BackgroundStyle_android_selectableItemBackground=0;
    /**
     * <p>
     * @attr description
     * Need a non-android: attr here so that gradle doesn't remove it
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:selectableItemBackground
     */
    public static final int BackgroundStyle_selectableItemBackground=1;
    /**
     * Attributes that can be used with a Badge.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Badge_backgroundColor com.kotlinbaseapplication:backgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_badgeGravity com.kotlinbaseapplication:badgeGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_badgeTextColor com.kotlinbaseapplication:badgeTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_horizontalOffset com.kotlinbaseapplication:horizontalOffset}</code></td><td>Offset moves the badge towards the center of its anchor.</td></tr>
     * <tr><td><code>{@link #Badge_maxCharacterCount com.kotlinbaseapplication:maxCharacterCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_number com.kotlinbaseapplication:number}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_verticalOffset com.kotlinbaseapplication:verticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #Badge_backgroundColor
     * @see #Badge_badgeGravity
     * @see #Badge_badgeTextColor
     * @see #Badge_horizontalOffset
     * @see #Badge_maxCharacterCount
     * @see #Badge_number
     * @see #Badge_verticalOffset
     */
    public static final int[] Badge={
      0x7f030058, 0x7f030062, 0x7f030064, 0x7f03021e, 
      0x7f0302dc, 0x7f03031b, 0x7f030470
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#backgroundColor}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundColor
     */
    public static final int Badge_backgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#badgeGravity}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BOTTOM_END</td><td>800055</td><td>Gravity.BOTTOM | Gravity.END</td></tr>
     * <tr><td>BOTTOM_START</td><td>800053</td><td>Gravity.BOTTOM | Gravity.START</td></tr>
     * <tr><td>TOP_END</td><td>800035</td><td>Gravity.TOP | Gravity.END</td></tr>
     * <tr><td>TOP_START</td><td>800033</td><td>Gravity.TOP | Gravity.START</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:badgeGravity
     */
    public static final int Badge_badgeGravity=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#badgeTextColor}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:badgeTextColor
     */
    public static final int Badge_badgeTextColor=2;
    /**
     * <p>
     * @attr description
     * Offset moves the badge towards the center of its anchor.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:horizontalOffset
     */
    public static final int Badge_horizontalOffset=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#maxCharacterCount}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:maxCharacterCount
     */
    public static final int Badge_maxCharacterCount=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#number}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:number
     */
    public static final int Badge_number=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#verticalOffset}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:verticalOffset
     */
    public static final int Badge_verticalOffset=6;
    /**
     * Attributes that can be used with a BaseProgressIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_android_indeterminate android:indeterminate}</code></td><td></td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_hideAnimationBehavior com.kotlinbaseapplication:hideAnimationBehavior}</code></td><td>The animation behavior to hide the indicator and track.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_indicatorColor com.kotlinbaseapplication:indicatorColor}</code></td><td>The indicator color (or colors in an array).</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_minHideDelay com.kotlinbaseapplication:minHideDelay}</code></td><td>The minimum time, in milliseconds, that the requested hide action will
     * wait to start once show action is started.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_showAnimationBehavior com.kotlinbaseapplication:showAnimationBehavior}</code></td><td>The animation behavior to show the indicator and track.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_showDelay com.kotlinbaseapplication:showDelay}</code></td><td>The time, in milliseconds, that the progress indicator will wait to show
     * once show() is called.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_trackColor com.kotlinbaseapplication:trackColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_trackCornerRadius com.kotlinbaseapplication:trackCornerRadius}</code></td><td>The radius of each corner of both the indicator and the track.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_trackThickness com.kotlinbaseapplication:trackThickness}</code></td><td>The thickness of the progress track and indicator.</td></tr>
     * </table>
     * @see #BaseProgressIndicator_android_indeterminate
     * @see #BaseProgressIndicator_hideAnimationBehavior
     * @see #BaseProgressIndicator_indicatorColor
     * @see #BaseProgressIndicator_minHideDelay
     * @see #BaseProgressIndicator_showAnimationBehavior
     * @see #BaseProgressIndicator_showDelay
     * @see #BaseProgressIndicator_trackColor
     * @see #BaseProgressIndicator_trackCornerRadius
     * @see #BaseProgressIndicator_trackThickness
     */
    public static final int[] BaseProgressIndicator={
      0x01010139, 0x7f030212, 0x7f03022f, 0x7f0302e6, 
      0x7f03038d, 0x7f03038f, 0x7f030440, 0x7f030443, 
      0x7f030445
    };
    /**
     * <p>
     * @attr description
     * Whether the progress indicator should be indeterminate mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:indeterminate
     */
    public static final int BaseProgressIndicator_android_indeterminate=0;
    /**
     * <p>
     * @attr description
     * The animation behavior to hide the indicator and track.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Collapses from the top edge to the bottom edge for the linear type;
     * collapses from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; disappears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Collapses from the bottom edge to the top edge for the linear type;
     * collapses from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:hideAnimationBehavior
     */
    public static final int BaseProgressIndicator_hideAnimationBehavior=1;
    /**
     * <p>
     * @attr description
     * The indicator color (or colors in an array). By default, it uses theme
     * primary color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:indicatorColor
     */
    public static final int BaseProgressIndicator_indicatorColor=2;
    /**
     * <p>
     * @attr description
     * The minimum time, in milliseconds, that the requested hide action will
     * wait to start once show action is started. If set to zero or negative
     * values (-1 as default), the requested hide action will start immediately.
     * This value is capped to a limit defined in ProgressIndicator class.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:minHideDelay
     */
    public static final int BaseProgressIndicator_minHideDelay=3;
    /**
     * <p>
     * @attr description
     * The animation behavior to show the indicator and track.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Expands from the top edge to the bottom edge for the linear type;
     * expands from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; appears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Expands from the bottom edge to the top edge for the linear type;
     * expands from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:showAnimationBehavior
     */
    public static final int BaseProgressIndicator_showAnimationBehavior=4;
    /**
     * <p>
     * @attr description
     * The time, in milliseconds, that the progress indicator will wait to show
     * once show() is called. If set to zero or negative values (-1 as default),
     * the show action will start immediately.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:showDelay
     */
    public static final int BaseProgressIndicator_showDelay=5;
    /**
     * <p>
     * @attr description
     * The color used for the progress track. If not defined, it will be set to
     * the indicatorColor and apply the android:disabledAlpha from the theme.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:trackColor
     */
    public static final int BaseProgressIndicator_trackColor=6;
    /**
     * <p>
     * @attr description
     * The radius of each corner of both the indicator and the track. A radius
     * larger than half of the track width will throw exceptions during
     * initialization.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:trackCornerRadius
     */
    public static final int BaseProgressIndicator_trackCornerRadius=7;
    /**
     * <p>
     * @attr description
     * The thickness of the progress track and indicator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:trackThickness
     */
    public static final int BaseProgressIndicator_trackThickness=8;
    /**
     * Attributes that can be used with a BottomAppBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomAppBar_backgroundTint com.kotlinbaseapplication:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_elevation com.kotlinbaseapplication:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAlignmentMode com.kotlinbaseapplication:fabAlignmentMode}</code></td><td>The alignment of the fab relative to the BottomAppBar.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAnimationMode com.kotlinbaseapplication:fabAnimationMode}</code></td><td>The animation mode that should be used when the fab animates between alignment modes.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleMargin com.kotlinbaseapplication:fabCradleMargin}</code></td><td>The margin between the semi-circular cradle for the fab and the fab.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleRoundedCornerRadius com.kotlinbaseapplication:fabCradleRoundedCornerRadius}</code></td><td>The radius of the rounded corners on each side of the cradle.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleVerticalOffset com.kotlinbaseapplication:fabCradleVerticalOffset}</code></td><td>The vertical offset between the fab from the cradle.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_hideOnScroll com.kotlinbaseapplication:hideOnScroll}</code></td><td>Whether the BottomAppBar should hide when a NestedScrollView is scrolled.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_paddingBottomSystemWindowInsets com.kotlinbaseapplication:paddingBottomSystemWindowInsets}</code></td><td>Just adding the parameters that we need for now.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_paddingLeftSystemWindowInsets com.kotlinbaseapplication:paddingLeftSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_paddingRightSystemWindowInsets com.kotlinbaseapplication:paddingRightSystemWindowInsets}</code></td><td></td></tr>
     * </table>
     * @see #BottomAppBar_backgroundTint
     * @see #BottomAppBar_elevation
     * @see #BottomAppBar_fabAlignmentMode
     * @see #BottomAppBar_fabAnimationMode
     * @see #BottomAppBar_fabCradleMargin
     * @see #BottomAppBar_fabCradleRoundedCornerRadius
     * @see #BottomAppBar_fabCradleVerticalOffset
     * @see #BottomAppBar_hideOnScroll
     * @see #BottomAppBar_paddingBottomSystemWindowInsets
     * @see #BottomAppBar_paddingLeftSystemWindowInsets
     * @see #BottomAppBar_paddingRightSystemWindowInsets
     */
    public static final int[] BottomAppBar={
      0x7f030060, 0x7f0301ad, 0x7f0301d3, 0x7f0301d4, 
      0x7f0301d5, 0x7f0301d6, 0x7f0301d7, 0x7f030215, 
      0x7f030330, 0x7f030332, 0x7f030333
    };
    /**
     * <p>
     * @attr description
     * Background for the BottomAppBar.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundTint
     */
    public static final int BottomAppBar_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Elevation for the BottomAppBar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:elevation
     */
    public static final int BottomAppBar_elevation=1;
    /**
     * <p>
     * @attr description
     * The alignment of the fab relative to the BottomAppBar.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td>Mode that aligns the fab to the center.</td></tr>
     * <tr><td>end</td><td>1</td><td>Mode that aligns the fab to the end.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:fabAlignmentMode
     */
    public static final int BottomAppBar_fabAlignmentMode=2;
    /**
     * <p>
     * @attr description
     * The animation mode that should be used when the fab animates between alignment modes.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>scale</td><td>0</td><td>Mode that scales the fab down to a point, moves it, then scales the fab back to its normal size.</td></tr>
     * <tr><td>slide</td><td>1</td><td>Mode that slides the fab from one alignment mode to the next.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:fabAnimationMode
     */
    public static final int BottomAppBar_fabAnimationMode=3;
    /**
     * <p>
     * @attr description
     * The margin between the semi-circular cradle for the fab and the fab.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:fabCradleMargin
     */
    public static final int BottomAppBar_fabCradleMargin=4;
    /**
     * <p>
     * @attr description
     * The radius of the rounded corners on each side of the cradle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:fabCradleRoundedCornerRadius
     */
    public static final int BottomAppBar_fabCradleRoundedCornerRadius=5;
    /**
     * <p>
     * @attr description
     * The vertical offset between the fab from the cradle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:fabCradleVerticalOffset
     */
    public static final int BottomAppBar_fabCradleVerticalOffset=6;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should hide when a NestedScrollView is scrolled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:hideOnScroll
     */
    public static final int BottomAppBar_hideOnScroll=7;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should apply padding to be above the bottom window insets.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:paddingBottomSystemWindowInsets
     */
    public static final int BottomAppBar_paddingBottomSystemWindowInsets=8;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should apply padding to be to the right of the left window insets.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:paddingLeftSystemWindowInsets
     */
    public static final int BottomAppBar_paddingLeftSystemWindowInsets=9;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should apply padding to be to the left of the right window insets.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:paddingRightSystemWindowInsets
     */
    public static final int BottomAppBar_paddingRightSystemWindowInsets=10;
    /**
     * Attributes that can be used with a BottomNavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomNavigationView_backgroundTint com.kotlinbaseapplication:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_elevation com.kotlinbaseapplication:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemBackground com.kotlinbaseapplication:itemBackground}</code></td><td>A background drawable to use for navigation items.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemHorizontalTranslationEnabled com.kotlinbaseapplication:itemHorizontalTranslationEnabled}</code></td><td>Whether the items translate horizontally when in "selected" label visibility mode.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemIconSize com.kotlinbaseapplication:itemIconSize}</code></td><td>The size of the icon navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemIconTint com.kotlinbaseapplication:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemRippleColor com.kotlinbaseapplication:itemRippleColor}</code></td><td>The ColorStateList to use for a ripple background.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextAppearanceActive com.kotlinbaseapplication:itemTextAppearanceActive}</code></td><td>The text appearance to apply to the active navigation item label.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextAppearanceInactive com.kotlinbaseapplication:itemTextAppearanceInactive}</code></td><td>The text appearance to apply to the inactive navigation item labels.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextColor com.kotlinbaseapplication:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_labelVisibilityMode com.kotlinbaseapplication:labelVisibilityMode}</code></td><td>Whether navigation items display with a label, without a label, or with a label during
     * selected state.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_menu com.kotlinbaseapplication:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * </table>
     * @see #BottomNavigationView_backgroundTint
     * @see #BottomNavigationView_elevation
     * @see #BottomNavigationView_itemBackground
     * @see #BottomNavigationView_itemHorizontalTranslationEnabled
     * @see #BottomNavigationView_itemIconSize
     * @see #BottomNavigationView_itemIconTint
     * @see #BottomNavigationView_itemRippleColor
     * @see #BottomNavigationView_itemTextAppearanceActive
     * @see #BottomNavigationView_itemTextAppearanceInactive
     * @see #BottomNavigationView_itemTextColor
     * @see #BottomNavigationView_labelVisibilityMode
     * @see #BottomNavigationView_menu
     */
    public static final int[] BottomNavigationView={
      0x7f030060, 0x7f0301ad, 0x7f03023d, 0x7f030240, 
      0x7f030242, 0x7f030243, 0x7f030246, 0x7f030252, 
      0x7f030253, 0x7f030254, 0x7f03025b, 0x7f0302e3
    };
    /**
     * <p>
     * @attr description
     * Background tint for the BottomNavigationView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundTint
     */
    public static final int BottomNavigationView_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:elevation
     */
    public static final int BottomNavigationView_elevation=1;
    /**
     * <p>
     * @attr description
     * The background for the navigation items. Attribute type definition is in navigation
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemBackground
     */
    public static final int BottomNavigationView_itemBackground=2;
    /**
     * <p>
     * @attr description
     * Whether the items translate horizontally when in "selected" label visibility mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:itemHorizontalTranslationEnabled
     */
    public static final int BottomNavigationView_itemHorizontalTranslationEnabled=3;
    /**
     * <p>
     * @attr description
     * The size to provide for the navigation item icons.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemIconSize
     */
    public static final int BottomNavigationView_itemIconSize=4;
    /**
     * <p>
     * @attr description
     * The tint to apply to the navigation item icons. Attribute type definition is in navigation
     * package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemIconTint
     */
    public static final int BottomNavigationView_itemIconTint=5;
    /**
     * <p>
     * @attr description
     * The ColorStateList to use for a ripple background. This only exists because creating
     * ripples in drawable xml based on theme colors is not supported pre-23. This will be ignored
     * if itemBackground is set.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemRippleColor
     */
    public static final int BottomNavigationView_itemRippleColor=6;
    /**
     * <p>
     * @attr description
     * The text appearance to apply to the active navigation item label. You should not set
     * android:textColor in itemTextAppearanceActive. Instead, set itemTextColor to a
     * ColorStateList to make the text color stateful.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemTextAppearanceActive
     */
    public static final int BottomNavigationView_itemTextAppearanceActive=7;
    /**
     * <p>
     * @attr description
     * The text appearance to apply to the inactive navigation item labels. Setting
     * android:textColor in itemTextAppearanceInactive will take precedence over android:textColor
     * in itemTextAppearanceActive. Instead, set itemTextColor with a ColorStateList to make
     * the text color stateful.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemTextAppearanceInactive
     */
    public static final int BottomNavigationView_itemTextAppearanceInactive=8;
    /**
     * <p>
     * @attr description
     * The color to apply to the navigation items' text. Setting itemTextColor will take
     * precedence over android:textColor in itemTextAppearanceInactive or
     * itemTextAppearanceActive. Attribute type definition is in navigation package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemTextColor
     */
    public static final int BottomNavigationView_itemTextColor=9;
    /**
     * <p>
     * @attr description
     * Whether navigation items display with a label, without a label, or with a label during
     * selected state. Can also be "auto", which uses the item count to determine whether to show
     * or hide the label.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Label behaves as "labeled" when there are 3 items or less, or "selected" when there are
     * 4 items or more.</td></tr>
     * <tr><td>labeled</td><td>1</td><td>Label is shown on all navigation items.</td></tr>
     * <tr><td>selected</td><td>0</td><td>Label is shown on the selected navigation item.</td></tr>
     * <tr><td>unlabeled</td><td>2</td><td>Label is not shown on any navigation items.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:labelVisibilityMode
     */
    public static final int BottomNavigationView_labelVisibilityMode=10;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from. Attribute type definition is in
     * navigation package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:menu
     */
    public static final int BottomNavigationView_menu=11;
    /**
     * Attributes that can be used with a BottomSheetBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_backgroundTint com.kotlinbaseapplication:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_draggable com.kotlinbaseapplication:behavior_draggable}</code></td><td>Whether this bottom sheet is draggable.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_expandedOffset com.kotlinbaseapplication:behavior_expandedOffset}</code></td><td>The top offset of the BottomSheet in the expanded-state when fitsToContent is false.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_fitToContents com.kotlinbaseapplication:behavior_fitToContents}</code></td><td>Whether height of expanded sheet wraps content or not</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_halfExpandedRatio com.kotlinbaseapplication:behavior_halfExpandedRatio}</code></td><td>The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_hideable com.kotlinbaseapplication:behavior_hideable}</code></td><td>Whether this bottom sheet can be hidden by dragging it further downwards</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_peekHeight com.kotlinbaseapplication:behavior_peekHeight}</code></td><td>The height of the bottom sheet when it is collapsed.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_saveFlags com.kotlinbaseapplication:behavior_saveFlags}</code></td><td>Behavior properties will be saved and restored by evaluating each flag.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_skipCollapsed com.kotlinbaseapplication:behavior_skipCollapsed}</code></td><td>Skip the collapsed state once expanded; no effect unless it is hideable</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_gestureInsetBottomIgnored com.kotlinbaseapplication:gestureInsetBottomIgnored}</code></td><td>Sets whether this bottom sheet should adjust it's position based on the system gesture area
     * on Android Q and above.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_shapeAppearance com.kotlinbaseapplication:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_shapeAppearanceOverlay com.kotlinbaseapplication:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #BottomSheetBehavior_Layout_android_elevation
     * @see #BottomSheetBehavior_Layout_backgroundTint
     * @see #BottomSheetBehavior_Layout_behavior_draggable
     * @see #BottomSheetBehavior_Layout_behavior_expandedOffset
     * @see #BottomSheetBehavior_Layout_behavior_fitToContents
     * @see #BottomSheetBehavior_Layout_behavior_halfExpandedRatio
     * @see #BottomSheetBehavior_Layout_behavior_hideable
     * @see #BottomSheetBehavior_Layout_behavior_peekHeight
     * @see #BottomSheetBehavior_Layout_behavior_saveFlags
     * @see #BottomSheetBehavior_Layout_behavior_skipCollapsed
     * @see #BottomSheetBehavior_Layout_gestureInsetBottomIgnored
     * @see #BottomSheetBehavior_Layout_shapeAppearance
     * @see #BottomSheetBehavior_Layout_shapeAppearanceOverlay
     */
    public static final int[] BottomSheetBehavior_Layout={
      0x01010440, 0x7f030060, 0x7f030076, 0x7f030077, 
      0x7f030078, 0x7f030079, 0x7f03007a, 0x7f03007c, 
      0x7f03007d, 0x7f03007e, 0x7f030207, 0x7f030387, 
      0x7f03038a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int BottomSheetBehavior_Layout_android_elevation=0;
    /**
     * <p>
     * @attr description
     * Background color used by the BottomSheetBehavior background drawable when shape theming is
     * enabled. Accepts a ColorStateList or ColorInt. If shape theming is not enabled,
     * android:background should instead be utilized to set the background resource.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundTint
     */
    public static final int BottomSheetBehavior_Layout_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Whether this bottom sheet is draggable. If not, the app will have to supply different
     * means to expand and collapse the sheet
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:behavior_draggable
     */
    public static final int BottomSheetBehavior_Layout_behavior_draggable=2;
    /**
     * <p>
     * @attr description
     * The top offset of the BottomSheet in the expanded-state when fitsToContent is false.
     * The default value is 0, which results in the sheet matching the parent's top.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:behavior_expandedOffset
     */
    public static final int BottomSheetBehavior_Layout_behavior_expandedOffset=3;
    /**
     * <p>
     * @attr description
     * Whether height of expanded sheet wraps content or not
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:behavior_fitToContents
     */
    public static final int BottomSheetBehavior_Layout_behavior_fitToContents=4;
    /**
     * <p>
     * @attr description
     * The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false. Defaults to true half, 0.5, if not explicitly set. Ratio must be a
     * float value between 0 and 1 and produce a half-expanded state height larger than the
     * peek height for the half-expanded state to be operational
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:behavior_halfExpandedRatio
     */
    public static final int BottomSheetBehavior_Layout_behavior_halfExpandedRatio=5;
    /**
     * <p>
     * @attr description
     * Whether this bottom sheet can be hidden by dragging it further downwards
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:behavior_hideable
     */
    public static final int BottomSheetBehavior_Layout_behavior_hideable=6;
    /**
     * <p>
     * @attr description
     * The height of the bottom sheet when it is collapsed.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:behavior_peekHeight
     */
    public static final int BottomSheetBehavior_Layout_behavior_peekHeight=7;
    /**
     * <p>
     * @attr description
     * Behavior properties will be saved and restored by evaluating each flag.
     * usage: app:behavior_saveFlags=”hideable|skipCollapsed”
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>ffffffff</td><td>This flag will preserve the all the aforementioned values on configuration change.</td></tr>
     * <tr><td>fitToContents</td><td>2</td><td>This flag will preserve the fitToContents boolean value on configuration change.</td></tr>
     * <tr><td>hideable</td><td>4</td><td>This flag will preserve the hideable boolean value on configuration change.</td></tr>
     * <tr><td>none</td><td>0</td><td>This flag will not preserve the aforementioned values on configuration change. The only
     * value preserved will be the positional state, e.g. collapsed, hidden, expanded, etc.
     * This is the default behavior.</td></tr>
     * <tr><td>peekHeight</td><td>1</td><td>This flag will preserve the peekHeight on configuration change.</td></tr>
     * <tr><td>skipCollapsed</td><td>8</td><td>This flag will preserve the skipCollapsed boolean value on configuration change.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:behavior_saveFlags
     */
    public static final int BottomSheetBehavior_Layout_behavior_saveFlags=8;
    /**
     * <p>
     * @attr description
     * Skip the collapsed state once expanded; no effect unless it is hideable
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:behavior_skipCollapsed
     */
    public static final int BottomSheetBehavior_Layout_behavior_skipCollapsed=9;
    /**
     * <p>
     * @attr description
     * Sets whether this bottom sheet should adjust it's position based on the system gesture area
     * on Android Q and above. Value is false (insets respected) by default.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:gestureInsetBottomIgnored
     */
    public static final int BottomSheetBehavior_Layout_gestureInsetBottomIgnored=10;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for BottomSheet. Attribute declaration is in the shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearance
     */
    public static final int BottomSheetBehavior_Layout_shapeAppearance=11;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for BottomSheet. To be used to augment attributes
     * declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearanceOverlay
     */
    public static final int BottomSheetBehavior_Layout_shapeAppearanceOverlay=12;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.kotlinbaseapplication:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x7f030040
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a CardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CardView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardBackgroundColor com.kotlinbaseapplication:cardBackgroundColor}</code></td><td>Background color for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardCornerRadius com.kotlinbaseapplication:cardCornerRadius}</code></td><td>Corner radius for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardElevation com.kotlinbaseapplication:cardElevation}</code></td><td>Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardMaxElevation com.kotlinbaseapplication:cardMaxElevation}</code></td><td>Maximum Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardPreventCornerOverlap com.kotlinbaseapplication:cardPreventCornerOverlap}</code></td><td>Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.</td></tr>
     * <tr><td><code>{@link #CardView_cardUseCompatPadding com.kotlinbaseapplication:cardUseCompatPadding}</code></td><td>Add padding in API v21+ as well to have the same measurements with previous versions.</td></tr>
     * <tr><td><code>{@link #CardView_contentPadding com.kotlinbaseapplication:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingBottom com.kotlinbaseapplication:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingLeft com.kotlinbaseapplication:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingRight com.kotlinbaseapplication:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingTop com.kotlinbaseapplication:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * </table>
     * @see #CardView_android_minWidth
     * @see #CardView_android_minHeight
     * @see #CardView_cardBackgroundColor
     * @see #CardView_cardCornerRadius
     * @see #CardView_cardElevation
     * @see #CardView_cardMaxElevation
     * @see #CardView_cardPreventCornerOverlap
     * @see #CardView_cardUseCompatPadding
     * @see #CardView_contentPadding
     * @see #CardView_contentPaddingBottom
     * @see #CardView_contentPaddingLeft
     * @see #CardView_contentPaddingRight
     * @see #CardView_contentPaddingTop
     */
    public static final int[] CardView={
      0x0101013f, 0x01010140, 0x7f0300af, 0x7f0300b0, 
      0x7f0300b1, 0x7f0300b3, 0x7f0300b4, 0x7f0300b5, 
      0x7f030151, 0x7f030152, 0x7f030154, 0x7f030155, 
      0x7f030157
    };
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int CardView_android_minWidth=0;
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int CardView_android_minHeight=1;
    /**
     * <p>
     * @attr description
     * Background color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:cardBackgroundColor
     */
    public static final int CardView_cardBackgroundColor=2;
    /**
     * <p>
     * @attr description
     * Corner radius for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:cardCornerRadius
     */
    public static final int CardView_cardCornerRadius=3;
    /**
     * <p>
     * @attr description
     * Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:cardElevation
     */
    public static final int CardView_cardElevation=4;
    /**
     * <p>
     * @attr description
     * Maximum Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:cardMaxElevation
     */
    public static final int CardView_cardMaxElevation=5;
    /**
     * <p>
     * @attr description
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:cardPreventCornerOverlap
     */
    public static final int CardView_cardPreventCornerOverlap=6;
    /**
     * <p>
     * @attr description
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:cardUseCompatPadding
     */
    public static final int CardView_cardUseCompatPadding=7;
    /**
     * <p>
     * @attr description
     * Inner padding between the edges of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPadding
     */
    public static final int CardView_contentPadding=8;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingBottom
     */
    public static final int CardView_contentPaddingBottom=9;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingLeft
     */
    public static final int CardView_contentPaddingLeft=10;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingRight
     */
    public static final int CardView_contentPaddingRight=11;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingTop
     */
    public static final int CardView_contentPaddingTop=12;
    /**
     * Attributes that can be used with a CheckBoxPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_disableDependentsState com.kotlinbaseapplication:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOff com.kotlinbaseapplication:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOn com.kotlinbaseapplication:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * </table>
     * @see #CheckBoxPreference_android_summaryOn
     * @see #CheckBoxPreference_android_summaryOff
     * @see #CheckBoxPreference_android_disableDependentsState
     * @see #CheckBoxPreference_disableDependentsState
     * @see #CheckBoxPreference_summaryOff
     * @see #CheckBoxPreference_summaryOn
     */
    public static final int[] CheckBoxPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x7f030191, 
      0x7f0303cc, 0x7f0303cd
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int CheckBoxPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int CheckBoxPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int CheckBoxPreference_android_disableDependentsState=2;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:disableDependentsState
     */
    public static final int CheckBoxPreference_disableDependentsState=3;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:summaryOff
     */
    public static final int CheckBoxPreference_summaryOff=4;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:summaryOn
     */
    public static final int CheckBoxPreference_summaryOn=5;
    /**
     * Attributes that can be used with a Chip.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Chip_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_ellipsize android:ellipsize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIcon com.kotlinbaseapplication:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconEnabled com.kotlinbaseapplication:checkedIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_checkedIconTint com.kotlinbaseapplication:checkedIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconVisible com.kotlinbaseapplication:checkedIconVisible}</code></td><td>Whether to show the checked icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipBackgroundColor com.kotlinbaseapplication:chipBackgroundColor}</code></td><td>Background color to apply to the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipCornerRadius com.kotlinbaseapplication:chipCornerRadius}</code></td><td>Corner radius to apply to the chip's shape.</td></tr>
     * <tr><td><code>{@link #Chip_chipEndPadding com.kotlinbaseapplication:chipEndPadding}</code></td><td>Padding at the end of the chip, after the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIcon com.kotlinbaseapplication:chipIcon}</code></td><td>Icon drawable to display at the start of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconEnabled com.kotlinbaseapplication:chipIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconSize com.kotlinbaseapplication:chipIconSize}</code></td><td>Size of the chip's icon and checked icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconTint com.kotlinbaseapplication:chipIconTint}</code></td><td>Tint to apply to the chip icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconVisible com.kotlinbaseapplication:chipIconVisible}</code></td><td>Whether to show the chip icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipMinHeight com.kotlinbaseapplication:chipMinHeight}</code></td><td>Min height to apply to the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipMinTouchTargetSize com.kotlinbaseapplication:chipMinTouchTargetSize}</code></td><td>Minimum size of chip's touch target, by default, Android recommended 48dp.</td></tr>
     * <tr><td><code>{@link #Chip_chipStartPadding com.kotlinbaseapplication:chipStartPadding}</code></td><td>Padding at the start of the chip, before the icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeColor com.kotlinbaseapplication:chipStrokeColor}</code></td><td>Stroke color to apply to the chip's outline.</td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeWidth com.kotlinbaseapplication:chipStrokeWidth}</code></td><td>Stroke width to apply to the chip's outline.</td></tr>
     * <tr><td><code>{@link #Chip_chipSurfaceColor com.kotlinbaseapplication:chipSurfaceColor}</code></td><td>Do not expose publicly because there is no public getter/setter and the user doesn't need
     * to configure this.</td></tr>
     * <tr><td><code>{@link #Chip_closeIcon com.kotlinbaseapplication:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEnabled com.kotlinbaseapplication:closeIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEndPadding com.kotlinbaseapplication:closeIconEndPadding}</code></td><td>Padding at the end of the close icon, before the end of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconSize com.kotlinbaseapplication:closeIconSize}</code></td><td>Size of the chip's close icon.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconStartPadding com.kotlinbaseapplication:closeIconStartPadding}</code></td><td>Padding at the start of the close icon, after the text.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconTint com.kotlinbaseapplication:closeIconTint}</code></td><td>Tint to apply to the chip's close icon.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconVisible com.kotlinbaseapplication:closeIconVisible}</code></td><td>Whether to show the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_ensureMinTouchTargetSize com.kotlinbaseapplication:ensureMinTouchTargetSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_hideMotionSpec com.kotlinbaseapplication:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_iconEndPadding com.kotlinbaseapplication:iconEndPadding}</code></td><td>Padding at the end of the icon, before the text.</td></tr>
     * <tr><td><code>{@link #Chip_iconStartPadding com.kotlinbaseapplication:iconStartPadding}</code></td><td>Padding at the start of the icon, after the start of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_rippleColor com.kotlinbaseapplication:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_shapeAppearance com.kotlinbaseapplication:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #Chip_shapeAppearanceOverlay com.kotlinbaseapplication:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #Chip_showMotionSpec com.kotlinbaseapplication:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_textEndPadding com.kotlinbaseapplication:textEndPadding}</code></td><td>Padding at the end of the text, before the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_textStartPadding com.kotlinbaseapplication:textStartPadding}</code></td><td>Padding at the start of the text, after the icon.</td></tr>
     * </table>
     * @see #Chip_android_textAppearance
     * @see #Chip_android_textSize
     * @see #Chip_android_textColor
     * @see #Chip_android_ellipsize
     * @see #Chip_android_maxWidth
     * @see #Chip_android_text
     * @see #Chip_android_checkable
     * @see #Chip_checkedIcon
     * @see #Chip_checkedIconEnabled
     * @see #Chip_checkedIconTint
     * @see #Chip_checkedIconVisible
     * @see #Chip_chipBackgroundColor
     * @see #Chip_chipCornerRadius
     * @see #Chip_chipEndPadding
     * @see #Chip_chipIcon
     * @see #Chip_chipIconEnabled
     * @see #Chip_chipIconSize
     * @see #Chip_chipIconTint
     * @see #Chip_chipIconVisible
     * @see #Chip_chipMinHeight
     * @see #Chip_chipMinTouchTargetSize
     * @see #Chip_chipStartPadding
     * @see #Chip_chipStrokeColor
     * @see #Chip_chipStrokeWidth
     * @see #Chip_chipSurfaceColor
     * @see #Chip_closeIcon
     * @see #Chip_closeIconEnabled
     * @see #Chip_closeIconEndPadding
     * @see #Chip_closeIconSize
     * @see #Chip_closeIconStartPadding
     * @see #Chip_closeIconTint
     * @see #Chip_closeIconVisible
     * @see #Chip_ensureMinTouchTargetSize
     * @see #Chip_hideMotionSpec
     * @see #Chip_iconEndPadding
     * @see #Chip_iconStartPadding
     * @see #Chip_rippleColor
     * @see #Chip_shapeAppearance
     * @see #Chip_shapeAppearanceOverlay
     * @see #Chip_showMotionSpec
     * @see #Chip_textEndPadding
     * @see #Chip_textStartPadding
     */
    public static final int[] Chip={
      0x01010034, 0x01010095, 0x01010098, 0x010100ab, 
      0x0101011f, 0x0101014f, 0x010101e5, 0x7f0300eb, 
      0x7f0300ec, 0x7f0300ef, 0x7f0300f0, 0x7f0300f2, 
      0x7f0300f3, 0x7f0300f4, 0x7f0300f6, 0x7f0300f7, 
      0x7f0300f8, 0x7f0300f9, 0x7f0300fa, 0x7f0300fb, 
      0x7f0300fc, 0x7f030101, 0x7f030102, 0x7f030103, 
      0x7f030105, 0x7f030112, 0x7f030113, 0x7f030114, 
      0x7f030115, 0x7f030116, 0x7f030117, 0x7f030118, 
      0x7f0301bb, 0x7f030213, 0x7f030221, 0x7f030226, 
      0x7f030374, 0x7f030387, 0x7f03038a, 0x7f030391, 
      0x7f03040f, 0x7f030413
    };
    /**
     * <p>
     * @attr description
     * Default appearance of text: color, typeface, size, and style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int Chip_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * Text size. Overrides the size set in the textAppearance
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int Chip_android_textSize=1;
    /**
     * <p>
     * @attr description
     * Text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int Chip_android_textColor=2;
    /**
     * <p>
     * @attr description
     * If set, causes words that are longer than the view is wide to be ellipsized instead of
     * truncated at the end.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td></td></tr>
     * <tr><td>marquee</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:ellipsize
     */
    public static final int Chip_android_ellipsize=3;
    /**
     * <p>
     * @attr description
     * Make the Chip to be at most this many pixels wide.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int Chip_android_maxWidth=4;
    /**
     * <p>
     * @attr description
     * Text to display on the chip.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int Chip_android_text=5;
    /**
     * <p>
     * @attr description
     * Whether the chip can be checked. If false, the chip will act as a button.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int Chip_android_checkable=6;
    /**
     * <p>
     * @attr description
     * Check icon drawable to overlay the chip's icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:checkedIcon
     */
    public static final int Chip_checkedIcon=7;
    /**
     * <p>
     * @attr description
     * Deprecated. Use checkedIconVisible instead
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:checkedIconEnabled
     */
    public static final int Chip_checkedIconEnabled=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip's checked icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:checkedIconTint
     */
    public static final int Chip_checkedIconTint=9;
    /**
     * <p>
     * @attr description
     * Whether to show the checked icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:checkedIconVisible
     */
    public static final int Chip_checkedIconVisible=10;
    /**
     * <p>
     * @attr description
     * Background color to apply to the chip.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:chipBackgroundColor
     */
    public static final int Chip_chipBackgroundColor=11;
    /**
     * <p>
     * @attr description
     * Corner radius to apply to the chip's shape.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipCornerRadius
     */
    public static final int Chip_chipCornerRadius=12;
    /**
     * <p>
     * @attr description
     * Padding at the end of the chip, after the close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipEndPadding
     */
    public static final int Chip_chipEndPadding=13;
    /**
     * <p>
     * @attr description
     * Icon drawable to display at the start of the chip.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:chipIcon
     */
    public static final int Chip_chipIcon=14;
    /**
     * <p>
     * @attr description
     * Deprecated. Use chipIconVisible instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:chipIconEnabled
     */
    public static final int Chip_chipIconEnabled=15;
    /**
     * <p>
     * @attr description
     * Size of the chip's icon and checked icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipIconSize
     */
    public static final int Chip_chipIconSize=16;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:chipIconTint
     */
    public static final int Chip_chipIconTint=17;
    /**
     * <p>
     * @attr description
     * Whether to show the chip icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:chipIconVisible
     */
    public static final int Chip_chipIconVisible=18;
    /**
     * <p>
     * @attr description
     * Min height to apply to the chip. Total height includes stroke width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipMinHeight
     */
    public static final int Chip_chipMinHeight=19;
    /**
     * <p>
     * @attr description
     * Minimum size of chip's touch target, by default, Android recommended 48dp.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipMinTouchTargetSize
     */
    public static final int Chip_chipMinTouchTargetSize=20;
    /**
     * <p>
     * @attr description
     * Padding at the start of the chip, before the icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipStartPadding
     */
    public static final int Chip_chipStartPadding=21;
    /**
     * <p>
     * @attr description
     * Stroke color to apply to the chip's outline.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:chipStrokeColor
     */
    public static final int Chip_chipStrokeColor=22;
    /**
     * <p>
     * @attr description
     * Stroke width to apply to the chip's outline.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipStrokeWidth
     */
    public static final int Chip_chipStrokeWidth=23;
    /**
     * <p>
     * @attr description
     * Do not expose publicly because there is no public getter/setter and the user doesn't need
     * to configure this.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:chipSurfaceColor
     */
    public static final int Chip_chipSurfaceColor=24;
    /**
     * <p>
     * @attr description
     * Close icon drawable to display at the end of the chip.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:closeIcon
     */
    public static final int Chip_closeIcon=25;
    /**
     * <p>
     * @attr description
     * Deprecated. Use closeIconVisible instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:closeIconEnabled
     */
    public static final int Chip_closeIconEnabled=26;
    /**
     * <p>
     * @attr description
     * Padding at the end of the close icon, before the end of the chip. If close icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:closeIconEndPadding
     */
    public static final int Chip_closeIconEndPadding=27;
    /**
     * <p>
     * @attr description
     * Size of the chip's close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:closeIconSize
     */
    public static final int Chip_closeIconSize=28;
    /**
     * <p>
     * @attr description
     * Padding at the start of the close icon, after the text. If close icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:closeIconStartPadding
     */
    public static final int Chip_closeIconStartPadding=29;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip's close icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:closeIconTint
     */
    public static final int Chip_closeIconTint=30;
    /**
     * <p>
     * @attr description
     * Whether to show the close icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:closeIconVisible
     */
    public static final int Chip_closeIconVisible=31;
    /**
     * <p>
     * @attr description
     * Whether to extend the bounds of chip to meet chipMinTouchTargetSize.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ensureMinTouchTargetSize
     */
    public static final int Chip_ensureMinTouchTargetSize=32;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:hideMotionSpec
     */
    public static final int Chip_hideMotionSpec=33;
    /**
     * <p>
     * @attr description
     * Padding at the end of the icon, before the text. If icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:iconEndPadding
     */
    public static final int Chip_iconEndPadding=34;
    /**
     * <p>
     * @attr description
     * Padding at the start of the icon, after the start of the chip. If icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:iconStartPadding
     */
    public static final int Chip_iconStartPadding=35;
    /**
     * <p>
     * @attr description
     * Ripple color to apply to the chip.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:rippleColor
     */
    public static final int Chip_rippleColor=36;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for Chip. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearance
     */
    public static final int Chip_shapeAppearance=37;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for Chip. To be used to augment attributes
     * declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearanceOverlay
     */
    public static final int Chip_shapeAppearanceOverlay=38;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:showMotionSpec
     */
    public static final int Chip_showMotionSpec=39;
    /**
     * <p>
     * @attr description
     * Padding at the end of the text, before the close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:textEndPadding
     */
    public static final int Chip_textEndPadding=40;
    /**
     * <p>
     * @attr description
     * Padding at the start of the text, after the icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:textStartPadding
     */
    public static final int Chip_textStartPadding=41;
    /**
     * Attributes that can be used with a ChipGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChipGroup_checkedChip com.kotlinbaseapplication:checkedChip}</code></td><td>The id of the child chip that should be checked by default within this chip group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacing com.kotlinbaseapplication:chipSpacing}</code></td><td>Horizontal and vertical spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingHorizontal com.kotlinbaseapplication:chipSpacingHorizontal}</code></td><td>Horizontal spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingVertical com.kotlinbaseapplication:chipSpacingVertical}</code></td><td>Vertical spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_selectionRequired com.kotlinbaseapplication:selectionRequired}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_singleLine com.kotlinbaseapplication:singleLine}</code></td><td>Constrains the chips in this group to a single horizontal line.</td></tr>
     * <tr><td><code>{@link #ChipGroup_singleSelection com.kotlinbaseapplication:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #ChipGroup_checkedChip
     * @see #ChipGroup_chipSpacing
     * @see #ChipGroup_chipSpacingHorizontal
     * @see #ChipGroup_chipSpacingVertical
     * @see #ChipGroup_selectionRequired
     * @see #ChipGroup_singleLine
     * @see #ChipGroup_singleSelection
     */
    public static final int[] ChipGroup={
      0x7f0300ea, 0x7f0300fd, 0x7f0300fe, 0x7f0300ff, 
      0x7f030385, 0x7f030398, 0x7f03039a
    };
    /**
     * <p>
     * @attr description
     * The id of the child chip that should be checked by default within this chip group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:checkedChip
     */
    public static final int ChipGroup_checkedChip=0;
    /**
     * <p>
     * @attr description
     * Horizontal and vertical spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipSpacing
     */
    public static final int ChipGroup_chipSpacing=1;
    /**
     * <p>
     * @attr description
     * Horizontal spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipSpacingHorizontal
     */
    public static final int ChipGroup_chipSpacingHorizontal=2;
    /**
     * <p>
     * @attr description
     * Vertical spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:chipSpacingVertical
     */
    public static final int ChipGroup_chipSpacingVertical=3;
    /**
     * <p>
     * @attr description
     * Whether we prevent all child chips from being deselected.
     * It's false by default.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:selectionRequired
     */
    public static final int ChipGroup_selectionRequired=4;
    /**
     * <p>
     * @attr description
     * Constrains the chips in this group to a single horizontal line. By default, this is false
     * and the chips in this group will reflow to multiple lines.
     * If you set this to true, you'll usually want to wrap this ChipGroup in a
     * HorizontalScrollView.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:singleLine
     */
    public static final int ChipGroup_singleLine=5;
    /**
     * <p>
     * @attr description
     * Whether only a single chip in this group is allowed to be checked at any time. By default,
     * this is false and multiple chips in this group are allowed to be checked at once.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:singleSelection
     */
    public static final int ChipGroup_singleSelection=6;
    /**
     * Attributes that can be used with a CircleImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CircleImageView_civ_border_color com.kotlinbaseapplication:civ_border_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleImageView_civ_border_overlay com.kotlinbaseapplication:civ_border_overlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleImageView_civ_border_width com.kotlinbaseapplication:civ_border_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleImageView_civ_circle_background_color com.kotlinbaseapplication:civ_circle_background_color}</code></td><td></td></tr>
     * </table>
     * @see #CircleImageView_civ_border_color
     * @see #CircleImageView_civ_border_overlay
     * @see #CircleImageView_civ_border_width
     * @see #CircleImageView_civ_circle_background_color
     */
    public static final int[] CircleImageView={
      0x7f030109, 0x7f03010a, 0x7f03010b, 0x7f03010c
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#civ_border_color}
     * attribute's value can be found in the {@link #CircleImageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:civ_border_color
     */
    public static final int CircleImageView_civ_border_color=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#civ_border_overlay}
     * attribute's value can be found in the {@link #CircleImageView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:civ_border_overlay
     */
    public static final int CircleImageView_civ_border_overlay=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#civ_border_width}
     * attribute's value can be found in the {@link #CircleImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:civ_border_width
     */
    public static final int CircleImageView_civ_border_width=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#civ_circle_background_color}
     * attribute's value can be found in the {@link #CircleImageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:civ_circle_background_color
     */
    public static final int CircleImageView_civ_circle_background_color=3;
    /**
     * Attributes that can be used with a CircularProgressIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CircularProgressIndicator_indicatorDirectionCircular com.kotlinbaseapplication:indicatorDirectionCircular}</code></td><td>The direction in which the circular indicator progresses, in the
     * determinate mode, and is animated, in the indeterminate mode.</td></tr>
     * <tr><td><code>{@link #CircularProgressIndicator_indicatorInset com.kotlinbaseapplication:indicatorInset}</code></td><td>The extra space from the outer edge of the indicator to the edge of the
     * canvas.</td></tr>
     * <tr><td><code>{@link #CircularProgressIndicator_indicatorSize com.kotlinbaseapplication:indicatorSize}</code></td><td>Defines the size (outer diameter) of the circular progress indicator.</td></tr>
     * </table>
     * @see #CircularProgressIndicator_indicatorDirectionCircular
     * @see #CircularProgressIndicator_indicatorInset
     * @see #CircularProgressIndicator_indicatorSize
     */
    public static final int[] CircularProgressIndicator={
      0x7f030230, 0x7f030232, 0x7f030233
    };
    /**
     * <p>
     * @attr description
     * The direction in which the circular indicator progresses, in the
     * determinate mode, and is animated, in the indeterminate mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clockwise</td><td>0</td><td>In the indeterminate mode, the spinner will spin clockwise; in the
     * determinate mode, the indicator will progress from the top (12 o'clock)
     * clockwise.</td></tr>
     * <tr><td>counterclockwise</td><td>1</td><td>In the indeterminate mode, the spinner will spin counter-clockwise; in
     * the determinate mode, the indicator will progress from the top (12
     * o'clock) counter-clockwise.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:indicatorDirectionCircular
     */
    public static final int CircularProgressIndicator_indicatorDirectionCircular=0;
    /**
     * <p>
     * @attr description
     * The extra space from the outer edge of the indicator to the edge of the
     * canvas. Ignored for linear progress indicator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:indicatorInset
     */
    public static final int CircularProgressIndicator_indicatorInset=1;
    /**
     * <p>
     * @attr description
     * Defines the size (outer diameter) of the circular progress indicator. This
     * uses the central line of the indicator as reference. Ignored for linear
     * progress indicator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:indicatorSize
     */
    public static final int CircularProgressIndicator_indicatorSize=2;
    /**
     * Attributes that can be used with a ClockFaceView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ClockFaceView_clockFaceBackgroundColor com.kotlinbaseapplication:clockFaceBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ClockFaceView_clockNumberTextColor com.kotlinbaseapplication:clockNumberTextColor}</code></td><td></td></tr>
     * </table>
     * @see #ClockFaceView_clockFaceBackgroundColor
     * @see #ClockFaceView_clockNumberTextColor
     */
    public static final int[] ClockFaceView={
      0x7f03010e, 0x7f030111
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#clockFaceBackgroundColor}
     * attribute's value can be found in the {@link #ClockFaceView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:clockFaceBackgroundColor
     */
    public static final int ClockFaceView_clockFaceBackgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#clockNumberTextColor}
     * attribute's value can be found in the {@link #ClockFaceView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:clockNumberTextColor
     */
    public static final int ClockFaceView_clockNumberTextColor=1;
    /**
     * Attributes that can be used with a ClockHandView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ClockHandView_clockHandColor com.kotlinbaseapplication:clockHandColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ClockHandView_materialCircleRadius com.kotlinbaseapplication:materialCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ClockHandView_selectorSize com.kotlinbaseapplication:selectorSize}</code></td><td></td></tr>
     * </table>
     * @see #ClockHandView_clockHandColor
     * @see #ClockHandView_materialCircleRadius
     * @see #ClockHandView_selectorSize
     */
    public static final int[] ClockHandView={
      0x7f03010f, 0x7f0302d4, 0x7f030386
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#clockHandColor}
     * attribute's value can be found in the {@link #ClockHandView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:clockHandColor
     */
    public static final int ClockHandView_clockHandColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#materialCircleRadius}
     * attribute's value can be found in the {@link #ClockHandView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:materialCircleRadius
     */
    public static final int ClockHandView_materialCircleRadius=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#selectorSize}
     * attribute's value can be found in the {@link #ClockHandView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:selectorSize
     */
    public static final int ClockHandView_selectorSize=2;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleGravity com.kotlinbaseapplication:collapsedTitleGravity}</code></td><td>Specifies how the title should be positioned when collapsed.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleTextAppearance com.kotlinbaseapplication:collapsedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_contentScrim com.kotlinbaseapplication:contentScrim}</code></td><td>The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleGravity com.kotlinbaseapplication:expandedTitleGravity}</code></td><td>Specifies how the title should be positioned when expanded.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMargin com.kotlinbaseapplication:expandedTitleMargin}</code></td><td>Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginBottom com.kotlinbaseapplication:expandedTitleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginEnd com.kotlinbaseapplication:expandedTitleMarginEnd}</code></td><td>Specifies extra space on the end side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginStart com.kotlinbaseapplication:expandedTitleMarginStart}</code></td><td>Specifies extra space on the start side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginTop com.kotlinbaseapplication:expandedTitleMarginTop}</code></td><td>Specifies extra space on the top side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleTextAppearance com.kotlinbaseapplication:expandedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_maxLines com.kotlinbaseapplication:maxLines}</code></td><td>The maximum number of lines to display in the expanded state.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimAnimationDuration com.kotlinbaseapplication:scrimAnimationDuration}</code></td><td>Specifies the duration used for scrim visibility animations.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimVisibleHeightTrigger com.kotlinbaseapplication:scrimVisibleHeightTrigger}</code></td><td>Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_statusBarScrim com.kotlinbaseapplication:statusBarScrim}</code></td><td>The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_title com.kotlinbaseapplication:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_titleEnabled com.kotlinbaseapplication:titleEnabled}</code></td><td>Whether the CollapsingToolbarLayout should draw its own shrinking/growing title.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_toolbarId com.kotlinbaseapplication:toolbarId}</code></td><td>The id of the primary Toolbar child that you wish to use for the purpose of collapsing.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_collapsedTitleGravity
     * @see #CollapsingToolbarLayout_collapsedTitleTextAppearance
     * @see #CollapsingToolbarLayout_contentScrim
     * @see #CollapsingToolbarLayout_expandedTitleGravity
     * @see #CollapsingToolbarLayout_expandedTitleMargin
     * @see #CollapsingToolbarLayout_expandedTitleMarginBottom
     * @see #CollapsingToolbarLayout_expandedTitleMarginEnd
     * @see #CollapsingToolbarLayout_expandedTitleMarginStart
     * @see #CollapsingToolbarLayout_expandedTitleMarginTop
     * @see #CollapsingToolbarLayout_expandedTitleTextAppearance
     * @see #CollapsingToolbarLayout_maxLines
     * @see #CollapsingToolbarLayout_scrimAnimationDuration
     * @see #CollapsingToolbarLayout_scrimVisibleHeightTrigger
     * @see #CollapsingToolbarLayout_statusBarScrim
     * @see #CollapsingToolbarLayout_title
     * @see #CollapsingToolbarLayout_titleEnabled
     * @see #CollapsingToolbarLayout_toolbarId
     */
    public static final int[] CollapsingToolbarLayout={
      0x7f03011d, 0x7f03011e, 0x7f030158, 0x7f0301ca, 
      0x7f0301cb, 0x7f0301cc, 0x7f0301cd, 0x7f0301ce, 
      0x7f0301cf, 0x7f0301d0, 0x7f0302df, 0x7f030379, 
      0x7f03037b, 0x7f0303be, 0x7f030429, 0x7f03042a, 
      0x7f030435
    };
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when collapsed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:collapsedTitleGravity
     */
    public static final int CollapsingToolbarLayout_collapsedTitleGravity=0;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:collapsedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_collapsedTitleTextAppearance=1;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:contentScrim
     */
    public static final int CollapsingToolbarLayout_contentScrim=2;
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when expanded.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:expandedTitleGravity
     */
    public static final int CollapsingToolbarLayout_expandedTitleGravity=3;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:expandedTitleMargin
     */
    public static final int CollapsingToolbarLayout_expandedTitleMargin=4;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:expandedTitleMarginBottom
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginBottom=5;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:expandedTitleMarginEnd
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginEnd=6;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:expandedTitleMarginStart
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginStart=7;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:expandedTitleMarginTop
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginTop=8;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:expandedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_expandedTitleTextAppearance=9;
    /**
     * <p>
     * @attr description
     * The maximum number of lines to display in the expanded state. Experimental Feature.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:maxLines
     */
    public static final int CollapsingToolbarLayout_maxLines=10;
    /**
     * <p>
     * @attr description
     * Specifies the duration used for scrim visibility animations.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:scrimAnimationDuration
     */
    public static final int CollapsingToolbarLayout_scrimAnimationDuration=11;
    /**
     * <p>
     * @attr description
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:scrimVisibleHeightTrigger
     */
    public static final int CollapsingToolbarLayout_scrimVisibleHeightTrigger=12;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop when used together with android:fitSystemWindows="true".
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:statusBarScrim
     */
    public static final int CollapsingToolbarLayout_statusBarScrim=13;
    /**
     * <p>
     * @attr description
     * The title to show when titleEnabled is set to true.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:title
     */
    public static final int CollapsingToolbarLayout_title=14;
    /**
     * <p>
     * @attr description
     * Whether the CollapsingToolbarLayout should draw its own shrinking/growing title.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:titleEnabled
     */
    public static final int CollapsingToolbarLayout_titleEnabled=15;
    /**
     * <p>
     * @attr description
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:toolbarId
     */
    public static final int CollapsingToolbarLayout_toolbarId=16;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseMode com.kotlinbaseapplication:layout_collapseMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier com.kotlinbaseapplication:layout_collapseParallaxMultiplier}</code></td><td>The multiplier used when layout_collapseMode is set to 'parallax'.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_Layout_layout_collapseMode
     * @see #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier
     */
    public static final int[] CollapsingToolbarLayout_Layout={
      0x7f030269, 0x7f03026a
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_collapseMode}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_collapseMode
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseMode=0;
    /**
     * <p>
     * @attr description
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_collapseParallaxMultiplier
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.kotlinbaseapplication:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f030041
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonCompat com.kotlinbaseapplication:buttonCompat}</code></td><td>Compat attr to load backported drawable types</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.kotlinbaseapplication:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.kotlinbaseapplication:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonCompat
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x7f03009e, 0x7f0300a5, 0x7f0300a6
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Compat attr to load backported drawable types
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonCompat
     */
    public static final int CompoundButton_buttonCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonTint
     */
    public static final int CompoundButton_buttonTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=3;
    /**
     * Attributes that can be used with a Constraint.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Constraint_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_animate_relativeTo com.kotlinbaseapplication:animate_relativeTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_barrierAllowsGoneWidgets com.kotlinbaseapplication:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_barrierDirection com.kotlinbaseapplication:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_barrierMargin com.kotlinbaseapplication:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_chainUseRtl com.kotlinbaseapplication:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_constraint_referenced_ids com.kotlinbaseapplication:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_drawPath com.kotlinbaseapplication:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstHorizontalBias com.kotlinbaseapplication:flow_firstHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstHorizontalStyle com.kotlinbaseapplication:flow_firstHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstVerticalBias com.kotlinbaseapplication:flow_firstVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstVerticalStyle com.kotlinbaseapplication:flow_firstVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalAlign com.kotlinbaseapplication:flow_horizontalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalBias com.kotlinbaseapplication:flow_horizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalGap com.kotlinbaseapplication:flow_horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalStyle com.kotlinbaseapplication:flow_horizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastHorizontalBias com.kotlinbaseapplication:flow_lastHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastHorizontalStyle com.kotlinbaseapplication:flow_lastHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastVerticalBias com.kotlinbaseapplication:flow_lastVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastVerticalStyle com.kotlinbaseapplication:flow_lastVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_maxElementsWrap com.kotlinbaseapplication:flow_maxElementsWrap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalAlign com.kotlinbaseapplication:flow_verticalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalBias com.kotlinbaseapplication:flow_verticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalGap com.kotlinbaseapplication:flow_verticalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalStyle com.kotlinbaseapplication:flow_verticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_wrapMode com.kotlinbaseapplication:flow_wrapMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constrainedHeight com.kotlinbaseapplication:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constrainedWidth com.kotlinbaseapplication:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBaseline_creator com.kotlinbaseapplication:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBaseline_toBaselineOf com.kotlinbaseapplication:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBottom_creator com.kotlinbaseapplication:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBottom_toBottomOf com.kotlinbaseapplication:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBottom_toTopOf com.kotlinbaseapplication:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintCircle com.kotlinbaseapplication:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintCircleAngle com.kotlinbaseapplication:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintCircleRadius com.kotlinbaseapplication:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintDimensionRatio com.kotlinbaseapplication:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintEnd_toEndOf com.kotlinbaseapplication:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintEnd_toStartOf com.kotlinbaseapplication:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintGuide_begin com.kotlinbaseapplication:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintGuide_end com.kotlinbaseapplication:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintGuide_percent com.kotlinbaseapplication:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_default com.kotlinbaseapplication:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_max com.kotlinbaseapplication:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_min com.kotlinbaseapplication:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_percent com.kotlinbaseapplication:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHorizontal_bias com.kotlinbaseapplication:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHorizontal_chainStyle com.kotlinbaseapplication:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHorizontal_weight com.kotlinbaseapplication:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintLeft_creator com.kotlinbaseapplication:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintLeft_toLeftOf com.kotlinbaseapplication:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintLeft_toRightOf com.kotlinbaseapplication:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintRight_creator com.kotlinbaseapplication:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintRight_toLeftOf com.kotlinbaseapplication:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintRight_toRightOf com.kotlinbaseapplication:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintStart_toEndOf com.kotlinbaseapplication:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintStart_toStartOf com.kotlinbaseapplication:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTag com.kotlinbaseapplication:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTop_creator com.kotlinbaseapplication:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTop_toBottomOf com.kotlinbaseapplication:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTop_toTopOf com.kotlinbaseapplication:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintVertical_bias com.kotlinbaseapplication:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintVertical_chainStyle com.kotlinbaseapplication:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintVertical_weight com.kotlinbaseapplication:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_default com.kotlinbaseapplication:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_max com.kotlinbaseapplication:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_min com.kotlinbaseapplication:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_percent com.kotlinbaseapplication:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_editor_absoluteX com.kotlinbaseapplication:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_editor_absoluteY com.kotlinbaseapplication:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginBottom com.kotlinbaseapplication:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginEnd com.kotlinbaseapplication:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginLeft com.kotlinbaseapplication:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginRight com.kotlinbaseapplication:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginStart com.kotlinbaseapplication:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginTop com.kotlinbaseapplication:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_motionProgress com.kotlinbaseapplication:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_motionStagger com.kotlinbaseapplication:motionStagger}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_pathMotionArc com.kotlinbaseapplication:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_pivotAnchor com.kotlinbaseapplication:pivotAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_transitionEasing com.kotlinbaseapplication:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_transitionPathRotate com.kotlinbaseapplication:transitionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_visibilityMode com.kotlinbaseapplication:visibilityMode}</code></td><td></td></tr>
     * </table>
     * @see #Constraint_android_orientation
     * @see #Constraint_android_id
     * @see #Constraint_android_visibility
     * @see #Constraint_android_layout_width
     * @see #Constraint_android_layout_height
     * @see #Constraint_android_layout_marginLeft
     * @see #Constraint_android_layout_marginTop
     * @see #Constraint_android_layout_marginRight
     * @see #Constraint_android_layout_marginBottom
     * @see #Constraint_android_maxWidth
     * @see #Constraint_android_maxHeight
     * @see #Constraint_android_minWidth
     * @see #Constraint_android_minHeight
     * @see #Constraint_android_alpha
     * @see #Constraint_android_transformPivotX
     * @see #Constraint_android_transformPivotY
     * @see #Constraint_android_translationX
     * @see #Constraint_android_translationY
     * @see #Constraint_android_scaleX
     * @see #Constraint_android_scaleY
     * @see #Constraint_android_rotation
     * @see #Constraint_android_rotationX
     * @see #Constraint_android_rotationY
     * @see #Constraint_android_layout_marginStart
     * @see #Constraint_android_layout_marginEnd
     * @see #Constraint_android_translationZ
     * @see #Constraint_android_elevation
     * @see #Constraint_animate_relativeTo
     * @see #Constraint_barrierAllowsGoneWidgets
     * @see #Constraint_barrierDirection
     * @see #Constraint_barrierMargin
     * @see #Constraint_chainUseRtl
     * @see #Constraint_constraint_referenced_ids
     * @see #Constraint_drawPath
     * @see #Constraint_flow_firstHorizontalBias
     * @see #Constraint_flow_firstHorizontalStyle
     * @see #Constraint_flow_firstVerticalBias
     * @see #Constraint_flow_firstVerticalStyle
     * @see #Constraint_flow_horizontalAlign
     * @see #Constraint_flow_horizontalBias
     * @see #Constraint_flow_horizontalGap
     * @see #Constraint_flow_horizontalStyle
     * @see #Constraint_flow_lastHorizontalBias
     * @see #Constraint_flow_lastHorizontalStyle
     * @see #Constraint_flow_lastVerticalBias
     * @see #Constraint_flow_lastVerticalStyle
     * @see #Constraint_flow_maxElementsWrap
     * @see #Constraint_flow_verticalAlign
     * @see #Constraint_flow_verticalBias
     * @see #Constraint_flow_verticalGap
     * @see #Constraint_flow_verticalStyle
     * @see #Constraint_flow_wrapMode
     * @see #Constraint_layout_constrainedHeight
     * @see #Constraint_layout_constrainedWidth
     * @see #Constraint_layout_constraintBaseline_creator
     * @see #Constraint_layout_constraintBaseline_toBaselineOf
     * @see #Constraint_layout_constraintBottom_creator
     * @see #Constraint_layout_constraintBottom_toBottomOf
     * @see #Constraint_layout_constraintBottom_toTopOf
     * @see #Constraint_layout_constraintCircle
     * @see #Constraint_layout_constraintCircleAngle
     * @see #Constraint_layout_constraintCircleRadius
     * @see #Constraint_layout_constraintDimensionRatio
     * @see #Constraint_layout_constraintEnd_toEndOf
     * @see #Constraint_layout_constraintEnd_toStartOf
     * @see #Constraint_layout_constraintGuide_begin
     * @see #Constraint_layout_constraintGuide_end
     * @see #Constraint_layout_constraintGuide_percent
     * @see #Constraint_layout_constraintHeight_default
     * @see #Constraint_layout_constraintHeight_max
     * @see #Constraint_layout_constraintHeight_min
     * @see #Constraint_layout_constraintHeight_percent
     * @see #Constraint_layout_constraintHorizontal_bias
     * @see #Constraint_layout_constraintHorizontal_chainStyle
     * @see #Constraint_layout_constraintHorizontal_weight
     * @see #Constraint_layout_constraintLeft_creator
     * @see #Constraint_layout_constraintLeft_toLeftOf
     * @see #Constraint_layout_constraintLeft_toRightOf
     * @see #Constraint_layout_constraintRight_creator
     * @see #Constraint_layout_constraintRight_toLeftOf
     * @see #Constraint_layout_constraintRight_toRightOf
     * @see #Constraint_layout_constraintStart_toEndOf
     * @see #Constraint_layout_constraintStart_toStartOf
     * @see #Constraint_layout_constraintTag
     * @see #Constraint_layout_constraintTop_creator
     * @see #Constraint_layout_constraintTop_toBottomOf
     * @see #Constraint_layout_constraintTop_toTopOf
     * @see #Constraint_layout_constraintVertical_bias
     * @see #Constraint_layout_constraintVertical_chainStyle
     * @see #Constraint_layout_constraintVertical_weight
     * @see #Constraint_layout_constraintWidth_default
     * @see #Constraint_layout_constraintWidth_max
     * @see #Constraint_layout_constraintWidth_min
     * @see #Constraint_layout_constraintWidth_percent
     * @see #Constraint_layout_editor_absoluteX
     * @see #Constraint_layout_editor_absoluteY
     * @see #Constraint_layout_goneMarginBottom
     * @see #Constraint_layout_goneMarginEnd
     * @see #Constraint_layout_goneMarginLeft
     * @see #Constraint_layout_goneMarginRight
     * @see #Constraint_layout_goneMarginStart
     * @see #Constraint_layout_goneMarginTop
     * @see #Constraint_motionProgress
     * @see #Constraint_motionStagger
     * @see #Constraint_pathMotionArc
     * @see #Constraint_pivotAnchor
     * @see #Constraint_transitionEasing
     * @see #Constraint_transitionPathRotate
     * @see #Constraint_visibilityMode
     */
    public static final int[] Constraint={
      0x010100c4, 0x010100d0, 0x010100dc, 0x010100f4, 
      0x010100f5, 0x010100f7, 0x010100f8, 0x010100f9, 
      0x010100fa, 0x0101011f, 0x01010120, 0x0101013f, 
      0x01010140, 0x0101031f, 0x01010320, 0x01010321, 
      0x01010322, 0x01010323, 0x01010324, 0x01010325, 
      0x01010326, 0x01010327, 0x01010328, 0x010103b5, 
      0x010103b6, 0x010103fa, 0x01010440, 0x7f030046, 
      0x7f030071, 0x7f030072, 0x7f030073, 0x7f0300e6, 
      0x7f030147, 0x7f03019a, 0x7f0301e5, 0x7f0301e6, 
      0x7f0301e7, 0x7f0301e8, 0x7f0301e9, 0x7f0301ea, 
      0x7f0301eb, 0x7f0301ec, 0x7f0301ed, 0x7f0301ee, 
      0x7f0301ef, 0x7f0301f0, 0x7f0301f1, 0x7f0301f3, 
      0x7f0301f4, 0x7f0301f5, 0x7f0301f6, 0x7f0301f7, 
      0x7f03026b, 0x7f03026c, 0x7f03026d, 0x7f03026e, 
      0x7f03026f, 0x7f030270, 0x7f030271, 0x7f030272, 
      0x7f030273, 0x7f030274, 0x7f030275, 0x7f030276, 
      0x7f030277, 0x7f030278, 0x7f030279, 0x7f03027a, 
      0x7f03027b, 0x7f03027c, 0x7f03027d, 0x7f03027e, 
      0x7f03027f, 0x7f030280, 0x7f030281, 0x7f030282, 
      0x7f030283, 0x7f030284, 0x7f030285, 0x7f030286, 
      0x7f030287, 0x7f030288, 0x7f030289, 0x7f03028a, 
      0x7f03028b, 0x7f03028c, 0x7f03028d, 0x7f03028e, 
      0x7f03028f, 0x7f030290, 0x7f030291, 0x7f030292, 
      0x7f030293, 0x7f030294, 0x7f030296, 0x7f030297, 
      0x7f030298, 0x7f030299, 0x7f03029a, 0x7f03029b, 
      0x7f03029c, 0x7f03029d, 0x7f0302f3, 0x7f0302f4, 
      0x7f03033f, 0x7f030347, 0x7f030449, 0x7f03044b, 
      0x7f030472
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int Constraint_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Constraint_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static final int Constraint_android_visibility=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int Constraint_android_layout_width=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int Constraint_android_layout_height=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static final int Constraint_android_layout_marginLeft=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static final int Constraint_android_layout_marginTop=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static final int Constraint_android_layout_marginRight=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static final int Constraint_android_layout_marginBottom=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int Constraint_android_maxWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int Constraint_android_maxHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int Constraint_android_minWidth=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Constraint_android_minHeight=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int Constraint_android_alpha=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static final int Constraint_android_transformPivotX=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static final int Constraint_android_transformPivotY=15;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int Constraint_android_translationX=16;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int Constraint_android_translationY=17;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int Constraint_android_scaleX=18;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int Constraint_android_scaleY=19;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int Constraint_android_rotation=20;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int Constraint_android_rotationX=21;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int Constraint_android_rotationY=22;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static final int Constraint_android_layout_marginStart=23;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static final int Constraint_android_layout_marginEnd=24;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int Constraint_android_translationZ=25;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int Constraint_android_elevation=26;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#animate_relativeTo}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:animate_relativeTo
     */
    public static final int Constraint_animate_relativeTo=27;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:barrierAllowsGoneWidgets
     */
    public static final int Constraint_barrierAllowsGoneWidgets=28;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:barrierDirection
     */
    public static final int Constraint_barrierDirection=29;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:barrierMargin
     */
    public static final int Constraint_barrierMargin=30;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:chainUseRtl
     */
    public static final int Constraint_chainUseRtl=31;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:constraint_referenced_ids
     */
    public static final int Constraint_constraint_referenced_ids=32;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#drawPath}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:drawPath
     */
    public static final int Constraint_drawPath=33;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstHorizontalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_firstHorizontalBias
     */
    public static final int Constraint_flow_firstHorizontalBias=34;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstHorizontalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_firstHorizontalStyle
     */
    public static final int Constraint_flow_firstHorizontalStyle=35;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstVerticalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_firstVerticalBias
     */
    public static final int Constraint_flow_firstVerticalBias=36;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstVerticalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_firstVerticalStyle
     */
    public static final int Constraint_flow_firstVerticalStyle=37;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalAlign}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalAlign
     */
    public static final int Constraint_flow_horizontalAlign=38;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalBias
     */
    public static final int Constraint_flow_horizontalBias=39;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalGap}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalGap
     */
    public static final int Constraint_flow_horizontalGap=40;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalStyle
     */
    public static final int Constraint_flow_horizontalStyle=41;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastHorizontalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_lastHorizontalBias
     */
    public static final int Constraint_flow_lastHorizontalBias=42;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastHorizontalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_lastHorizontalStyle
     */
    public static final int Constraint_flow_lastHorizontalStyle=43;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastVerticalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_lastVerticalBias
     */
    public static final int Constraint_flow_lastVerticalBias=44;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastVerticalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_lastVerticalStyle
     */
    public static final int Constraint_flow_lastVerticalStyle=45;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_maxElementsWrap}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_maxElementsWrap
     */
    public static final int Constraint_flow_maxElementsWrap=46;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalAlign}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_verticalAlign
     */
    public static final int Constraint_flow_verticalAlign=47;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_verticalBias
     */
    public static final int Constraint_flow_verticalBias=48;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalGap}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:flow_verticalGap
     */
    public static final int Constraint_flow_verticalGap=49;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_verticalStyle
     */
    public static final int Constraint_flow_verticalStyle=50;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_wrapMode}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_wrapMode
     */
    public static final int Constraint_flow_wrapMode=51;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constrainedHeight
     */
    public static final int Constraint_layout_constrainedHeight=52;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constrainedWidth
     */
    public static final int Constraint_layout_constrainedWidth=53;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBaseline_creator
     */
    public static final int Constraint_layout_constraintBaseline_creator=54;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBaseline_toBaselineOf
     */
    public static final int Constraint_layout_constraintBaseline_toBaselineOf=55;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_creator
     */
    public static final int Constraint_layout_constraintBottom_creator=56;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_toBottomOf
     */
    public static final int Constraint_layout_constraintBottom_toBottomOf=57;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_toTopOf
     */
    public static final int Constraint_layout_constraintBottom_toTopOf=58;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircle
     */
    public static final int Constraint_layout_constraintCircle=59;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircleAngle
     */
    public static final int Constraint_layout_constraintCircleAngle=60;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircleRadius
     */
    public static final int Constraint_layout_constraintCircleRadius=61;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layout_constraintDimensionRatio
     */
    public static final int Constraint_layout_constraintDimensionRatio=62;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintEnd_toEndOf
     */
    public static final int Constraint_layout_constraintEnd_toEndOf=63;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintEnd_toStartOf
     */
    public static final int Constraint_layout_constraintEnd_toStartOf=64;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_begin
     */
    public static final int Constraint_layout_constraintGuide_begin=65;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_end
     */
    public static final int Constraint_layout_constraintGuide_end=66;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_percent
     */
    public static final int Constraint_layout_constraintGuide_percent=67;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_default
     */
    public static final int Constraint_layout_constraintHeight_default=68;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_max
     */
    public static final int Constraint_layout_constraintHeight_max=69;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_min
     */
    public static final int Constraint_layout_constraintHeight_min=70;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_percent
     */
    public static final int Constraint_layout_constraintHeight_percent=71;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_bias
     */
    public static final int Constraint_layout_constraintHorizontal_bias=72;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_chainStyle
     */
    public static final int Constraint_layout_constraintHorizontal_chainStyle=73;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_weight
     */
    public static final int Constraint_layout_constraintHorizontal_weight=74;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_creator
     */
    public static final int Constraint_layout_constraintLeft_creator=75;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_toLeftOf
     */
    public static final int Constraint_layout_constraintLeft_toLeftOf=76;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_toRightOf
     */
    public static final int Constraint_layout_constraintLeft_toRightOf=77;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_creator
     */
    public static final int Constraint_layout_constraintRight_creator=78;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_toLeftOf
     */
    public static final int Constraint_layout_constraintRight_toLeftOf=79;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_toRightOf
     */
    public static final int Constraint_layout_constraintRight_toRightOf=80;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintStart_toEndOf
     */
    public static final int Constraint_layout_constraintStart_toEndOf=81;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintStart_toStartOf
     */
    public static final int Constraint_layout_constraintStart_toStartOf=82;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTag
     */
    public static final int Constraint_layout_constraintTag=83;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_creator
     */
    public static final int Constraint_layout_constraintTop_creator=84;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_toBottomOf
     */
    public static final int Constraint_layout_constraintTop_toBottomOf=85;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_toTopOf
     */
    public static final int Constraint_layout_constraintTop_toTopOf=86;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_bias
     */
    public static final int Constraint_layout_constraintVertical_bias=87;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_chainStyle
     */
    public static final int Constraint_layout_constraintVertical_chainStyle=88;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_weight
     */
    public static final int Constraint_layout_constraintVertical_weight=89;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_default
     */
    public static final int Constraint_layout_constraintWidth_default=90;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_max
     */
    public static final int Constraint_layout_constraintWidth_max=91;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_min
     */
    public static final int Constraint_layout_constraintWidth_min=92;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_percent
     */
    public static final int Constraint_layout_constraintWidth_percent=93;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_editor_absoluteX
     */
    public static final int Constraint_layout_editor_absoluteX=94;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_editor_absoluteY
     */
    public static final int Constraint_layout_editor_absoluteY=95;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginBottom
     */
    public static final int Constraint_layout_goneMarginBottom=96;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginEnd
     */
    public static final int Constraint_layout_goneMarginEnd=97;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginLeft
     */
    public static final int Constraint_layout_goneMarginLeft=98;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginRight
     */
    public static final int Constraint_layout_goneMarginRight=99;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginStart
     */
    public static final int Constraint_layout_goneMarginStart=100;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginTop
     */
    public static final int Constraint_layout_goneMarginTop=101;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionProgress}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionProgress
     */
    public static final int Constraint_motionProgress=102;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionStagger}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionStagger
     */
    public static final int Constraint_motionStagger=103;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:pathMotionArc
     */
    public static final int Constraint_pathMotionArc=104;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#pivotAnchor}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:pivotAnchor
     */
    public static final int Constraint_pivotAnchor=105;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:transitionEasing
     */
    public static final int Constraint_transitionEasing=106;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:transitionPathRotate
     */
    public static final int Constraint_transitionPathRotate=107;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#visibilityMode}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ignore</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:visibilityMode
     */
    public static final int Constraint_visibilityMode=108;
    /**
     * Attributes that can be used with a ConstraintLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_padding android:padding}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingLeft android:paddingLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingTop android:paddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingRight android:paddingRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingBottom android:paddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingStart android:paddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingEnd android:paddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierAllowsGoneWidgets com.kotlinbaseapplication:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierDirection com.kotlinbaseapplication:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierMargin com.kotlinbaseapplication:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_chainUseRtl com.kotlinbaseapplication:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_constraintSet com.kotlinbaseapplication:constraintSet}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_constraint_referenced_ids com.kotlinbaseapplication:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstHorizontalBias com.kotlinbaseapplication:flow_firstHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstHorizontalStyle com.kotlinbaseapplication:flow_firstHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstVerticalBias com.kotlinbaseapplication:flow_firstVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstVerticalStyle com.kotlinbaseapplication:flow_firstVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalAlign com.kotlinbaseapplication:flow_horizontalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalBias com.kotlinbaseapplication:flow_horizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalGap com.kotlinbaseapplication:flow_horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalStyle com.kotlinbaseapplication:flow_horizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastHorizontalBias com.kotlinbaseapplication:flow_lastHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastHorizontalStyle com.kotlinbaseapplication:flow_lastHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastVerticalBias com.kotlinbaseapplication:flow_lastVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastVerticalStyle com.kotlinbaseapplication:flow_lastVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_maxElementsWrap com.kotlinbaseapplication:flow_maxElementsWrap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalAlign com.kotlinbaseapplication:flow_verticalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalBias com.kotlinbaseapplication:flow_verticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalGap com.kotlinbaseapplication:flow_verticalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalStyle com.kotlinbaseapplication:flow_verticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_wrapMode com.kotlinbaseapplication:flow_wrapMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layoutDescription com.kotlinbaseapplication:layoutDescription}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constrainedHeight com.kotlinbaseapplication:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constrainedWidth com.kotlinbaseapplication:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBaseline_creator com.kotlinbaseapplication:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf com.kotlinbaseapplication:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_creator com.kotlinbaseapplication:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_toBottomOf com.kotlinbaseapplication:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_toTopOf com.kotlinbaseapplication:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircle com.kotlinbaseapplication:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircleAngle com.kotlinbaseapplication:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircleRadius com.kotlinbaseapplication:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintDimensionRatio com.kotlinbaseapplication:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintEnd_toEndOf com.kotlinbaseapplication:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintEnd_toStartOf com.kotlinbaseapplication:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_begin com.kotlinbaseapplication:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_end com.kotlinbaseapplication:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_percent com.kotlinbaseapplication:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_default com.kotlinbaseapplication:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_max com.kotlinbaseapplication:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_min com.kotlinbaseapplication:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_percent com.kotlinbaseapplication:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_bias com.kotlinbaseapplication:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle com.kotlinbaseapplication:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_weight com.kotlinbaseapplication:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_creator com.kotlinbaseapplication:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_toLeftOf com.kotlinbaseapplication:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_toRightOf com.kotlinbaseapplication:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_creator com.kotlinbaseapplication:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_toLeftOf com.kotlinbaseapplication:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_toRightOf com.kotlinbaseapplication:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintStart_toEndOf com.kotlinbaseapplication:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintStart_toStartOf com.kotlinbaseapplication:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTag com.kotlinbaseapplication:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_creator com.kotlinbaseapplication:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_toBottomOf com.kotlinbaseapplication:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_toTopOf com.kotlinbaseapplication:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_bias com.kotlinbaseapplication:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_chainStyle com.kotlinbaseapplication:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_weight com.kotlinbaseapplication:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_default com.kotlinbaseapplication:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_max com.kotlinbaseapplication:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_min com.kotlinbaseapplication:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_percent com.kotlinbaseapplication:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_editor_absoluteX com.kotlinbaseapplication:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_editor_absoluteY com.kotlinbaseapplication:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginBottom com.kotlinbaseapplication:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginEnd com.kotlinbaseapplication:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginLeft com.kotlinbaseapplication:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginRight com.kotlinbaseapplication:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginStart com.kotlinbaseapplication:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginTop com.kotlinbaseapplication:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_optimizationLevel com.kotlinbaseapplication:layout_optimizationLevel}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintLayout_Layout_android_orientation
     * @see #ConstraintLayout_Layout_android_padding
     * @see #ConstraintLayout_Layout_android_paddingLeft
     * @see #ConstraintLayout_Layout_android_paddingTop
     * @see #ConstraintLayout_Layout_android_paddingRight
     * @see #ConstraintLayout_Layout_android_paddingBottom
     * @see #ConstraintLayout_Layout_android_visibility
     * @see #ConstraintLayout_Layout_android_maxWidth
     * @see #ConstraintLayout_Layout_android_maxHeight
     * @see #ConstraintLayout_Layout_android_minWidth
     * @see #ConstraintLayout_Layout_android_minHeight
     * @see #ConstraintLayout_Layout_android_paddingStart
     * @see #ConstraintLayout_Layout_android_paddingEnd
     * @see #ConstraintLayout_Layout_android_elevation
     * @see #ConstraintLayout_Layout_barrierAllowsGoneWidgets
     * @see #ConstraintLayout_Layout_barrierDirection
     * @see #ConstraintLayout_Layout_barrierMargin
     * @see #ConstraintLayout_Layout_chainUseRtl
     * @see #ConstraintLayout_Layout_constraintSet
     * @see #ConstraintLayout_Layout_constraint_referenced_ids
     * @see #ConstraintLayout_Layout_flow_firstHorizontalBias
     * @see #ConstraintLayout_Layout_flow_firstHorizontalStyle
     * @see #ConstraintLayout_Layout_flow_firstVerticalBias
     * @see #ConstraintLayout_Layout_flow_firstVerticalStyle
     * @see #ConstraintLayout_Layout_flow_horizontalAlign
     * @see #ConstraintLayout_Layout_flow_horizontalBias
     * @see #ConstraintLayout_Layout_flow_horizontalGap
     * @see #ConstraintLayout_Layout_flow_horizontalStyle
     * @see #ConstraintLayout_Layout_flow_lastHorizontalBias
     * @see #ConstraintLayout_Layout_flow_lastHorizontalStyle
     * @see #ConstraintLayout_Layout_flow_lastVerticalBias
     * @see #ConstraintLayout_Layout_flow_lastVerticalStyle
     * @see #ConstraintLayout_Layout_flow_maxElementsWrap
     * @see #ConstraintLayout_Layout_flow_verticalAlign
     * @see #ConstraintLayout_Layout_flow_verticalBias
     * @see #ConstraintLayout_Layout_flow_verticalGap
     * @see #ConstraintLayout_Layout_flow_verticalStyle
     * @see #ConstraintLayout_Layout_flow_wrapMode
     * @see #ConstraintLayout_Layout_layoutDescription
     * @see #ConstraintLayout_Layout_layout_constrainedHeight
     * @see #ConstraintLayout_Layout_layout_constrainedWidth
     * @see #ConstraintLayout_Layout_layout_constraintBaseline_creator
     * @see #ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf
     * @see #ConstraintLayout_Layout_layout_constraintBottom_creator
     * @see #ConstraintLayout_Layout_layout_constraintBottom_toBottomOf
     * @see #ConstraintLayout_Layout_layout_constraintBottom_toTopOf
     * @see #ConstraintLayout_Layout_layout_constraintCircle
     * @see #ConstraintLayout_Layout_layout_constraintCircleAngle
     * @see #ConstraintLayout_Layout_layout_constraintCircleRadius
     * @see #ConstraintLayout_Layout_layout_constraintDimensionRatio
     * @see #ConstraintLayout_Layout_layout_constraintEnd_toEndOf
     * @see #ConstraintLayout_Layout_layout_constraintEnd_toStartOf
     * @see #ConstraintLayout_Layout_layout_constraintGuide_begin
     * @see #ConstraintLayout_Layout_layout_constraintGuide_end
     * @see #ConstraintLayout_Layout_layout_constraintGuide_percent
     * @see #ConstraintLayout_Layout_layout_constraintHeight_default
     * @see #ConstraintLayout_Layout_layout_constraintHeight_max
     * @see #ConstraintLayout_Layout_layout_constraintHeight_min
     * @see #ConstraintLayout_Layout_layout_constraintHeight_percent
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_bias
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_weight
     * @see #ConstraintLayout_Layout_layout_constraintLeft_creator
     * @see #ConstraintLayout_Layout_layout_constraintLeft_toLeftOf
     * @see #ConstraintLayout_Layout_layout_constraintLeft_toRightOf
     * @see #ConstraintLayout_Layout_layout_constraintRight_creator
     * @see #ConstraintLayout_Layout_layout_constraintRight_toLeftOf
     * @see #ConstraintLayout_Layout_layout_constraintRight_toRightOf
     * @see #ConstraintLayout_Layout_layout_constraintStart_toEndOf
     * @see #ConstraintLayout_Layout_layout_constraintStart_toStartOf
     * @see #ConstraintLayout_Layout_layout_constraintTag
     * @see #ConstraintLayout_Layout_layout_constraintTop_creator
     * @see #ConstraintLayout_Layout_layout_constraintTop_toBottomOf
     * @see #ConstraintLayout_Layout_layout_constraintTop_toTopOf
     * @see #ConstraintLayout_Layout_layout_constraintVertical_bias
     * @see #ConstraintLayout_Layout_layout_constraintVertical_chainStyle
     * @see #ConstraintLayout_Layout_layout_constraintVertical_weight
     * @see #ConstraintLayout_Layout_layout_constraintWidth_default
     * @see #ConstraintLayout_Layout_layout_constraintWidth_max
     * @see #ConstraintLayout_Layout_layout_constraintWidth_min
     * @see #ConstraintLayout_Layout_layout_constraintWidth_percent
     * @see #ConstraintLayout_Layout_layout_editor_absoluteX
     * @see #ConstraintLayout_Layout_layout_editor_absoluteY
     * @see #ConstraintLayout_Layout_layout_goneMarginBottom
     * @see #ConstraintLayout_Layout_layout_goneMarginEnd
     * @see #ConstraintLayout_Layout_layout_goneMarginLeft
     * @see #ConstraintLayout_Layout_layout_goneMarginRight
     * @see #ConstraintLayout_Layout_layout_goneMarginStart
     * @see #ConstraintLayout_Layout_layout_goneMarginTop
     * @see #ConstraintLayout_Layout_layout_optimizationLevel
     */
    public static final int[] ConstraintLayout_Layout={
      0x010100c4, 0x010100d5, 0x010100d6, 0x010100d7, 
      0x010100d8, 0x010100d9, 0x010100dc, 0x0101011f, 
      0x01010120, 0x0101013f, 0x01010140, 0x010103b3, 
      0x010103b4, 0x01010440, 0x7f030071, 0x7f030072, 
      0x7f030073, 0x7f0300e6, 0x7f030144, 0x7f030147, 
      0x7f0301e5, 0x7f0301e6, 0x7f0301e7, 0x7f0301e8, 
      0x7f0301e9, 0x7f0301ea, 0x7f0301eb, 0x7f0301ec, 
      0x7f0301ed, 0x7f0301ee, 0x7f0301ef, 0x7f0301f0, 
      0x7f0301f1, 0x7f0301f3, 0x7f0301f4, 0x7f0301f5, 
      0x7f0301f6, 0x7f0301f7, 0x7f030263, 0x7f03026b, 
      0x7f03026c, 0x7f03026d, 0x7f03026e, 0x7f03026f, 
      0x7f030270, 0x7f030271, 0x7f030272, 0x7f030273, 
      0x7f030274, 0x7f030275, 0x7f030276, 0x7f030277, 
      0x7f030278, 0x7f030279, 0x7f03027a, 0x7f03027b, 
      0x7f03027c, 0x7f03027d, 0x7f03027e, 0x7f03027f, 
      0x7f030280, 0x7f030281, 0x7f030282, 0x7f030283, 
      0x7f030284, 0x7f030285, 0x7f030286, 0x7f030287, 
      0x7f030288, 0x7f030289, 0x7f03028a, 0x7f03028b, 
      0x7f03028c, 0x7f03028d, 0x7f03028e, 0x7f03028f, 
      0x7f030290, 0x7f030291, 0x7f030292, 0x7f030293, 
      0x7f030294, 0x7f030296, 0x7f030297, 0x7f030298, 
      0x7f030299, 0x7f03029a, 0x7f03029b, 0x7f03029c, 
      0x7f03029d, 0x7f0302a0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int ConstraintLayout_Layout_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#padding}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:padding
     */
    public static final int ConstraintLayout_Layout_android_padding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingLeft}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingLeft
     */
    public static final int ConstraintLayout_Layout_android_paddingLeft=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingTop}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingTop
     */
    public static final int ConstraintLayout_Layout_android_paddingTop=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingRight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingRight
     */
    public static final int ConstraintLayout_Layout_android_paddingRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingBottom}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingBottom
     */
    public static final int ConstraintLayout_Layout_android_paddingBottom=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static final int ConstraintLayout_Layout_android_visibility=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int ConstraintLayout_Layout_android_maxWidth=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int ConstraintLayout_Layout_android_maxHeight=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ConstraintLayout_Layout_android_minWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int ConstraintLayout_Layout_android_minHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingStart}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingStart
     */
    public static final int ConstraintLayout_Layout_android_paddingStart=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingEnd}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingEnd
     */
    public static final int ConstraintLayout_Layout_android_paddingEnd=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int ConstraintLayout_Layout_android_elevation=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:barrierAllowsGoneWidgets
     */
    public static final int ConstraintLayout_Layout_barrierAllowsGoneWidgets=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:barrierDirection
     */
    public static final int ConstraintLayout_Layout_barrierDirection=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:barrierMargin
     */
    public static final int ConstraintLayout_Layout_barrierMargin=16;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:chainUseRtl
     */
    public static final int ConstraintLayout_Layout_chainUseRtl=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#constraintSet}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:constraintSet
     */
    public static final int ConstraintLayout_Layout_constraintSet=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:constraint_referenced_ids
     */
    public static final int ConstraintLayout_Layout_constraint_referenced_ids=19;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_firstHorizontalBias
     */
    public static final int ConstraintLayout_Layout_flow_firstHorizontalBias=20;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_firstHorizontalStyle
     */
    public static final int ConstraintLayout_Layout_flow_firstHorizontalStyle=21;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstVerticalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_firstVerticalBias
     */
    public static final int ConstraintLayout_Layout_flow_firstVerticalBias=22;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_firstVerticalStyle
     */
    public static final int ConstraintLayout_Layout_flow_firstVerticalStyle=23;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalAlign}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalAlign
     */
    public static final int ConstraintLayout_Layout_flow_horizontalAlign=24;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalBias
     */
    public static final int ConstraintLayout_Layout_flow_horizontalBias=25;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalGap}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalGap
     */
    public static final int ConstraintLayout_Layout_flow_horizontalGap=26;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalStyle
     */
    public static final int ConstraintLayout_Layout_flow_horizontalStyle=27;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_lastHorizontalBias
     */
    public static final int ConstraintLayout_Layout_flow_lastHorizontalBias=28;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_lastHorizontalStyle
     */
    public static final int ConstraintLayout_Layout_flow_lastHorizontalStyle=29;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastVerticalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_lastVerticalBias
     */
    public static final int ConstraintLayout_Layout_flow_lastVerticalBias=30;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_lastVerticalStyle
     */
    public static final int ConstraintLayout_Layout_flow_lastVerticalStyle=31;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_maxElementsWrap}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_maxElementsWrap
     */
    public static final int ConstraintLayout_Layout_flow_maxElementsWrap=32;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalAlign}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_verticalAlign
     */
    public static final int ConstraintLayout_Layout_flow_verticalAlign=33;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_verticalBias
     */
    public static final int ConstraintLayout_Layout_flow_verticalBias=34;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalGap}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:flow_verticalGap
     */
    public static final int ConstraintLayout_Layout_flow_verticalGap=35;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_verticalStyle
     */
    public static final int ConstraintLayout_Layout_flow_verticalStyle=36;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_wrapMode}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_wrapMode
     */
    public static final int ConstraintLayout_Layout_flow_wrapMode=37;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layoutDescription}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layoutDescription
     */
    public static final int ConstraintLayout_Layout_layoutDescription=38;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constrainedHeight
     */
    public static final int ConstraintLayout_Layout_layout_constrainedHeight=39;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constrainedWidth
     */
    public static final int ConstraintLayout_Layout_layout_constrainedWidth=40;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBaseline_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintBaseline_creator=41;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBaseline_toBaselineOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf=42;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintBottom_creator=43;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_toBottomOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf=44;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_toTopOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintBottom_toTopOf=45;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircle
     */
    public static final int ConstraintLayout_Layout_layout_constraintCircle=46;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircleAngle
     */
    public static final int ConstraintLayout_Layout_layout_constraintCircleAngle=47;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircleRadius
     */
    public static final int ConstraintLayout_Layout_layout_constraintCircleRadius=48;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layout_constraintDimensionRatio
     */
    public static final int ConstraintLayout_Layout_layout_constraintDimensionRatio=49;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintEnd_toEndOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintEnd_toEndOf=50;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintEnd_toStartOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintEnd_toStartOf=51;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_begin
     */
    public static final int ConstraintLayout_Layout_layout_constraintGuide_begin=52;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_end
     */
    public static final int ConstraintLayout_Layout_layout_constraintGuide_end=53;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_percent
     */
    public static final int ConstraintLayout_Layout_layout_constraintGuide_percent=54;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_default
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_default=55;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_max
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_max=56;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_min
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_min=57;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_percent
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_percent=58;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_bias
     */
    public static final int ConstraintLayout_Layout_layout_constraintHorizontal_bias=59;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_chainStyle
     */
    public static final int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle=60;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_weight
     */
    public static final int ConstraintLayout_Layout_layout_constraintHorizontal_weight=61;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintLeft_creator=62;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_toLeftOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf=63;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_toRightOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintLeft_toRightOf=64;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintRight_creator=65;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_toLeftOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintRight_toLeftOf=66;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_toRightOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintRight_toRightOf=67;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintStart_toEndOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintStart_toEndOf=68;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintStart_toStartOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintStart_toStartOf=69;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTag
     */
    public static final int ConstraintLayout_Layout_layout_constraintTag=70;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintTop_creator=71;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_toBottomOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintTop_toBottomOf=72;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_toTopOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintTop_toTopOf=73;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_bias
     */
    public static final int ConstraintLayout_Layout_layout_constraintVertical_bias=74;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_chainStyle
     */
    public static final int ConstraintLayout_Layout_layout_constraintVertical_chainStyle=75;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_weight
     */
    public static final int ConstraintLayout_Layout_layout_constraintVertical_weight=76;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_default
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_default=77;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_max
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_max=78;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_min
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_min=79;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_percent
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_percent=80;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_editor_absoluteX
     */
    public static final int ConstraintLayout_Layout_layout_editor_absoluteX=81;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_editor_absoluteY
     */
    public static final int ConstraintLayout_Layout_layout_editor_absoluteY=82;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginBottom
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginBottom=83;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginEnd
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginEnd=84;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginLeft
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginLeft=85;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginRight
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginRight=86;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginStart
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginStart=87;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginTop
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginTop=88;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_optimizationLevel}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>barrier</td><td>2</td><td></td></tr>
     * <tr><td>chains</td><td>4</td><td></td></tr>
     * <tr><td>dimensions</td><td>8</td><td></td></tr>
     * <tr><td>direct</td><td>1</td><td>direct, barriers, chains</td></tr>
     * <tr><td>graph</td><td>40</td><td></td></tr>
     * <tr><td>graph_wrap</td><td>80</td><td></td></tr>
     * <tr><td>groups</td><td>20</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>ratio</td><td>10</td><td></td></tr>
     * <tr><td>standard</td><td>7</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_optimizationLevel
     */
    public static final int ConstraintLayout_Layout_layout_optimizationLevel=89;
    /**
     * Attributes that can be used with a ConstraintLayout_placeholder.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintLayout_placeholder_content com.kotlinbaseapplication:content}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_placeholder_placeholder_emptyVisibility com.kotlinbaseapplication:placeholder_emptyVisibility}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintLayout_placeholder_content
     * @see #ConstraintLayout_placeholder_placeholder_emptyVisibility
     */
    public static final int[] ConstraintLayout_placeholder={
      0x7f030149, 0x7f03034b
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#content}
     * attribute's value can be found in the {@link #ConstraintLayout_placeholder} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:content
     */
    public static final int ConstraintLayout_placeholder_content=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#placeholder_emptyVisibility}
     * attribute's value can be found in the {@link #ConstraintLayout_placeholder} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>8</td><td></td></tr>
     * <tr><td>invisible</td><td>4</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:placeholder_emptyVisibility
     */
    public static final int ConstraintLayout_placeholder_placeholder_emptyVisibility=1;
    /**
     * Attributes that can be used with a ConstraintSet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintSet_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_pivotX android:pivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_pivotY android:pivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_animate_relativeTo com.kotlinbaseapplication:animate_relativeTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierAllowsGoneWidgets com.kotlinbaseapplication:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierDirection com.kotlinbaseapplication:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierMargin com.kotlinbaseapplication:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_chainUseRtl com.kotlinbaseapplication:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_constraint_referenced_ids com.kotlinbaseapplication:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_deriveConstraintsFrom com.kotlinbaseapplication:deriveConstraintsFrom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_drawPath com.kotlinbaseapplication:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstHorizontalBias com.kotlinbaseapplication:flow_firstHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstHorizontalStyle com.kotlinbaseapplication:flow_firstHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstVerticalBias com.kotlinbaseapplication:flow_firstVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstVerticalStyle com.kotlinbaseapplication:flow_firstVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalAlign com.kotlinbaseapplication:flow_horizontalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalBias com.kotlinbaseapplication:flow_horizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalGap com.kotlinbaseapplication:flow_horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalStyle com.kotlinbaseapplication:flow_horizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastHorizontalBias com.kotlinbaseapplication:flow_lastHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastHorizontalStyle com.kotlinbaseapplication:flow_lastHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastVerticalBias com.kotlinbaseapplication:flow_lastVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastVerticalStyle com.kotlinbaseapplication:flow_lastVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_maxElementsWrap com.kotlinbaseapplication:flow_maxElementsWrap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalAlign com.kotlinbaseapplication:flow_verticalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalBias com.kotlinbaseapplication:flow_verticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalGap com.kotlinbaseapplication:flow_verticalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalStyle com.kotlinbaseapplication:flow_verticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_wrapMode com.kotlinbaseapplication:flow_wrapMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constrainedHeight com.kotlinbaseapplication:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constrainedWidth com.kotlinbaseapplication:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBaseline_creator com.kotlinbaseapplication:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBaseline_toBaselineOf com.kotlinbaseapplication:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_creator com.kotlinbaseapplication:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_toBottomOf com.kotlinbaseapplication:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_toTopOf com.kotlinbaseapplication:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircle com.kotlinbaseapplication:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircleAngle com.kotlinbaseapplication:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircleRadius com.kotlinbaseapplication:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintDimensionRatio com.kotlinbaseapplication:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintEnd_toEndOf com.kotlinbaseapplication:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintEnd_toStartOf com.kotlinbaseapplication:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_begin com.kotlinbaseapplication:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_end com.kotlinbaseapplication:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_percent com.kotlinbaseapplication:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_default com.kotlinbaseapplication:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_max com.kotlinbaseapplication:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_min com.kotlinbaseapplication:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_percent com.kotlinbaseapplication:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_bias com.kotlinbaseapplication:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_chainStyle com.kotlinbaseapplication:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_weight com.kotlinbaseapplication:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_creator com.kotlinbaseapplication:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_toLeftOf com.kotlinbaseapplication:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_toRightOf com.kotlinbaseapplication:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_creator com.kotlinbaseapplication:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_toLeftOf com.kotlinbaseapplication:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_toRightOf com.kotlinbaseapplication:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintStart_toEndOf com.kotlinbaseapplication:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintStart_toStartOf com.kotlinbaseapplication:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTag com.kotlinbaseapplication:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_creator com.kotlinbaseapplication:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_toBottomOf com.kotlinbaseapplication:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_toTopOf com.kotlinbaseapplication:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_bias com.kotlinbaseapplication:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_chainStyle com.kotlinbaseapplication:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_weight com.kotlinbaseapplication:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_default com.kotlinbaseapplication:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_max com.kotlinbaseapplication:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_min com.kotlinbaseapplication:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_percent com.kotlinbaseapplication:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_editor_absoluteX com.kotlinbaseapplication:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_editor_absoluteY com.kotlinbaseapplication:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginBottom com.kotlinbaseapplication:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginEnd com.kotlinbaseapplication:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginLeft com.kotlinbaseapplication:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginRight com.kotlinbaseapplication:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginStart com.kotlinbaseapplication:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginTop com.kotlinbaseapplication:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_motionProgress com.kotlinbaseapplication:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_motionStagger com.kotlinbaseapplication:motionStagger}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_pathMotionArc com.kotlinbaseapplication:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_pivotAnchor com.kotlinbaseapplication:pivotAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_transitionEasing com.kotlinbaseapplication:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_transitionPathRotate com.kotlinbaseapplication:transitionPathRotate}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintSet_android_orientation
     * @see #ConstraintSet_android_id
     * @see #ConstraintSet_android_visibility
     * @see #ConstraintSet_android_layout_width
     * @see #ConstraintSet_android_layout_height
     * @see #ConstraintSet_android_layout_marginLeft
     * @see #ConstraintSet_android_layout_marginTop
     * @see #ConstraintSet_android_layout_marginRight
     * @see #ConstraintSet_android_layout_marginBottom
     * @see #ConstraintSet_android_maxWidth
     * @see #ConstraintSet_android_maxHeight
     * @see #ConstraintSet_android_minWidth
     * @see #ConstraintSet_android_minHeight
     * @see #ConstraintSet_android_pivotX
     * @see #ConstraintSet_android_pivotY
     * @see #ConstraintSet_android_alpha
     * @see #ConstraintSet_android_transformPivotX
     * @see #ConstraintSet_android_transformPivotY
     * @see #ConstraintSet_android_translationX
     * @see #ConstraintSet_android_translationY
     * @see #ConstraintSet_android_scaleX
     * @see #ConstraintSet_android_scaleY
     * @see #ConstraintSet_android_rotation
     * @see #ConstraintSet_android_rotationX
     * @see #ConstraintSet_android_rotationY
     * @see #ConstraintSet_android_layout_marginStart
     * @see #ConstraintSet_android_layout_marginEnd
     * @see #ConstraintSet_android_translationZ
     * @see #ConstraintSet_android_elevation
     * @see #ConstraintSet_animate_relativeTo
     * @see #ConstraintSet_barrierAllowsGoneWidgets
     * @see #ConstraintSet_barrierDirection
     * @see #ConstraintSet_barrierMargin
     * @see #ConstraintSet_chainUseRtl
     * @see #ConstraintSet_constraint_referenced_ids
     * @see #ConstraintSet_deriveConstraintsFrom
     * @see #ConstraintSet_drawPath
     * @see #ConstraintSet_flow_firstHorizontalBias
     * @see #ConstraintSet_flow_firstHorizontalStyle
     * @see #ConstraintSet_flow_firstVerticalBias
     * @see #ConstraintSet_flow_firstVerticalStyle
     * @see #ConstraintSet_flow_horizontalAlign
     * @see #ConstraintSet_flow_horizontalBias
     * @see #ConstraintSet_flow_horizontalGap
     * @see #ConstraintSet_flow_horizontalStyle
     * @see #ConstraintSet_flow_lastHorizontalBias
     * @see #ConstraintSet_flow_lastHorizontalStyle
     * @see #ConstraintSet_flow_lastVerticalBias
     * @see #ConstraintSet_flow_lastVerticalStyle
     * @see #ConstraintSet_flow_maxElementsWrap
     * @see #ConstraintSet_flow_verticalAlign
     * @see #ConstraintSet_flow_verticalBias
     * @see #ConstraintSet_flow_verticalGap
     * @see #ConstraintSet_flow_verticalStyle
     * @see #ConstraintSet_flow_wrapMode
     * @see #ConstraintSet_layout_constrainedHeight
     * @see #ConstraintSet_layout_constrainedWidth
     * @see #ConstraintSet_layout_constraintBaseline_creator
     * @see #ConstraintSet_layout_constraintBaseline_toBaselineOf
     * @see #ConstraintSet_layout_constraintBottom_creator
     * @see #ConstraintSet_layout_constraintBottom_toBottomOf
     * @see #ConstraintSet_layout_constraintBottom_toTopOf
     * @see #ConstraintSet_layout_constraintCircle
     * @see #ConstraintSet_layout_constraintCircleAngle
     * @see #ConstraintSet_layout_constraintCircleRadius
     * @see #ConstraintSet_layout_constraintDimensionRatio
     * @see #ConstraintSet_layout_constraintEnd_toEndOf
     * @see #ConstraintSet_layout_constraintEnd_toStartOf
     * @see #ConstraintSet_layout_constraintGuide_begin
     * @see #ConstraintSet_layout_constraintGuide_end
     * @see #ConstraintSet_layout_constraintGuide_percent
     * @see #ConstraintSet_layout_constraintHeight_default
     * @see #ConstraintSet_layout_constraintHeight_max
     * @see #ConstraintSet_layout_constraintHeight_min
     * @see #ConstraintSet_layout_constraintHeight_percent
     * @see #ConstraintSet_layout_constraintHorizontal_bias
     * @see #ConstraintSet_layout_constraintHorizontal_chainStyle
     * @see #ConstraintSet_layout_constraintHorizontal_weight
     * @see #ConstraintSet_layout_constraintLeft_creator
     * @see #ConstraintSet_layout_constraintLeft_toLeftOf
     * @see #ConstraintSet_layout_constraintLeft_toRightOf
     * @see #ConstraintSet_layout_constraintRight_creator
     * @see #ConstraintSet_layout_constraintRight_toLeftOf
     * @see #ConstraintSet_layout_constraintRight_toRightOf
     * @see #ConstraintSet_layout_constraintStart_toEndOf
     * @see #ConstraintSet_layout_constraintStart_toStartOf
     * @see #ConstraintSet_layout_constraintTag
     * @see #ConstraintSet_layout_constraintTop_creator
     * @see #ConstraintSet_layout_constraintTop_toBottomOf
     * @see #ConstraintSet_layout_constraintTop_toTopOf
     * @see #ConstraintSet_layout_constraintVertical_bias
     * @see #ConstraintSet_layout_constraintVertical_chainStyle
     * @see #ConstraintSet_layout_constraintVertical_weight
     * @see #ConstraintSet_layout_constraintWidth_default
     * @see #ConstraintSet_layout_constraintWidth_max
     * @see #ConstraintSet_layout_constraintWidth_min
     * @see #ConstraintSet_layout_constraintWidth_percent
     * @see #ConstraintSet_layout_editor_absoluteX
     * @see #ConstraintSet_layout_editor_absoluteY
     * @see #ConstraintSet_layout_goneMarginBottom
     * @see #ConstraintSet_layout_goneMarginEnd
     * @see #ConstraintSet_layout_goneMarginLeft
     * @see #ConstraintSet_layout_goneMarginRight
     * @see #ConstraintSet_layout_goneMarginStart
     * @see #ConstraintSet_layout_goneMarginTop
     * @see #ConstraintSet_motionProgress
     * @see #ConstraintSet_motionStagger
     * @see #ConstraintSet_pathMotionArc
     * @see #ConstraintSet_pivotAnchor
     * @see #ConstraintSet_transitionEasing
     * @see #ConstraintSet_transitionPathRotate
     */
    public static final int[] ConstraintSet={
      0x010100c4, 0x010100d0, 0x010100dc, 0x010100f4, 
      0x010100f5, 0x010100f7, 0x010100f8, 0x010100f9, 
      0x010100fa, 0x0101011f, 0x01010120, 0x0101013f, 
      0x01010140, 0x010101b5, 0x010101b6, 0x0101031f, 
      0x01010320, 0x01010321, 0x01010322, 0x01010323, 
      0x01010324, 0x01010325, 0x01010326, 0x01010327, 
      0x01010328, 0x010103b5, 0x010103b6, 0x010103fa, 
      0x01010440, 0x7f030046, 0x7f030071, 0x7f030072, 
      0x7f030073, 0x7f0300e6, 0x7f030147, 0x7f030187, 
      0x7f03019a, 0x7f0301e5, 0x7f0301e6, 0x7f0301e7, 
      0x7f0301e8, 0x7f0301e9, 0x7f0301ea, 0x7f0301eb, 
      0x7f0301ec, 0x7f0301ed, 0x7f0301ee, 0x7f0301ef, 
      0x7f0301f0, 0x7f0301f1, 0x7f0301f3, 0x7f0301f4, 
      0x7f0301f5, 0x7f0301f6, 0x7f0301f7, 0x7f03026b, 
      0x7f03026c, 0x7f03026d, 0x7f03026e, 0x7f03026f, 
      0x7f030270, 0x7f030271, 0x7f030272, 0x7f030273, 
      0x7f030274, 0x7f030275, 0x7f030276, 0x7f030277, 
      0x7f030278, 0x7f030279, 0x7f03027a, 0x7f03027b, 
      0x7f03027c, 0x7f03027d, 0x7f03027e, 0x7f03027f, 
      0x7f030280, 0x7f030281, 0x7f030282, 0x7f030283, 
      0x7f030284, 0x7f030285, 0x7f030286, 0x7f030287, 
      0x7f030288, 0x7f030289, 0x7f03028a, 0x7f03028b, 
      0x7f03028c, 0x7f03028d, 0x7f03028e, 0x7f03028f, 
      0x7f030290, 0x7f030291, 0x7f030292, 0x7f030293, 
      0x7f030294, 0x7f030296, 0x7f030297, 0x7f030298, 
      0x7f030299, 0x7f03029a, 0x7f03029b, 0x7f03029c, 
      0x7f03029d, 0x7f0302f3, 0x7f0302f4, 0x7f03033f, 
      0x7f030347, 0x7f030449, 0x7f03044b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int ConstraintSet_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ConstraintSet_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static final int ConstraintSet_android_visibility=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int ConstraintSet_android_layout_width=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int ConstraintSet_android_layout_height=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static final int ConstraintSet_android_layout_marginLeft=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static final int ConstraintSet_android_layout_marginTop=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static final int ConstraintSet_android_layout_marginRight=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static final int ConstraintSet_android_layout_marginBottom=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int ConstraintSet_android_maxWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int ConstraintSet_android_maxHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ConstraintSet_android_minWidth=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int ConstraintSet_android_minHeight=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotX
     */
    public static final int ConstraintSet_android_pivotX=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotY
     */
    public static final int ConstraintSet_android_pivotY=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ConstraintSet_android_alpha=15;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static final int ConstraintSet_android_transformPivotX=16;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static final int ConstraintSet_android_transformPivotY=17;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int ConstraintSet_android_translationX=18;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int ConstraintSet_android_translationY=19;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int ConstraintSet_android_scaleX=20;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int ConstraintSet_android_scaleY=21;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int ConstraintSet_android_rotation=22;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int ConstraintSet_android_rotationX=23;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int ConstraintSet_android_rotationY=24;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static final int ConstraintSet_android_layout_marginStart=25;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static final int ConstraintSet_android_layout_marginEnd=26;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int ConstraintSet_android_translationZ=27;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int ConstraintSet_android_elevation=28;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#animate_relativeTo}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:animate_relativeTo
     */
    public static final int ConstraintSet_animate_relativeTo=29;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:barrierAllowsGoneWidgets
     */
    public static final int ConstraintSet_barrierAllowsGoneWidgets=30;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:barrierDirection
     */
    public static final int ConstraintSet_barrierDirection=31;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:barrierMargin
     */
    public static final int ConstraintSet_barrierMargin=32;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:chainUseRtl
     */
    public static final int ConstraintSet_chainUseRtl=33;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:constraint_referenced_ids
     */
    public static final int ConstraintSet_constraint_referenced_ids=34;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#deriveConstraintsFrom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:deriveConstraintsFrom
     */
    public static final int ConstraintSet_deriveConstraintsFrom=35;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#drawPath}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:drawPath
     */
    public static final int ConstraintSet_drawPath=36;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_firstHorizontalBias
     */
    public static final int ConstraintSet_flow_firstHorizontalBias=37;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_firstHorizontalStyle
     */
    public static final int ConstraintSet_flow_firstHorizontalStyle=38;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstVerticalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_firstVerticalBias
     */
    public static final int ConstraintSet_flow_firstVerticalBias=39;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_firstVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_firstVerticalStyle
     */
    public static final int ConstraintSet_flow_firstVerticalStyle=40;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalAlign}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalAlign
     */
    public static final int ConstraintSet_flow_horizontalAlign=41;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalBias
     */
    public static final int ConstraintSet_flow_horizontalBias=42;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalGap}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalGap
     */
    public static final int ConstraintSet_flow_horizontalGap=43;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_horizontalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_horizontalStyle
     */
    public static final int ConstraintSet_flow_horizontalStyle=44;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_lastHorizontalBias
     */
    public static final int ConstraintSet_flow_lastHorizontalBias=45;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_lastHorizontalStyle
     */
    public static final int ConstraintSet_flow_lastHorizontalStyle=46;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastVerticalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_lastVerticalBias
     */
    public static final int ConstraintSet_flow_lastVerticalBias=47;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_lastVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_lastVerticalStyle
     */
    public static final int ConstraintSet_flow_lastVerticalStyle=48;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_maxElementsWrap}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_maxElementsWrap
     */
    public static final int ConstraintSet_flow_maxElementsWrap=49;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalAlign}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_verticalAlign
     */
    public static final int ConstraintSet_flow_verticalAlign=50;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:flow_verticalBias
     */
    public static final int ConstraintSet_flow_verticalBias=51;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalGap}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:flow_verticalGap
     */
    public static final int ConstraintSet_flow_verticalGap=52;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_verticalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_verticalStyle
     */
    public static final int ConstraintSet_flow_verticalStyle=53;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#flow_wrapMode}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:flow_wrapMode
     */
    public static final int ConstraintSet_flow_wrapMode=54;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constrainedHeight
     */
    public static final int ConstraintSet_layout_constrainedHeight=55;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constrainedWidth
     */
    public static final int ConstraintSet_layout_constrainedWidth=56;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBaseline_creator
     */
    public static final int ConstraintSet_layout_constraintBaseline_creator=57;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBaseline_toBaselineOf
     */
    public static final int ConstraintSet_layout_constraintBaseline_toBaselineOf=58;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_creator
     */
    public static final int ConstraintSet_layout_constraintBottom_creator=59;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_toBottomOf
     */
    public static final int ConstraintSet_layout_constraintBottom_toBottomOf=60;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_toTopOf
     */
    public static final int ConstraintSet_layout_constraintBottom_toTopOf=61;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircle
     */
    public static final int ConstraintSet_layout_constraintCircle=62;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircleAngle
     */
    public static final int ConstraintSet_layout_constraintCircleAngle=63;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircleRadius
     */
    public static final int ConstraintSet_layout_constraintCircleRadius=64;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layout_constraintDimensionRatio
     */
    public static final int ConstraintSet_layout_constraintDimensionRatio=65;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintEnd_toEndOf
     */
    public static final int ConstraintSet_layout_constraintEnd_toEndOf=66;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintEnd_toStartOf
     */
    public static final int ConstraintSet_layout_constraintEnd_toStartOf=67;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_begin
     */
    public static final int ConstraintSet_layout_constraintGuide_begin=68;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_end
     */
    public static final int ConstraintSet_layout_constraintGuide_end=69;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_percent
     */
    public static final int ConstraintSet_layout_constraintGuide_percent=70;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_default
     */
    public static final int ConstraintSet_layout_constraintHeight_default=71;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_max
     */
    public static final int ConstraintSet_layout_constraintHeight_max=72;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_min
     */
    public static final int ConstraintSet_layout_constraintHeight_min=73;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_percent
     */
    public static final int ConstraintSet_layout_constraintHeight_percent=74;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_bias
     */
    public static final int ConstraintSet_layout_constraintHorizontal_bias=75;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_chainStyle
     */
    public static final int ConstraintSet_layout_constraintHorizontal_chainStyle=76;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_weight
     */
    public static final int ConstraintSet_layout_constraintHorizontal_weight=77;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_creator
     */
    public static final int ConstraintSet_layout_constraintLeft_creator=78;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_toLeftOf
     */
    public static final int ConstraintSet_layout_constraintLeft_toLeftOf=79;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_toRightOf
     */
    public static final int ConstraintSet_layout_constraintLeft_toRightOf=80;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_creator
     */
    public static final int ConstraintSet_layout_constraintRight_creator=81;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_toLeftOf
     */
    public static final int ConstraintSet_layout_constraintRight_toLeftOf=82;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_toRightOf
     */
    public static final int ConstraintSet_layout_constraintRight_toRightOf=83;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintStart_toEndOf
     */
    public static final int ConstraintSet_layout_constraintStart_toEndOf=84;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintStart_toStartOf
     */
    public static final int ConstraintSet_layout_constraintStart_toStartOf=85;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTag
     */
    public static final int ConstraintSet_layout_constraintTag=86;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_creator
     */
    public static final int ConstraintSet_layout_constraintTop_creator=87;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_toBottomOf
     */
    public static final int ConstraintSet_layout_constraintTop_toBottomOf=88;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_toTopOf
     */
    public static final int ConstraintSet_layout_constraintTop_toTopOf=89;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_bias
     */
    public static final int ConstraintSet_layout_constraintVertical_bias=90;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_chainStyle
     */
    public static final int ConstraintSet_layout_constraintVertical_chainStyle=91;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_weight
     */
    public static final int ConstraintSet_layout_constraintVertical_weight=92;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_default
     */
    public static final int ConstraintSet_layout_constraintWidth_default=93;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_max
     */
    public static final int ConstraintSet_layout_constraintWidth_max=94;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_min
     */
    public static final int ConstraintSet_layout_constraintWidth_min=95;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_percent
     */
    public static final int ConstraintSet_layout_constraintWidth_percent=96;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_editor_absoluteX
     */
    public static final int ConstraintSet_layout_editor_absoluteX=97;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_editor_absoluteY
     */
    public static final int ConstraintSet_layout_editor_absoluteY=98;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginBottom
     */
    public static final int ConstraintSet_layout_goneMarginBottom=99;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginEnd
     */
    public static final int ConstraintSet_layout_goneMarginEnd=100;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginLeft
     */
    public static final int ConstraintSet_layout_goneMarginLeft=101;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginRight
     */
    public static final int ConstraintSet_layout_goneMarginRight=102;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginStart
     */
    public static final int ConstraintSet_layout_goneMarginStart=103;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginTop
     */
    public static final int ConstraintSet_layout_goneMarginTop=104;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionProgress}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionProgress
     */
    public static final int ConstraintSet_motionProgress=105;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionStagger}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionStagger
     */
    public static final int ConstraintSet_motionStagger=106;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:pathMotionArc
     */
    public static final int ConstraintSet_pathMotionArc=107;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#pivotAnchor}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:pivotAnchor
     */
    public static final int ConstraintSet_pivotAnchor=108;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:transitionEasing
     */
    public static final int ConstraintSet_transitionEasing=109;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:transitionPathRotate
     */
    public static final int ConstraintSet_transitionPathRotate=110;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.kotlinbaseapplication:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.kotlinbaseapplication:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f030258, 0x7f0303bc
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.kotlinbaseapplication:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.kotlinbaseapplication:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.kotlinbaseapplication:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.kotlinbaseapplication:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.kotlinbaseapplication:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.kotlinbaseapplication:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f030266, 0x7f030267, 0x7f030268, 
      0x7f030295, 0x7f03029e, 0x7f03029f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a CountryCodePicker.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_allowSearch com.kotlinbaseapplication:ccpDialog_allowSearch}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_background com.kotlinbaseapplication:ccpDialog_background}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_backgroundColor com.kotlinbaseapplication:ccpDialog_backgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_fastScroller_bubbleColor com.kotlinbaseapplication:ccpDialog_fastScroller_bubbleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_fastScroller_bubbleTextAppearance com.kotlinbaseapplication:ccpDialog_fastScroller_bubbleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_fastScroller_handleColor com.kotlinbaseapplication:ccpDialog_fastScroller_handleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_initialScrollToSelection com.kotlinbaseapplication:ccpDialog_initialScrollToSelection}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_keyboardAutoPopup com.kotlinbaseapplication:ccpDialog_keyboardAutoPopup}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_searchEditTextTint com.kotlinbaseapplication:ccpDialog_searchEditTextTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_showCloseIcon com.kotlinbaseapplication:ccpDialog_showCloseIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_showFastScroller com.kotlinbaseapplication:ccpDialog_showFastScroller}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_showFlag com.kotlinbaseapplication:ccpDialog_showFlag}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_showNameCode com.kotlinbaseapplication:ccpDialog_showNameCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_showPhoneCode com.kotlinbaseapplication:ccpDialog_showPhoneCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_showTitle com.kotlinbaseapplication:ccpDialog_showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccpDialog_textColor com.kotlinbaseapplication:ccpDialog_textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_areaCodeDetectedCountry com.kotlinbaseapplication:ccp_areaCodeDetectedCountry}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_arrowColor com.kotlinbaseapplication:ccp_arrowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_arrowSize com.kotlinbaseapplication:ccp_arrowSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_autoDetectCountry com.kotlinbaseapplication:ccp_autoDetectCountry}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_autoDetectLanguage com.kotlinbaseapplication:ccp_autoDetectLanguage}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_autoFormatNumber com.kotlinbaseapplication:ccp_autoFormatNumber}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_clickable com.kotlinbaseapplication:ccp_clickable}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_contentColor com.kotlinbaseapplication:ccp_contentColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_countryAutoDetectionPref com.kotlinbaseapplication:ccp_countryAutoDetectionPref}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_countryPreference com.kotlinbaseapplication:ccp_countryPreference}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_customMasterCountries com.kotlinbaseapplication:ccp_customMasterCountries}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_defaultLanguage com.kotlinbaseapplication:ccp_defaultLanguage}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_defaultNameCode com.kotlinbaseapplication:ccp_defaultNameCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_defaultPhoneCode com.kotlinbaseapplication:ccp_defaultPhoneCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_excludedCountries com.kotlinbaseapplication:ccp_excludedCountries}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_flagBorderColor com.kotlinbaseapplication:ccp_flagBorderColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_hintExampleNumber com.kotlinbaseapplication:ccp_hintExampleNumber}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_hintExampleNumberType com.kotlinbaseapplication:ccp_hintExampleNumberType}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_internationalFormattingOnly com.kotlinbaseapplication:ccp_internationalFormattingOnly}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_padding com.kotlinbaseapplication:ccp_padding}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_rememberLastSelection com.kotlinbaseapplication:ccp_rememberLastSelection}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_selectionMemoryTag com.kotlinbaseapplication:ccp_selectionMemoryTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_showArrow com.kotlinbaseapplication:ccp_showArrow}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_showFlag com.kotlinbaseapplication:ccp_showFlag}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_showFullName com.kotlinbaseapplication:ccp_showFullName}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_showNameCode com.kotlinbaseapplication:ccp_showNameCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_showPhoneCode com.kotlinbaseapplication:ccp_showPhoneCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_textGravity com.kotlinbaseapplication:ccp_textGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_textSize com.kotlinbaseapplication:ccp_textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_useDummyEmojiForPreview com.kotlinbaseapplication:ccp_useDummyEmojiForPreview}</code></td><td></td></tr>
     * <tr><td><code>{@link #CountryCodePicker_ccp_useFlagEmoji com.kotlinbaseapplication:ccp_useFlagEmoji}</code></td><td></td></tr>
     * </table>
     * @see #CountryCodePicker_ccpDialog_allowSearch
     * @see #CountryCodePicker_ccpDialog_background
     * @see #CountryCodePicker_ccpDialog_backgroundColor
     * @see #CountryCodePicker_ccpDialog_fastScroller_bubbleColor
     * @see #CountryCodePicker_ccpDialog_fastScroller_bubbleTextAppearance
     * @see #CountryCodePicker_ccpDialog_fastScroller_handleColor
     * @see #CountryCodePicker_ccpDialog_initialScrollToSelection
     * @see #CountryCodePicker_ccpDialog_keyboardAutoPopup
     * @see #CountryCodePicker_ccpDialog_searchEditTextTint
     * @see #CountryCodePicker_ccpDialog_showCloseIcon
     * @see #CountryCodePicker_ccpDialog_showFastScroller
     * @see #CountryCodePicker_ccpDialog_showFlag
     * @see #CountryCodePicker_ccpDialog_showNameCode
     * @see #CountryCodePicker_ccpDialog_showPhoneCode
     * @see #CountryCodePicker_ccpDialog_showTitle
     * @see #CountryCodePicker_ccpDialog_textColor
     * @see #CountryCodePicker_ccp_areaCodeDetectedCountry
     * @see #CountryCodePicker_ccp_arrowColor
     * @see #CountryCodePicker_ccp_arrowSize
     * @see #CountryCodePicker_ccp_autoDetectCountry
     * @see #CountryCodePicker_ccp_autoDetectLanguage
     * @see #CountryCodePicker_ccp_autoFormatNumber
     * @see #CountryCodePicker_ccp_clickable
     * @see #CountryCodePicker_ccp_contentColor
     * @see #CountryCodePicker_ccp_countryAutoDetectionPref
     * @see #CountryCodePicker_ccp_countryPreference
     * @see #CountryCodePicker_ccp_customMasterCountries
     * @see #CountryCodePicker_ccp_defaultLanguage
     * @see #CountryCodePicker_ccp_defaultNameCode
     * @see #CountryCodePicker_ccp_defaultPhoneCode
     * @see #CountryCodePicker_ccp_excludedCountries
     * @see #CountryCodePicker_ccp_flagBorderColor
     * @see #CountryCodePicker_ccp_hintExampleNumber
     * @see #CountryCodePicker_ccp_hintExampleNumberType
     * @see #CountryCodePicker_ccp_internationalFormattingOnly
     * @see #CountryCodePicker_ccp_padding
     * @see #CountryCodePicker_ccp_rememberLastSelection
     * @see #CountryCodePicker_ccp_selectionMemoryTag
     * @see #CountryCodePicker_ccp_showArrow
     * @see #CountryCodePicker_ccp_showFlag
     * @see #CountryCodePicker_ccp_showFullName
     * @see #CountryCodePicker_ccp_showNameCode
     * @see #CountryCodePicker_ccp_showPhoneCode
     * @see #CountryCodePicker_ccp_textGravity
     * @see #CountryCodePicker_ccp_textSize
     * @see #CountryCodePicker_ccp_useDummyEmojiForPreview
     * @see #CountryCodePicker_ccp_useFlagEmoji
     */
    public static final int[] CountryCodePicker={
      0x7f0300b7, 0x7f0300b8, 0x7f0300b9, 0x7f0300ba, 
      0x7f0300bb, 0x7f0300bc, 0x7f0300bd, 0x7f0300be, 
      0x7f0300bf, 0x7f0300c0, 0x7f0300c1, 0x7f0300c2, 
      0x7f0300c3, 0x7f0300c4, 0x7f0300c5, 0x7f0300c6, 
      0x7f0300c7, 0x7f0300c8, 0x7f0300c9, 0x7f0300ca, 
      0x7f0300cb, 0x7f0300cc, 0x7f0300cd, 0x7f0300ce, 
      0x7f0300cf, 0x7f0300d0, 0x7f0300d1, 0x7f0300d2, 
      0x7f0300d3, 0x7f0300d4, 0x7f0300d5, 0x7f0300d6, 
      0x7f0300d7, 0x7f0300d8, 0x7f0300d9, 0x7f0300da, 
      0x7f0300db, 0x7f0300dc, 0x7f0300dd, 0x7f0300de, 
      0x7f0300df, 0x7f0300e0, 0x7f0300e1, 0x7f0300e2, 
      0x7f0300e3, 0x7f0300e4, 0x7f0300e5
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_allowSearch}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_allowSearch
     */
    public static final int CountryCodePicker_ccpDialog_allowSearch=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_background}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_background
     */
    public static final int CountryCodePicker_ccpDialog_background=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_backgroundColor}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_backgroundColor
     */
    public static final int CountryCodePicker_ccpDialog_backgroundColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_fastScroller_bubbleColor}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_fastScroller_bubbleColor
     */
    public static final int CountryCodePicker_ccpDialog_fastScroller_bubbleColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_fastScroller_bubbleTextAppearance}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_fastScroller_bubbleTextAppearance
     */
    public static final int CountryCodePicker_ccpDialog_fastScroller_bubbleTextAppearance=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_fastScroller_handleColor}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_fastScroller_handleColor
     */
    public static final int CountryCodePicker_ccpDialog_fastScroller_handleColor=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_initialScrollToSelection}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_initialScrollToSelection
     */
    public static final int CountryCodePicker_ccpDialog_initialScrollToSelection=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_keyboardAutoPopup}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_keyboardAutoPopup
     */
    public static final int CountryCodePicker_ccpDialog_keyboardAutoPopup=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_searchEditTextTint}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_searchEditTextTint
     */
    public static final int CountryCodePicker_ccpDialog_searchEditTextTint=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_showCloseIcon}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_showCloseIcon
     */
    public static final int CountryCodePicker_ccpDialog_showCloseIcon=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_showFastScroller}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_showFastScroller
     */
    public static final int CountryCodePicker_ccpDialog_showFastScroller=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_showFlag}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_showFlag
     */
    public static final int CountryCodePicker_ccpDialog_showFlag=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_showNameCode}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_showNameCode
     */
    public static final int CountryCodePicker_ccpDialog_showNameCode=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_showPhoneCode}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_showPhoneCode
     */
    public static final int CountryCodePicker_ccpDialog_showPhoneCode=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_showTitle}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_showTitle
     */
    public static final int CountryCodePicker_ccpDialog_showTitle=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccpDialog_textColor}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccpDialog_textColor
     */
    public static final int CountryCodePicker_ccpDialog_textColor=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_areaCodeDetectedCountry}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_areaCodeDetectedCountry
     */
    public static final int CountryCodePicker_ccp_areaCodeDetectedCountry=16;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_arrowColor}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_arrowColor
     */
    public static final int CountryCodePicker_ccp_arrowColor=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_arrowSize}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:ccp_arrowSize
     */
    public static final int CountryCodePicker_ccp_arrowSize=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_autoDetectCountry}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_autoDetectCountry
     */
    public static final int CountryCodePicker_ccp_autoDetectCountry=19;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_autoDetectLanguage}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_autoDetectLanguage
     */
    public static final int CountryCodePicker_ccp_autoDetectLanguage=20;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_autoFormatNumber}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_autoFormatNumber
     */
    public static final int CountryCodePicker_ccp_autoFormatNumber=21;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_clickable}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_clickable
     */
    public static final int CountryCodePicker_ccp_clickable=22;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_contentColor}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_contentColor
     */
    public static final int CountryCodePicker_ccp_contentColor=23;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_countryAutoDetectionPref}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>LOCALE_NETWORK</td><td>20</td><td></td></tr>
     * <tr><td>LOCALE_NETWORK_SIM</td><td>141</td><td></td></tr>
     * <tr><td>LOCALE_ONLY</td><td>3</td><td></td></tr>
     * <tr><td>LOCALE_SIM</td><td>1f</td><td></td></tr>
     * <tr><td>LOCALE_SIM_NETWORK</td><td>138</td><td></td></tr>
     * <tr><td>NETWORK_LOCALE</td><td>17</td><td></td></tr>
     * <tr><td>NETWORK_LOCALE_SIM</td><td>e7</td><td></td></tr>
     * <tr><td>NETWORK_ONLY</td><td>2</td><td></td></tr>
     * <tr><td>NETWORK_SIM</td><td>15</td><td></td></tr>
     * <tr><td>NETWORK_SIM_LOCALE</td><td>d5</td><td></td></tr>
     * <tr><td>SIM_LOCALE</td><td>d</td><td></td></tr>
     * <tr><td>SIM_LOCALE_NETWORK</td><td>84</td><td></td></tr>
     * <tr><td>SIM_NETWORK</td><td>c</td><td></td></tr>
     * <tr><td>SIM_NETWORK_LOCALE</td><td>7b</td><td></td></tr>
     * <tr><td>SIM_ONLY</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:ccp_countryAutoDetectionPref
     */
    public static final int CountryCodePicker_ccp_countryAutoDetectionPref=24;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_countryPreference}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ccp_countryPreference
     */
    public static final int CountryCodePicker_ccp_countryPreference=25;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_customMasterCountries}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ccp_customMasterCountries
     */
    public static final int CountryCodePicker_ccp_customMasterCountries=26;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_defaultLanguage}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>AFRIKAANS</td><td>0</td><td></td></tr>
     * <tr><td>ARABIC</td><td>1</td><td></td></tr>
     * <tr><td>BENGALI</td><td>2</td><td></td></tr>
     * <tr><td>CHINESE_SIMPLIFIED</td><td>3</td><td></td></tr>
     * <tr><td>CHINESE_TRADITIONAL</td><td>4</td><td></td></tr>
     * <tr><td>CZECH</td><td>5</td><td></td></tr>
     * <tr><td>DANISH</td><td>6</td><td></td></tr>
     * <tr><td>DUTCH</td><td>7</td><td></td></tr>
     * <tr><td>ENGLISH</td><td>8</td><td></td></tr>
     * <tr><td>FARSI</td><td>9</td><td></td></tr>
     * <tr><td>FRENCH</td><td>a</td><td></td></tr>
     * <tr><td>GERMAN</td><td>b</td><td></td></tr>
     * <tr><td>GREEK</td><td>c</td><td></td></tr>
     * <tr><td>GUJARATI</td><td>d</td><td></td></tr>
     * <tr><td>HEBREW</td><td>e</td><td></td></tr>
     * <tr><td>HINDI</td><td>f</td><td></td></tr>
     * <tr><td>INDONESIA</td><td>10</td><td></td></tr>
     * <tr><td>ITALIAN</td><td>11</td><td></td></tr>
     * <tr><td>JAPANESE</td><td>12</td><td></td></tr>
     * <tr><td>KAZAKH</td><td>13</td><td></td></tr>
     * <tr><td>KOREAN</td><td>14</td><td></td></tr>
     * <tr><td>MARATHI</td><td>15</td><td></td></tr>
     * <tr><td>POLISH</td><td>16</td><td></td></tr>
     * <tr><td>PORTUGUESE</td><td>17</td><td></td></tr>
     * <tr><td>PUNJABI</td><td>18</td><td></td></tr>
     * <tr><td>RUSSIAN</td><td>19</td><td></td></tr>
     * <tr><td>SLOVAK</td><td>1a</td><td></td></tr>
     * <tr><td>SLOVENIAN</td><td>1b</td><td></td></tr>
     * <tr><td>SPANISH</td><td>1c</td><td></td></tr>
     * <tr><td>SWEDISH</td><td>1d</td><td></td></tr>
     * <tr><td>TAGALOG</td><td>1e</td><td></td></tr>
     * <tr><td>TURKISH</td><td>1f</td><td></td></tr>
     * <tr><td>UKRAINIAN</td><td>20</td><td></td></tr>
     * <tr><td>URDU</td><td>21</td><td></td></tr>
     * <tr><td>UZBEK</td><td>22</td><td></td></tr>
     * <tr><td>VIETNAMESE</td><td>23</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:ccp_defaultLanguage
     */
    public static final int CountryCodePicker_ccp_defaultLanguage=27;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_defaultNameCode}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ccp_defaultNameCode
     */
    public static final int CountryCodePicker_ccp_defaultNameCode=28;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_defaultPhoneCode}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_defaultPhoneCode
     */
    public static final int CountryCodePicker_ccp_defaultPhoneCode=29;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_excludedCountries}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ccp_excludedCountries
     */
    public static final int CountryCodePicker_ccp_excludedCountries=30;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_flagBorderColor}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_flagBorderColor
     */
    public static final int CountryCodePicker_ccp_flagBorderColor=31;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_hintExampleNumber}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_hintExampleNumber
     */
    public static final int CountryCodePicker_ccp_hintExampleNumber=32;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_hintExampleNumberType}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>FIXED_LINE</td><td>1</td><td></td></tr>
     * <tr><td>FIXED_LINE_OR_MOBILE</td><td>2</td><td></td></tr>
     * <tr><td>MOBILE</td><td>0</td><td></td></tr>
     * <tr><td>PAGER</td><td>8</td><td></td></tr>
     * <tr><td>PERSONAL_NUMBER</td><td>7</td><td></td></tr>
     * <tr><td>PREMIUM_RATE</td><td>4</td><td></td></tr>
     * <tr><td>SHARED_COST</td><td>5</td><td></td></tr>
     * <tr><td>TOLL_FREE</td><td>3</td><td></td></tr>
     * <tr><td>UAN</td><td>9</td><td></td></tr>
     * <tr><td>UNKNOWN</td><td>b</td><td></td></tr>
     * <tr><td>VOICEMAIL</td><td>a</td><td></td></tr>
     * <tr><td>VOIP</td><td>6</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:ccp_hintExampleNumberType
     */
    public static final int CountryCodePicker_ccp_hintExampleNumberType=33;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_internationalFormattingOnly}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_internationalFormattingOnly
     */
    public static final int CountryCodePicker_ccp_internationalFormattingOnly=34;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_padding}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:ccp_padding
     */
    public static final int CountryCodePicker_ccp_padding=35;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_rememberLastSelection}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_rememberLastSelection
     */
    public static final int CountryCodePicker_ccp_rememberLastSelection=36;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_selectionMemoryTag}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ccp_selectionMemoryTag
     */
    public static final int CountryCodePicker_ccp_selectionMemoryTag=37;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_showArrow}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_showArrow
     */
    public static final int CountryCodePicker_ccp_showArrow=38;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_showFlag}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_showFlag
     */
    public static final int CountryCodePicker_ccp_showFlag=39;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_showFullName}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_showFullName
     */
    public static final int CountryCodePicker_ccp_showFullName=40;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_showNameCode}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_showNameCode
     */
    public static final int CountryCodePicker_ccp_showNameCode=41;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_showPhoneCode}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_showPhoneCode
     */
    public static final int CountryCodePicker_ccp_showPhoneCode=42;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_textGravity}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>CENTER</td><td>0</td><td></td></tr>
     * <tr><td>LEFT</td><td>ffffffff</td><td></td></tr>
     * <tr><td>RIGHT</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:ccp_textGravity
     */
    public static final int CountryCodePicker_ccp_textGravity=43;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_textSize}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:ccp_textSize
     */
    public static final int CountryCodePicker_ccp_textSize=44;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_useDummyEmojiForPreview}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_useDummyEmojiForPreview
     */
    public static final int CountryCodePicker_ccp_useDummyEmojiForPreview=45;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ccp_useFlagEmoji}
     * attribute's value can be found in the {@link #CountryCodePicker} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ccp_useFlagEmoji
     */
    public static final int CountryCodePicker_ccp_useFlagEmoji=46;
    /**
     * Attributes that can be used with a CustomAttribute.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CustomAttribute_attributeName com.kotlinbaseapplication:attributeName}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customBoolean com.kotlinbaseapplication:customBoolean}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customColorDrawableValue com.kotlinbaseapplication:customColorDrawableValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customColorValue com.kotlinbaseapplication:customColorValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customDimension com.kotlinbaseapplication:customDimension}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customFloatValue com.kotlinbaseapplication:customFloatValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customIntegerValue com.kotlinbaseapplication:customIntegerValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customPixelDimension com.kotlinbaseapplication:customPixelDimension}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customStringValue com.kotlinbaseapplication:customStringValue}</code></td><td></td></tr>
     * </table>
     * @see #CustomAttribute_attributeName
     * @see #CustomAttribute_customBoolean
     * @see #CustomAttribute_customColorDrawableValue
     * @see #CustomAttribute_customColorValue
     * @see #CustomAttribute_customDimension
     * @see #CustomAttribute_customFloatValue
     * @see #CustomAttribute_customIntegerValue
     * @see #CustomAttribute_customPixelDimension
     * @see #CustomAttribute_customStringValue
     */
    public static final int[] CustomAttribute={
      0x7f03004f, 0x7f030170, 0x7f030171, 0x7f030172, 
      0x7f030173, 0x7f030174, 0x7f030175, 0x7f030177, 
      0x7f030178
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#attributeName}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:attributeName
     */
    public static final int CustomAttribute_attributeName=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#customBoolean}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:customBoolean
     */
    public static final int CustomAttribute_customBoolean=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#customColorDrawableValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:customColorDrawableValue
     */
    public static final int CustomAttribute_customColorDrawableValue=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#customColorValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:customColorValue
     */
    public static final int CustomAttribute_customColorValue=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#customDimension}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:customDimension
     */
    public static final int CustomAttribute_customDimension=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#customFloatValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:customFloatValue
     */
    public static final int CustomAttribute_customFloatValue=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#customIntegerValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:customIntegerValue
     */
    public static final int CustomAttribute_customIntegerValue=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#customPixelDimension}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:customPixelDimension
     */
    public static final int CustomAttribute_customPixelDimension=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#customStringValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:customStringValue
     */
    public static final int CustomAttribute_customStringValue=8;
    /**
     * Attributes that can be used with a DialogFragmentNavigator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DialogFragmentNavigator_android_name android:name}</code></td><td></td></tr>
     * </table>
     * @see #DialogFragmentNavigator_android_name
     */
    public static final int[] DialogFragmentNavigator={
      0x01010003
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #DialogFragmentNavigator} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int DialogFragmentNavigator_android_name=0;
    /**
     * Attributes that can be used with a DialogPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogTitle android:dialogTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogMessage android:dialogMessage}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogIcon android:dialogIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_positiveButtonText android:positiveButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_negativeButtonText android:negativeButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogLayout android:dialogLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogIcon com.kotlinbaseapplication:dialogIcon}</code></td><td>The icon for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogLayout com.kotlinbaseapplication:dialogLayout}</code></td><td>A layout to be used as the content View for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogMessage com.kotlinbaseapplication:dialogMessage}</code></td><td>The message in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogTitle com.kotlinbaseapplication:dialogTitle}</code></td><td>The title in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_negativeButtonText com.kotlinbaseapplication:negativeButtonText}</code></td><td>The negative button text for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_positiveButtonText com.kotlinbaseapplication:positiveButtonText}</code></td><td>The positive button text for the dialog.</td></tr>
     * </table>
     * @see #DialogPreference_android_dialogTitle
     * @see #DialogPreference_android_dialogMessage
     * @see #DialogPreference_android_dialogIcon
     * @see #DialogPreference_android_positiveButtonText
     * @see #DialogPreference_android_negativeButtonText
     * @see #DialogPreference_android_dialogLayout
     * @see #DialogPreference_dialogIcon
     * @see #DialogPreference_dialogLayout
     * @see #DialogPreference_dialogMessage
     * @see #DialogPreference_dialogTitle
     * @see #DialogPreference_negativeButtonText
     * @see #DialogPreference_positiveButtonText
     */
    public static final int[] DialogPreference={
      0x010101f2, 0x010101f3, 0x010101f4, 0x010101f5, 
      0x010101f6, 0x010101f7, 0x7f03018a, 0x7f03018b, 
      0x7f03018c, 0x7f030190, 0x7f030317, 0x7f030354
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogTitle}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogTitle
     */
    public static final int DialogPreference_android_dialogTitle=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogMessage}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogMessage
     */
    public static final int DialogPreference_android_dialogMessage=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogIcon}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogIcon
     */
    public static final int DialogPreference_android_dialogIcon=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#positiveButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:positiveButtonText
     */
    public static final int DialogPreference_android_positiveButtonText=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#negativeButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:negativeButtonText
     */
    public static final int DialogPreference_android_negativeButtonText=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogLayout}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogLayout
     */
    public static final int DialogPreference_android_dialogLayout=5;
    /**
     * <p>
     * @attr description
     * The icon for the dialog.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dialogIcon
     */
    public static final int DialogPreference_dialogIcon=6;
    /**
     * <p>
     * @attr description
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dialogLayout
     */
    public static final int DialogPreference_dialogLayout=7;
    /**
     * <p>
     * @attr description
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:dialogMessage
     */
    public static final int DialogPreference_dialogMessage=8;
    /**
     * <p>
     * @attr description
     * The title in the dialog.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:dialogTitle
     */
    public static final int DialogPreference_dialogTitle=9;
    /**
     * <p>
     * @attr description
     * The negative button text for the dialog. Set to @null to hide the negative button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:negativeButtonText
     */
    public static final int DialogPreference_negativeButtonText=10;
    /**
     * <p>
     * @attr description
     * The positive button text for the dialog. Set to @null to hide the positive button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:positiveButtonText
     */
    public static final int DialogPreference_positiveButtonText=11;
    /**
     * Attributes that can be used with a DotProgressBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DotProgressBar_amount com.kotlinbaseapplication:amount}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotProgressBar_animationDirection com.kotlinbaseapplication:animationDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotProgressBar_duration com.kotlinbaseapplication:duration}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotProgressBar_endColor com.kotlinbaseapplication:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotProgressBar_startColor com.kotlinbaseapplication:startColor}</code></td><td></td></tr>
     * </table>
     * @see #DotProgressBar_amount
     * @see #DotProgressBar_animationDirection
     * @see #DotProgressBar_duration
     * @see #DotProgressBar_endColor
     * @see #DotProgressBar_startColor
     */
    public static final int[] DotProgressBar={
      0x7f030045, 0x7f030047, 0x7f0301a8, 0x7f0301b2, 
      0x7f0303af
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#amount}
     * attribute's value can be found in the {@link #DotProgressBar} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:amount
     */
    public static final int DotProgressBar_amount=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#animationDirection}
     * attribute's value can be found in the {@link #DotProgressBar} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>left</td><td>ffffffff</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:animationDirection
     */
    public static final int DotProgressBar_animationDirection=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#duration}
     * attribute's value can be found in the {@link #DotProgressBar} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:duration
     */
    public static final int DotProgressBar_duration=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#endColor}
     * attribute's value can be found in the {@link #DotProgressBar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:endColor
     */
    public static final int DotProgressBar_endColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#startColor}
     * attribute's value can be found in the {@link #DotProgressBar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:startColor
     */
    public static final int DotProgressBar_startColor=4;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.kotlinbaseapplication:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.kotlinbaseapplication:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.kotlinbaseapplication:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.kotlinbaseapplication:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.kotlinbaseapplication:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.kotlinbaseapplication:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.kotlinbaseapplication:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.kotlinbaseapplication:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x7f03004d, 0x7f03004e, 0x7f030065, 0x7f030120, 
      0x7f03019f, 0x7f030206, 0x7f0303a1, 0x7f030417
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a EditTextPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #EditTextPreference_useSimpleSummaryProvider com.kotlinbaseapplication:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #EditTextPreference_useSimpleSummaryProvider
     */
    public static final int[] EditTextPreference={
      0x7f03046d
    };
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:useSimpleSummaryProvider
     */
    public static final int EditTextPreference_useSimpleSummaryProvider=0;
    /**
     * Attributes that can be used with a ExtendedFloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_collapsedSize com.kotlinbaseapplication:collapsedSize}</code></td><td>FAB size when collapsed.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_elevation com.kotlinbaseapplication:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_extendMotionSpec com.kotlinbaseapplication:extendMotionSpec}</code></td><td>Motion spec for extend animation.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_hideMotionSpec com.kotlinbaseapplication:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_showMotionSpec com.kotlinbaseapplication:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_shrinkMotionSpec com.kotlinbaseapplication:shrinkMotionSpec}</code></td><td>Motion spec for shrink animation.</td></tr>
     * </table>
     * @see #ExtendedFloatingActionButton_collapsedSize
     * @see #ExtendedFloatingActionButton_elevation
     * @see #ExtendedFloatingActionButton_extendMotionSpec
     * @see #ExtendedFloatingActionButton_hideMotionSpec
     * @see #ExtendedFloatingActionButton_showMotionSpec
     * @see #ExtendedFloatingActionButton_shrinkMotionSpec
     */
    public static final int[] ExtendedFloatingActionButton={
      0x7f03011c, 0x7f0301ad, 0x7f0301d1, 0x7f030213, 
      0x7f030391, 0x7f030396
    };
    /**
     * <p>
     * @attr description
     * FAB size when collapsed.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:collapsedSize
     */
    public static final int ExtendedFloatingActionButton_collapsedSize=0;
    /**
     * <p>
     * @attr description
     * Elevation for the ExtendedFloatingActionButton.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:elevation
     */
    public static final int ExtendedFloatingActionButton_elevation=1;
    /**
     * <p>
     * @attr description
     * Motion spec for extend animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:extendMotionSpec
     */
    public static final int ExtendedFloatingActionButton_extendMotionSpec=2;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:hideMotionSpec
     */
    public static final int ExtendedFloatingActionButton_hideMotionSpec=3;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:showMotionSpec
     */
    public static final int ExtendedFloatingActionButton_showMotionSpec=4;
    /**
     * <p>
     * @attr description
     * Motion spec for shrink animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shrinkMotionSpec
     */
    public static final int ExtendedFloatingActionButton_shrinkMotionSpec=5;
    /**
     * Attributes that can be used with a ExtendedFloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide com.kotlinbaseapplication:behavior_autoHide}</code></td><td>Whether the FAB should automatically hide when there is no space for it.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink com.kotlinbaseapplication:behavior_autoShrink}</code></td><td>Whether the extended FAB should automatically shrink when there is no space for it.</td></tr>
     * </table>
     * @see #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide
     * @see #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink
     */
    public static final int[] ExtendedFloatingActionButton_Behavior_Layout={
      0x7f030074, 0x7f030075
    };
    /**
     * <p>
     * @attr description
     * Whether the extended FAB should automatically hide when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:behavior_autoHide
     */
    public static final int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * <p>
     * @attr description
     * Whether the extended FAB should automatically shrink when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:behavior_autoShrink
     */
    public static final int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink=1;
    /**
     * Attributes that can be used with a FloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTint com.kotlinbaseapplication:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTintMode com.kotlinbaseapplication:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_borderWidth com.kotlinbaseapplication:borderWidth}</code></td><td>The width of the border around the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_elevation com.kotlinbaseapplication:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_ensureMinTouchTargetSize com.kotlinbaseapplication:ensureMinTouchTargetSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabCustomSize com.kotlinbaseapplication:fabCustomSize}</code></td><td>Custom size for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabSize com.kotlinbaseapplication:fabSize}</code></td><td>Size for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hideMotionSpec com.kotlinbaseapplication:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hoveredFocusedTranslationZ com.kotlinbaseapplication:hoveredFocusedTranslationZ}</code></td><td>TranslationZ value for the FAB when hovered, focused, or hovered and focused.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_maxImageSize com.kotlinbaseapplication:maxImageSize}</code></td><td>Maximum icon image size.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_pressedTranslationZ com.kotlinbaseapplication:pressedTranslationZ}</code></td><td>TranslationZ value for the FAB when pressed</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_rippleColor com.kotlinbaseapplication:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_shapeAppearance com.kotlinbaseapplication:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_shapeAppearanceOverlay com.kotlinbaseapplication:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_showMotionSpec com.kotlinbaseapplication:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_useCompatPadding com.kotlinbaseapplication:useCompatPadding}</code></td><td>Enable compat padding.</td></tr>
     * </table>
     * @see #FloatingActionButton_android_enabled
     * @see #FloatingActionButton_backgroundTint
     * @see #FloatingActionButton_backgroundTintMode
     * @see #FloatingActionButton_borderWidth
     * @see #FloatingActionButton_elevation
     * @see #FloatingActionButton_ensureMinTouchTargetSize
     * @see #FloatingActionButton_fabCustomSize
     * @see #FloatingActionButton_fabSize
     * @see #FloatingActionButton_hideMotionSpec
     * @see #FloatingActionButton_hoveredFocusedTranslationZ
     * @see #FloatingActionButton_maxImageSize
     * @see #FloatingActionButton_pressedTranslationZ
     * @see #FloatingActionButton_rippleColor
     * @see #FloatingActionButton_shapeAppearance
     * @see #FloatingActionButton_shapeAppearanceOverlay
     * @see #FloatingActionButton_showMotionSpec
     * @see #FloatingActionButton_useCompatPadding
     */
    public static final int[] FloatingActionButton={
      0x0101000e, 0x7f030060, 0x7f030061, 0x7f03007f, 
      0x7f0301ad, 0x7f0301bb, 0x7f0301d8, 0x7f0301d9, 
      0x7f030213, 0x7f03021f, 0x7f0302de, 0x7f030362, 
      0x7f030374, 0x7f030387, 0x7f03038a, 0x7f030391, 
      0x7f03046b
    };
    /**
     * <p>
     * @attr description
     * Whether the FloatingActionButton is enabled
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int FloatingActionButton_android_enabled=0;
    /**
     * <p>
     * @attr description
     * Background for the FloatingActionButton
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundTint
     */
    public static final int FloatingActionButton_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:backgroundTintMode
     */
    public static final int FloatingActionButton_backgroundTintMode=2;
    /**
     * <p>
     * @attr description
     * The width of the border around the FAB.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:borderWidth
     */
    public static final int FloatingActionButton_borderWidth=3;
    /**
     * <p>
     * @attr description
     * Elevation value for the FAB
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:elevation
     */
    public static final int FloatingActionButton_elevation=4;
    /**
     * <p>
     * @attr description
     * Whether to extend the bounds of the FloatingActionButton to meet
     * @dimen/mtrl_fab_min_touch_target.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ensureMinTouchTargetSize
     */
    public static final int FloatingActionButton_ensureMinTouchTargetSize=5;
    /**
     * <p>
     * @attr description
     * Custom size for the FAB. If this is set, fabSize will be ignored.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:fabCustomSize
     */
    public static final int FloatingActionButton_fabCustomSize=6;
    /**
     * <p>
     * @attr description
     * Size for the FAB. If fabCustomSize is set, this will be ignored.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:fabSize
     */
    public static final int FloatingActionButton_fabSize=7;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:hideMotionSpec
     */
    public static final int FloatingActionButton_hideMotionSpec=8;
    /**
     * <p>
     * @attr description
     * TranslationZ value for the FAB when hovered, focused, or hovered and focused.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:hoveredFocusedTranslationZ
     */
    public static final int FloatingActionButton_hoveredFocusedTranslationZ=9;
    /**
     * <p>
     * @attr description
     * Maximum icon image size.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:maxImageSize
     */
    public static final int FloatingActionButton_maxImageSize=10;
    /**
     * <p>
     * @attr description
     * TranslationZ value for the FAB when pressed
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:pressedTranslationZ
     */
    public static final int FloatingActionButton_pressedTranslationZ=11;
    /**
     * <p>
     * @attr description
     * Ripple color for the FAB.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:rippleColor
     */
    public static final int FloatingActionButton_rippleColor=12;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for FloatingActionButton. Attribute declaration
     * is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearance
     */
    public static final int FloatingActionButton_shapeAppearance=13;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for FloatingActionButton.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearanceOverlay
     */
    public static final int FloatingActionButton_shapeAppearanceOverlay=14;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:showMotionSpec
     */
    public static final int FloatingActionButton_showMotionSpec=15;
    /**
     * <p>
     * @attr description
     * Enable compat padding.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:useCompatPadding
     */
    public static final int FloatingActionButton_useCompatPadding=16;
    /**
     * Attributes that can be used with a FloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_Behavior_Layout_behavior_autoHide com.kotlinbaseapplication:behavior_autoHide}</code></td><td>Whether the FAB should automatically hide when there is no space for it.</td></tr>
     * </table>
     * @see #FloatingActionButton_Behavior_Layout_behavior_autoHide
     */
    public static final int[] FloatingActionButton_Behavior_Layout={
      0x7f030074
    };
    /**
     * <p>
     * @attr description
     * Whether the FAB should automatically hide when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:behavior_autoHide
     */
    public static final int FloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * Attributes that can be used with a FlowLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FlowLayout_itemSpacing com.kotlinbaseapplication:itemSpacing}</code></td><td>Horizontal spacing between two items being laid out.</td></tr>
     * <tr><td><code>{@link #FlowLayout_lineSpacing com.kotlinbaseapplication:lineSpacing}</code></td><td>Vertical Spacing between two lines of items being laid out.</td></tr>
     * </table>
     * @see #FlowLayout_itemSpacing
     * @see #FlowLayout_lineSpacing
     */
    public static final int[] FlowLayout={
      0x7f03024e, 0x7f0302a8
    };
    /**
     * <p>
     * @attr description
     * Horizontal spacing between two items being laid out.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemSpacing
     */
    public static final int FlowLayout_itemSpacing=0;
    /**
     * <p>
     * @attr description
     * Vertical Spacing between two lines of items being laid out.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:lineSpacing
     */
    public static final int FlowLayout_lineSpacing=1;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.kotlinbaseapplication:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.kotlinbaseapplication:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.kotlinbaseapplication:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.kotlinbaseapplication:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.kotlinbaseapplication:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.kotlinbaseapplication:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
      0x7f0301fa, 0x7f0301fb, 0x7f0301fc, 0x7f0301fd, 
      0x7f0301fe, 0x7f0301ff
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.kotlinbaseapplication:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.kotlinbaseapplication:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.kotlinbaseapplication:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.kotlinbaseapplication:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.kotlinbaseapplication:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f0301f8, 0x7f030200, 0x7f030201, 
      0x7f030202, 0x7f030450
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a ForegroundLinearLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foreground android:foreground}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foregroundGravity android:foregroundGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_foregroundInsidePadding com.kotlinbaseapplication:foregroundInsidePadding}</code></td><td>Do not expose publicly, used by ForegroundLinearLayout but never set by any style.</td></tr>
     * </table>
     * @see #ForegroundLinearLayout_android_foreground
     * @see #ForegroundLinearLayout_android_foregroundGravity
     * @see #ForegroundLinearLayout_foregroundInsidePadding
     */
    public static final int[] ForegroundLinearLayout={
      0x01010109, 0x01010200, 0x7f030203
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foreground}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:foreground
     */
    public static final int ForegroundLinearLayout_android_foreground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foregroundGravity}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:foregroundGravity
     */
    public static final int ForegroundLinearLayout_android_foregroundGravity=1;
    /**
     * <p>
     * @attr description
     * Do not expose publicly, used by ForegroundLinearLayout but never set by any style.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:foregroundInsidePadding
     */
    public static final int ForegroundLinearLayout_foregroundInsidePadding=2;
    /**
     * Attributes that can be used with a Fragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Fragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #Fragment_android_name
     * @see #Fragment_android_id
     * @see #Fragment_android_tag
     */
    public static final int[] Fragment={
      0x01010003, 0x010100d0, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int Fragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Fragment_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int Fragment_android_tag=2;
    /**
     * Attributes that can be used with a FragmentContainerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #FragmentContainerView_android_name
     * @see #FragmentContainerView_android_tag
     */
    public static final int[] FragmentContainerView={
      0x01010003, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int FragmentContainerView_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int FragmentContainerView_android_tag=1;
    /**
     * Attributes that can be used with a FragmentNavigator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentNavigator_android_name android:name}</code></td><td></td></tr>
     * </table>
     * @see #FragmentNavigator_android_name
     */
    public static final int[] FragmentNavigator={
      0x01010003
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentNavigator} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int FragmentNavigator_android_name=0;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a ImageFilterView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ImageFilterView_altSrc com.kotlinbaseapplication:altSrc}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_brightness com.kotlinbaseapplication:brightness}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_contrast com.kotlinbaseapplication:contrast}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_crossfade com.kotlinbaseapplication:crossfade}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_overlay com.kotlinbaseapplication:overlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_round com.kotlinbaseapplication:round}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_roundPercent com.kotlinbaseapplication:roundPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_saturation com.kotlinbaseapplication:saturation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_warmth com.kotlinbaseapplication:warmth}</code></td><td></td></tr>
     * </table>
     * @see #ImageFilterView_altSrc
     * @see #ImageFilterView_brightness
     * @see #ImageFilterView_contrast
     * @see #ImageFilterView_crossfade
     * @see #ImageFilterView_overlay
     * @see #ImageFilterView_round
     * @see #ImageFilterView_roundPercent
     * @see #ImageFilterView_saturation
     * @see #ImageFilterView_warmth
     */
    public static final int[] ImageFilterView={
      0x7f030043, 0x7f030098, 0x7f030159, 0x7f03016d, 
      0x7f03032e, 0x7f030375, 0x7f030376, 0x7f030377, 
      0x7f030474
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#altSrc}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:altSrc
     */
    public static final int ImageFilterView_altSrc=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#brightness}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:brightness
     */
    public static final int ImageFilterView_brightness=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#contrast}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:contrast
     */
    public static final int ImageFilterView_contrast=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#crossfade}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:crossfade
     */
    public static final int ImageFilterView_crossfade=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#overlay}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:overlay
     */
    public static final int ImageFilterView_overlay=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#round}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:round
     */
    public static final int ImageFilterView_round=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#roundPercent}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:roundPercent
     */
    public static final int ImageFilterView_roundPercent=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#saturation}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:saturation
     */
    public static final int ImageFilterView_saturation=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#warmth}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:warmth
     */
    public static final int ImageFilterView_warmth=8;
    /**
     * Attributes that can be used with a Insets.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Insets_paddingBottomSystemWindowInsets com.kotlinbaseapplication:paddingBottomSystemWindowInsets}</code></td><td>Just adding the parameters that we need for now.</td></tr>
     * <tr><td><code>{@link #Insets_paddingLeftSystemWindowInsets com.kotlinbaseapplication:paddingLeftSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Insets_paddingRightSystemWindowInsets com.kotlinbaseapplication:paddingRightSystemWindowInsets}</code></td><td></td></tr>
     * </table>
     * @see #Insets_paddingBottomSystemWindowInsets
     * @see #Insets_paddingLeftSystemWindowInsets
     * @see #Insets_paddingRightSystemWindowInsets
     */
    public static final int[] Insets={
      0x7f030330, 0x7f030332, 0x7f030333
    };
    /**
     * <p>
     * @attr description
     * Just adding the parameters that we need for now. We can add others if we need them, but
     * ideally we'll be able to use https://github.com/chrisbanes/insetter once it's ready.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:paddingBottomSystemWindowInsets
     */
    public static final int Insets_paddingBottomSystemWindowInsets=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#paddingLeftSystemWindowInsets}
     * attribute's value can be found in the {@link #Insets} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:paddingLeftSystemWindowInsets
     */
    public static final int Insets_paddingLeftSystemWindowInsets=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#paddingRightSystemWindowInsets}
     * attribute's value can be found in the {@link #Insets} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:paddingRightSystemWindowInsets
     */
    public static final int Insets_paddingRightSystemWindowInsets=2;
    /**
     * Attributes that can be used with a KeyAttribute.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyAttribute_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_curveFit com.kotlinbaseapplication:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_framePosition com.kotlinbaseapplication:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_motionProgress com.kotlinbaseapplication:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_motionTarget com.kotlinbaseapplication:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_transitionEasing com.kotlinbaseapplication:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_transitionPathRotate com.kotlinbaseapplication:transitionPathRotate}</code></td><td></td></tr>
     * </table>
     * @see #KeyAttribute_android_alpha
     * @see #KeyAttribute_android_transformPivotX
     * @see #KeyAttribute_android_transformPivotY
     * @see #KeyAttribute_android_translationX
     * @see #KeyAttribute_android_translationY
     * @see #KeyAttribute_android_scaleX
     * @see #KeyAttribute_android_scaleY
     * @see #KeyAttribute_android_rotation
     * @see #KeyAttribute_android_rotationX
     * @see #KeyAttribute_android_rotationY
     * @see #KeyAttribute_android_translationZ
     * @see #KeyAttribute_android_elevation
     * @see #KeyAttribute_curveFit
     * @see #KeyAttribute_framePosition
     * @see #KeyAttribute_motionProgress
     * @see #KeyAttribute_motionTarget
     * @see #KeyAttribute_transitionEasing
     * @see #KeyAttribute_transitionPathRotate
     */
    public static final int[] KeyAttribute={
      0x0101031f, 0x01010320, 0x01010321, 0x01010322, 
      0x01010323, 0x01010324, 0x01010325, 0x01010326, 
      0x01010327, 0x01010328, 0x010103fa, 0x01010440, 
      0x7f03016f, 0x7f030205, 0x7f0302f3, 0x7f0302f5, 
      0x7f030449, 0x7f03044b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int KeyAttribute_android_alpha=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static final int KeyAttribute_android_transformPivotX=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static final int KeyAttribute_android_transformPivotY=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int KeyAttribute_android_translationX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int KeyAttribute_android_translationY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int KeyAttribute_android_scaleX=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int KeyAttribute_android_scaleY=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int KeyAttribute_android_rotation=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int KeyAttribute_android_rotationX=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int KeyAttribute_android_rotationY=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int KeyAttribute_android_translationZ=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int KeyAttribute_android_elevation=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:curveFit
     */
    public static final int KeyAttribute_curveFit=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:framePosition
     */
    public static final int KeyAttribute_framePosition=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionProgress}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionProgress
     */
    public static final int KeyAttribute_motionProgress=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:motionTarget
     */
    public static final int KeyAttribute_motionTarget=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:transitionEasing
     */
    public static final int KeyAttribute_transitionEasing=16;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:transitionPathRotate
     */
    public static final int KeyAttribute_transitionPathRotate=17;
    /**
     * Attributes that can be used with a KeyCycle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyCycle_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_curveFit com.kotlinbaseapplication:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_framePosition com.kotlinbaseapplication:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_motionProgress com.kotlinbaseapplication:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_motionTarget com.kotlinbaseapplication:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_transitionEasing com.kotlinbaseapplication:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_transitionPathRotate com.kotlinbaseapplication:transitionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_waveOffset com.kotlinbaseapplication:waveOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_wavePeriod com.kotlinbaseapplication:wavePeriod}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_waveShape com.kotlinbaseapplication:waveShape}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_waveVariesBy com.kotlinbaseapplication:waveVariesBy}</code></td><td></td></tr>
     * </table>
     * @see #KeyCycle_android_alpha
     * @see #KeyCycle_android_translationX
     * @see #KeyCycle_android_translationY
     * @see #KeyCycle_android_scaleX
     * @see #KeyCycle_android_scaleY
     * @see #KeyCycle_android_rotation
     * @see #KeyCycle_android_rotationX
     * @see #KeyCycle_android_rotationY
     * @see #KeyCycle_android_translationZ
     * @see #KeyCycle_android_elevation
     * @see #KeyCycle_curveFit
     * @see #KeyCycle_framePosition
     * @see #KeyCycle_motionProgress
     * @see #KeyCycle_motionTarget
     * @see #KeyCycle_transitionEasing
     * @see #KeyCycle_transitionPathRotate
     * @see #KeyCycle_waveOffset
     * @see #KeyCycle_wavePeriod
     * @see #KeyCycle_waveShape
     * @see #KeyCycle_waveVariesBy
     */
    public static final int[] KeyCycle={
      0x0101031f, 0x01010322, 0x01010323, 0x01010324, 
      0x01010325, 0x01010326, 0x01010327, 0x01010328, 
      0x010103fa, 0x01010440, 0x7f03016f, 0x7f030205, 
      0x7f0302f3, 0x7f0302f5, 0x7f030449, 0x7f03044b, 
      0x7f030476, 0x7f030477, 0x7f030478, 0x7f030479
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int KeyCycle_android_alpha=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int KeyCycle_android_translationX=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int KeyCycle_android_translationY=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int KeyCycle_android_scaleX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int KeyCycle_android_scaleY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int KeyCycle_android_rotation=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int KeyCycle_android_rotationX=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int KeyCycle_android_rotationY=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int KeyCycle_android_translationZ=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int KeyCycle_android_elevation=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:curveFit
     */
    public static final int KeyCycle_curveFit=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:framePosition
     */
    public static final int KeyCycle_framePosition=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionProgress}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionProgress
     */
    public static final int KeyCycle_motionProgress=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:motionTarget
     */
    public static final int KeyCycle_motionTarget=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:transitionEasing
     */
    public static final int KeyCycle_transitionEasing=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:transitionPathRotate
     */
    public static final int KeyCycle_transitionPathRotate=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#waveOffset}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:waveOffset
     */
    public static final int KeyCycle_waveOffset=16;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#wavePeriod}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:wavePeriod
     */
    public static final int KeyCycle_wavePeriod=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#waveShape}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>6</td><td></td></tr>
     * <tr><td>cos</td><td>5</td><td></td></tr>
     * <tr><td>reverseSawtooth</td><td>4</td><td></td></tr>
     * <tr><td>sawtooth</td><td>3</td><td></td></tr>
     * <tr><td>sin</td><td>0</td><td></td></tr>
     * <tr><td>square</td><td>1</td><td></td></tr>
     * <tr><td>triangle</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:waveShape
     */
    public static final int KeyCycle_waveShape=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#waveVariesBy}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>position</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:waveVariesBy
     */
    public static final int KeyCycle_waveVariesBy=19;
    public static final int[] KeyFrame={
    };
    public static final int[] KeyFramesAcceleration={
    };
    public static final int[] KeyFramesVelocity={
    };
    /**
     * Attributes that can be used with a KeyPosition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyPosition_curveFit com.kotlinbaseapplication:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_drawPath com.kotlinbaseapplication:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_framePosition com.kotlinbaseapplication:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_keyPositionType com.kotlinbaseapplication:keyPositionType}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_motionTarget com.kotlinbaseapplication:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_pathMotionArc com.kotlinbaseapplication:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentHeight com.kotlinbaseapplication:percentHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentWidth com.kotlinbaseapplication:percentWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentX com.kotlinbaseapplication:percentX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentY com.kotlinbaseapplication:percentY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_sizePercent com.kotlinbaseapplication:sizePercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_transitionEasing com.kotlinbaseapplication:transitionEasing}</code></td><td></td></tr>
     * </table>
     * @see #KeyPosition_curveFit
     * @see #KeyPosition_drawPath
     * @see #KeyPosition_framePosition
     * @see #KeyPosition_keyPositionType
     * @see #KeyPosition_motionTarget
     * @see #KeyPosition_pathMotionArc
     * @see #KeyPosition_percentHeight
     * @see #KeyPosition_percentWidth
     * @see #KeyPosition_percentX
     * @see #KeyPosition_percentY
     * @see #KeyPosition_sizePercent
     * @see #KeyPosition_transitionEasing
     */
    public static final int[] KeyPosition={
      0x7f03016f, 0x7f03019a, 0x7f030205, 0x7f030256, 
      0x7f0302f5, 0x7f03033f, 0x7f030341, 0x7f030342, 
      0x7f030343, 0x7f030344, 0x7f03039b, 0x7f030449
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:curveFit
     */
    public static final int KeyPosition_curveFit=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#drawPath}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:drawPath
     */
    public static final int KeyPosition_drawPath=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:framePosition
     */
    public static final int KeyPosition_framePosition=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#keyPositionType}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>deltaRelative</td><td>0</td><td></td></tr>
     * <tr><td>parentRelative</td><td>2</td><td></td></tr>
     * <tr><td>pathRelative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:keyPositionType
     */
    public static final int KeyPosition_keyPositionType=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:motionTarget
     */
    public static final int KeyPosition_motionTarget=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:pathMotionArc
     */
    public static final int KeyPosition_pathMotionArc=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#percentHeight}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:percentHeight
     */
    public static final int KeyPosition_percentHeight=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#percentWidth}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:percentWidth
     */
    public static final int KeyPosition_percentWidth=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#percentX}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:percentX
     */
    public static final int KeyPosition_percentX=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#percentY}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:percentY
     */
    public static final int KeyPosition_percentY=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#sizePercent}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:sizePercent
     */
    public static final int KeyPosition_sizePercent=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:transitionEasing
     */
    public static final int KeyPosition_transitionEasing=11;
    /**
     * Attributes that can be used with a KeyTimeCycle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_curveFit com.kotlinbaseapplication:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_framePosition com.kotlinbaseapplication:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_motionProgress com.kotlinbaseapplication:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_motionTarget com.kotlinbaseapplication:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_transitionEasing com.kotlinbaseapplication:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_transitionPathRotate com.kotlinbaseapplication:transitionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_waveDecay com.kotlinbaseapplication:waveDecay}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_waveOffset com.kotlinbaseapplication:waveOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_wavePeriod com.kotlinbaseapplication:wavePeriod}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_waveShape com.kotlinbaseapplication:waveShape}</code></td><td></td></tr>
     * </table>
     * @see #KeyTimeCycle_android_alpha
     * @see #KeyTimeCycle_android_translationX
     * @see #KeyTimeCycle_android_translationY
     * @see #KeyTimeCycle_android_scaleX
     * @see #KeyTimeCycle_android_scaleY
     * @see #KeyTimeCycle_android_rotation
     * @see #KeyTimeCycle_android_rotationX
     * @see #KeyTimeCycle_android_rotationY
     * @see #KeyTimeCycle_android_translationZ
     * @see #KeyTimeCycle_android_elevation
     * @see #KeyTimeCycle_curveFit
     * @see #KeyTimeCycle_framePosition
     * @see #KeyTimeCycle_motionProgress
     * @see #KeyTimeCycle_motionTarget
     * @see #KeyTimeCycle_transitionEasing
     * @see #KeyTimeCycle_transitionPathRotate
     * @see #KeyTimeCycle_waveDecay
     * @see #KeyTimeCycle_waveOffset
     * @see #KeyTimeCycle_wavePeriod
     * @see #KeyTimeCycle_waveShape
     */
    public static final int[] KeyTimeCycle={
      0x0101031f, 0x01010322, 0x01010323, 0x01010324, 
      0x01010325, 0x01010326, 0x01010327, 0x01010328, 
      0x010103fa, 0x01010440, 0x7f03016f, 0x7f030205, 
      0x7f0302f3, 0x7f0302f5, 0x7f030449, 0x7f03044b, 
      0x7f030475, 0x7f030476, 0x7f030477, 0x7f030478
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int KeyTimeCycle_android_alpha=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int KeyTimeCycle_android_translationX=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int KeyTimeCycle_android_translationY=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int KeyTimeCycle_android_scaleX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int KeyTimeCycle_android_scaleY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int KeyTimeCycle_android_rotation=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int KeyTimeCycle_android_rotationX=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int KeyTimeCycle_android_rotationY=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int KeyTimeCycle_android_translationZ=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int KeyTimeCycle_android_elevation=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:curveFit
     */
    public static final int KeyTimeCycle_curveFit=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:framePosition
     */
    public static final int KeyTimeCycle_framePosition=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionProgress}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionProgress
     */
    public static final int KeyTimeCycle_motionProgress=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:motionTarget
     */
    public static final int KeyTimeCycle_motionTarget=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:transitionEasing
     */
    public static final int KeyTimeCycle_transitionEasing=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:transitionPathRotate
     */
    public static final int KeyTimeCycle_transitionPathRotate=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#waveDecay}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:waveDecay
     */
    public static final int KeyTimeCycle_waveDecay=16;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#waveOffset}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:waveOffset
     */
    public static final int KeyTimeCycle_waveOffset=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#wavePeriod}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:wavePeriod
     */
    public static final int KeyTimeCycle_wavePeriod=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#waveShape}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>6</td><td></td></tr>
     * <tr><td>cos</td><td>5</td><td></td></tr>
     * <tr><td>reverseSawtooth</td><td>4</td><td></td></tr>
     * <tr><td>sawtooth</td><td>3</td><td></td></tr>
     * <tr><td>sin</td><td>0</td><td></td></tr>
     * <tr><td>square</td><td>1</td><td></td></tr>
     * <tr><td>triangle</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:waveShape
     */
    public static final int KeyTimeCycle_waveShape=19;
    /**
     * Attributes that can be used with a KeyTrigger.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyTrigger_framePosition com.kotlinbaseapplication:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_motionTarget com.kotlinbaseapplication:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_motion_postLayoutCollision com.kotlinbaseapplication:motion_postLayoutCollision}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_motion_triggerOnCollision com.kotlinbaseapplication:motion_triggerOnCollision}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_onCross com.kotlinbaseapplication:onCross}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_onNegativeCross com.kotlinbaseapplication:onNegativeCross}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_onPositiveCross com.kotlinbaseapplication:onPositiveCross}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_triggerId com.kotlinbaseapplication:triggerId}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_triggerReceiver com.kotlinbaseapplication:triggerReceiver}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_triggerSlack com.kotlinbaseapplication:triggerSlack}</code></td><td></td></tr>
     * </table>
     * @see #KeyTrigger_framePosition
     * @see #KeyTrigger_motionTarget
     * @see #KeyTrigger_motion_postLayoutCollision
     * @see #KeyTrigger_motion_triggerOnCollision
     * @see #KeyTrigger_onCross
     * @see #KeyTrigger_onNegativeCross
     * @see #KeyTrigger_onPositiveCross
     * @see #KeyTrigger_triggerId
     * @see #KeyTrigger_triggerReceiver
     * @see #KeyTrigger_triggerSlack
     */
    public static final int[] KeyTrigger={
      0x7f030205, 0x7f0302f5, 0x7f0302f6, 0x7f0302f7, 
      0x7f03031d, 0x7f03031f, 0x7f030320, 0x7f03044d, 
      0x7f03044e, 0x7f03044f
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:framePosition
     */
    public static final int KeyTrigger_framePosition=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:motionTarget
     */
    public static final int KeyTrigger_motionTarget=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motion_postLayoutCollision}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:motion_postLayoutCollision
     */
    public static final int KeyTrigger_motion_postLayoutCollision=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motion_triggerOnCollision}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:motion_triggerOnCollision
     */
    public static final int KeyTrigger_motion_triggerOnCollision=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#onCross}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:onCross
     */
    public static final int KeyTrigger_onCross=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#onNegativeCross}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:onNegativeCross
     */
    public static final int KeyTrigger_onNegativeCross=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#onPositiveCross}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:onPositiveCross
     */
    public static final int KeyTrigger_onPositiveCross=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#triggerId}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:triggerId
     */
    public static final int KeyTrigger_triggerId=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#triggerReceiver}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:triggerReceiver
     */
    public static final int KeyTrigger_triggerReceiver=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#triggerSlack}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:triggerSlack
     */
    public static final int KeyTrigger_triggerSlack=9;
    /**
     * Attributes that can be used with a Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Layout_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_barrierAllowsGoneWidgets com.kotlinbaseapplication:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_barrierDirection com.kotlinbaseapplication:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_barrierMargin com.kotlinbaseapplication:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_chainUseRtl com.kotlinbaseapplication:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_constraint_referenced_ids com.kotlinbaseapplication:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constrainedHeight com.kotlinbaseapplication:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constrainedWidth com.kotlinbaseapplication:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBaseline_creator com.kotlinbaseapplication:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBaseline_toBaselineOf com.kotlinbaseapplication:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBottom_creator com.kotlinbaseapplication:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBottom_toBottomOf com.kotlinbaseapplication:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBottom_toTopOf com.kotlinbaseapplication:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintCircle com.kotlinbaseapplication:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintCircleAngle com.kotlinbaseapplication:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintCircleRadius com.kotlinbaseapplication:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintDimensionRatio com.kotlinbaseapplication:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintEnd_toEndOf com.kotlinbaseapplication:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintEnd_toStartOf com.kotlinbaseapplication:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintGuide_begin com.kotlinbaseapplication:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintGuide_end com.kotlinbaseapplication:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintGuide_percent com.kotlinbaseapplication:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_default com.kotlinbaseapplication:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_max com.kotlinbaseapplication:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_min com.kotlinbaseapplication:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_percent com.kotlinbaseapplication:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHorizontal_bias com.kotlinbaseapplication:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHorizontal_chainStyle com.kotlinbaseapplication:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHorizontal_weight com.kotlinbaseapplication:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintLeft_creator com.kotlinbaseapplication:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintLeft_toLeftOf com.kotlinbaseapplication:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintLeft_toRightOf com.kotlinbaseapplication:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintRight_creator com.kotlinbaseapplication:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintRight_toLeftOf com.kotlinbaseapplication:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintRight_toRightOf com.kotlinbaseapplication:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintStart_toEndOf com.kotlinbaseapplication:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintStart_toStartOf com.kotlinbaseapplication:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintTop_creator com.kotlinbaseapplication:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintTop_toBottomOf com.kotlinbaseapplication:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintTop_toTopOf com.kotlinbaseapplication:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintVertical_bias com.kotlinbaseapplication:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintVertical_chainStyle com.kotlinbaseapplication:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintVertical_weight com.kotlinbaseapplication:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_default com.kotlinbaseapplication:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_max com.kotlinbaseapplication:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_min com.kotlinbaseapplication:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_percent com.kotlinbaseapplication:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_editor_absoluteX com.kotlinbaseapplication:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_editor_absoluteY com.kotlinbaseapplication:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginBottom com.kotlinbaseapplication:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginEnd com.kotlinbaseapplication:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginLeft com.kotlinbaseapplication:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginRight com.kotlinbaseapplication:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginStart com.kotlinbaseapplication:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginTop com.kotlinbaseapplication:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_maxHeight com.kotlinbaseapplication:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_maxWidth com.kotlinbaseapplication:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_minHeight com.kotlinbaseapplication:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_minWidth com.kotlinbaseapplication:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #Layout_android_orientation
     * @see #Layout_android_layout_width
     * @see #Layout_android_layout_height
     * @see #Layout_android_layout_marginLeft
     * @see #Layout_android_layout_marginTop
     * @see #Layout_android_layout_marginRight
     * @see #Layout_android_layout_marginBottom
     * @see #Layout_android_layout_marginStart
     * @see #Layout_android_layout_marginEnd
     * @see #Layout_barrierAllowsGoneWidgets
     * @see #Layout_barrierDirection
     * @see #Layout_barrierMargin
     * @see #Layout_chainUseRtl
     * @see #Layout_constraint_referenced_ids
     * @see #Layout_layout_constrainedHeight
     * @see #Layout_layout_constrainedWidth
     * @see #Layout_layout_constraintBaseline_creator
     * @see #Layout_layout_constraintBaseline_toBaselineOf
     * @see #Layout_layout_constraintBottom_creator
     * @see #Layout_layout_constraintBottom_toBottomOf
     * @see #Layout_layout_constraintBottom_toTopOf
     * @see #Layout_layout_constraintCircle
     * @see #Layout_layout_constraintCircleAngle
     * @see #Layout_layout_constraintCircleRadius
     * @see #Layout_layout_constraintDimensionRatio
     * @see #Layout_layout_constraintEnd_toEndOf
     * @see #Layout_layout_constraintEnd_toStartOf
     * @see #Layout_layout_constraintGuide_begin
     * @see #Layout_layout_constraintGuide_end
     * @see #Layout_layout_constraintGuide_percent
     * @see #Layout_layout_constraintHeight_default
     * @see #Layout_layout_constraintHeight_max
     * @see #Layout_layout_constraintHeight_min
     * @see #Layout_layout_constraintHeight_percent
     * @see #Layout_layout_constraintHorizontal_bias
     * @see #Layout_layout_constraintHorizontal_chainStyle
     * @see #Layout_layout_constraintHorizontal_weight
     * @see #Layout_layout_constraintLeft_creator
     * @see #Layout_layout_constraintLeft_toLeftOf
     * @see #Layout_layout_constraintLeft_toRightOf
     * @see #Layout_layout_constraintRight_creator
     * @see #Layout_layout_constraintRight_toLeftOf
     * @see #Layout_layout_constraintRight_toRightOf
     * @see #Layout_layout_constraintStart_toEndOf
     * @see #Layout_layout_constraintStart_toStartOf
     * @see #Layout_layout_constraintTop_creator
     * @see #Layout_layout_constraintTop_toBottomOf
     * @see #Layout_layout_constraintTop_toTopOf
     * @see #Layout_layout_constraintVertical_bias
     * @see #Layout_layout_constraintVertical_chainStyle
     * @see #Layout_layout_constraintVertical_weight
     * @see #Layout_layout_constraintWidth_default
     * @see #Layout_layout_constraintWidth_max
     * @see #Layout_layout_constraintWidth_min
     * @see #Layout_layout_constraintWidth_percent
     * @see #Layout_layout_editor_absoluteX
     * @see #Layout_layout_editor_absoluteY
     * @see #Layout_layout_goneMarginBottom
     * @see #Layout_layout_goneMarginEnd
     * @see #Layout_layout_goneMarginLeft
     * @see #Layout_layout_goneMarginRight
     * @see #Layout_layout_goneMarginStart
     * @see #Layout_layout_goneMarginTop
     * @see #Layout_maxHeight
     * @see #Layout_maxWidth
     * @see #Layout_minHeight
     * @see #Layout_minWidth
     */
    public static final int[] Layout={
      0x010100c4, 0x010100f4, 0x010100f5, 0x010100f7, 
      0x010100f8, 0x010100f9, 0x010100fa, 0x010103b5, 
      0x010103b6, 0x7f030071, 0x7f030072, 0x7f030073, 
      0x7f0300e6, 0x7f030147, 0x7f03026b, 0x7f03026c, 
      0x7f03026d, 0x7f03026e, 0x7f03026f, 0x7f030270, 
      0x7f030271, 0x7f030272, 0x7f030273, 0x7f030274, 
      0x7f030275, 0x7f030276, 0x7f030277, 0x7f030278, 
      0x7f030279, 0x7f03027a, 0x7f03027b, 0x7f03027c, 
      0x7f03027d, 0x7f03027e, 0x7f03027f, 0x7f030280, 
      0x7f030281, 0x7f030282, 0x7f030283, 0x7f030284, 
      0x7f030285, 0x7f030286, 0x7f030287, 0x7f030288, 
      0x7f030289, 0x7f03028b, 0x7f03028c, 0x7f03028d, 
      0x7f03028e, 0x7f03028f, 0x7f030290, 0x7f030291, 
      0x7f030292, 0x7f030293, 0x7f030294, 0x7f030296, 
      0x7f030297, 0x7f030298, 0x7f030299, 0x7f03029a, 
      0x7f03029b, 0x7f03029c, 0x7f03029d, 0x7f0302dd, 
      0x7f0302e1, 0x7f0302e5, 0x7f0302e9
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int Layout_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static final int Layout_android_layout_marginLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static final int Layout_android_layout_marginTop=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static final int Layout_android_layout_marginRight=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static final int Layout_android_layout_marginBottom=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static final int Layout_android_layout_marginStart=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static final int Layout_android_layout_marginEnd=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:barrierAllowsGoneWidgets
     */
    public static final int Layout_barrierAllowsGoneWidgets=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:barrierDirection
     */
    public static final int Layout_barrierDirection=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:barrierMargin
     */
    public static final int Layout_barrierMargin=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:chainUseRtl
     */
    public static final int Layout_chainUseRtl=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:constraint_referenced_ids
     */
    public static final int Layout_constraint_referenced_ids=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constrainedHeight
     */
    public static final int Layout_layout_constrainedHeight=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constrainedWidth
     */
    public static final int Layout_layout_constrainedWidth=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBaseline_creator
     */
    public static final int Layout_layout_constraintBaseline_creator=16;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBaseline_toBaselineOf
     */
    public static final int Layout_layout_constraintBaseline_toBaselineOf=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_creator
     */
    public static final int Layout_layout_constraintBottom_creator=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_toBottomOf
     */
    public static final int Layout_layout_constraintBottom_toBottomOf=19;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintBottom_toTopOf
     */
    public static final int Layout_layout_constraintBottom_toTopOf=20;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircle
     */
    public static final int Layout_layout_constraintCircle=21;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircleAngle
     */
    public static final int Layout_layout_constraintCircleAngle=22;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintCircleRadius
     */
    public static final int Layout_layout_constraintCircleRadius=23;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layout_constraintDimensionRatio
     */
    public static final int Layout_layout_constraintDimensionRatio=24;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintEnd_toEndOf
     */
    public static final int Layout_layout_constraintEnd_toEndOf=25;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintEnd_toStartOf
     */
    public static final int Layout_layout_constraintEnd_toStartOf=26;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_begin
     */
    public static final int Layout_layout_constraintGuide_begin=27;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_end
     */
    public static final int Layout_layout_constraintGuide_end=28;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintGuide_percent
     */
    public static final int Layout_layout_constraintGuide_percent=29;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_default
     */
    public static final int Layout_layout_constraintHeight_default=30;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_max
     */
    public static final int Layout_layout_constraintHeight_max=31;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_min
     */
    public static final int Layout_layout_constraintHeight_min=32;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHeight_percent
     */
    public static final int Layout_layout_constraintHeight_percent=33;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_bias
     */
    public static final int Layout_layout_constraintHorizontal_bias=34;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_chainStyle
     */
    public static final int Layout_layout_constraintHorizontal_chainStyle=35;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintHorizontal_weight
     */
    public static final int Layout_layout_constraintHorizontal_weight=36;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_creator
     */
    public static final int Layout_layout_constraintLeft_creator=37;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_toLeftOf
     */
    public static final int Layout_layout_constraintLeft_toLeftOf=38;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintLeft_toRightOf
     */
    public static final int Layout_layout_constraintLeft_toRightOf=39;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_creator
     */
    public static final int Layout_layout_constraintRight_creator=40;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_toLeftOf
     */
    public static final int Layout_layout_constraintRight_toLeftOf=41;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintRight_toRightOf
     */
    public static final int Layout_layout_constraintRight_toRightOf=42;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintStart_toEndOf
     */
    public static final int Layout_layout_constraintStart_toEndOf=43;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintStart_toStartOf
     */
    public static final int Layout_layout_constraintStart_toStartOf=44;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_creator
     */
    public static final int Layout_layout_constraintTop_creator=45;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_toBottomOf
     */
    public static final int Layout_layout_constraintTop_toBottomOf=46;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTop_toTopOf
     */
    public static final int Layout_layout_constraintTop_toTopOf=47;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_bias
     */
    public static final int Layout_layout_constraintVertical_bias=48;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_chainStyle
     */
    public static final int Layout_layout_constraintVertical_chainStyle=49;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintVertical_weight
     */
    public static final int Layout_layout_constraintVertical_weight=50;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_default
     */
    public static final int Layout_layout_constraintWidth_default=51;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_max
     */
    public static final int Layout_layout_constraintWidth_max=52;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_min
     */
    public static final int Layout_layout_constraintWidth_min=53;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:layout_constraintWidth_percent
     */
    public static final int Layout_layout_constraintWidth_percent=54;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_editor_absoluteX
     */
    public static final int Layout_layout_editor_absoluteX=55;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_editor_absoluteY
     */
    public static final int Layout_layout_editor_absoluteY=56;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginBottom
     */
    public static final int Layout_layout_goneMarginBottom=57;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginEnd
     */
    public static final int Layout_layout_goneMarginEnd=58;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginLeft
     */
    public static final int Layout_layout_goneMarginLeft=59;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginRight
     */
    public static final int Layout_layout_goneMarginRight=60;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginStart
     */
    public static final int Layout_layout_goneMarginStart=61;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:layout_goneMarginTop
     */
    public static final int Layout_layout_goneMarginTop=62;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#maxHeight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:maxHeight
     */
    public static final int Layout_maxHeight=63;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#maxWidth}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:maxWidth
     */
    public static final int Layout_maxWidth=64;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#minHeight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:minHeight
     */
    public static final int Layout_minHeight=65;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#minWidth}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:minWidth
     */
    public static final int Layout_minWidth=66;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.kotlinbaseapplication:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.kotlinbaseapplication:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.kotlinbaseapplication:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.kotlinbaseapplication:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f030193, 0x7f030195, 0x7f0302e2, 
      0x7f030390
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a LinearProgressIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearProgressIndicator_indeterminateAnimationType com.kotlinbaseapplication:indeterminateAnimationType}</code></td><td>The animation style of the indeterminate mode.</td></tr>
     * <tr><td><code>{@link #LinearProgressIndicator_indicatorDirectionLinear com.kotlinbaseapplication:indicatorDirectionLinear}</code></td><td>The direction in which the linear indicator progresses, in the determinate
     * mode, and is animated, in the indeterminate mode.</td></tr>
     * </table>
     * @see #LinearProgressIndicator_indeterminateAnimationType
     * @see #LinearProgressIndicator_indicatorDirectionLinear
     */
    public static final int[] LinearProgressIndicator={
      0x7f03022d, 0x7f030231
    };
    /**
     * <p>
     * @attr description
     * The animation style of the indeterminate mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>seamless</td><td>0</td><td>The track will be filled with connected segments in different colors.
     * This type is only available when there are three or more indicator
     * colors. The color of the new segment will alternate.</td></tr>
     * <tr><td>spacing</td><td>1</td><td>There will be two segments with spacing between each other swiping the
     * track in each cycle. They will be in the same color, which will
     * alternate between cycles.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:indeterminateAnimationType
     */
    public static final int LinearProgressIndicator_indeterminateAnimationType=0;
    /**
     * <p>
     * @attr description
     * The direction in which the linear indicator progresses, in the determinate
     * mode, and is animated, in the indeterminate mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>endToStart</td><td>3</td><td>Animated from the end position to the start position of the track.
     * This will be same as the rightToLeft for API before 17.</td></tr>
     * <tr><td>leftToRight</td><td>0</td><td>Animated from the left end to the right end of the track.</td></tr>
     * <tr><td>rightToLeft</td><td>1</td><td>Animated from the right end to the left end of the track.</td></tr>
     * <tr><td>startToEnd</td><td>2</td><td>Animated from the start position to the end position of the track.
     * This will be same as the leftToRight for API before 17.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:indicatorDirectionLinear
     */
    public static final int LinearProgressIndicator_indicatorDirectionLinear=1;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a ListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entries com.kotlinbaseapplication:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #ListPreference_entryValues com.kotlinbaseapplication:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * <tr><td><code>{@link #ListPreference_useSimpleSummaryProvider com.kotlinbaseapplication:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #ListPreference_android_entries
     * @see #ListPreference_android_entryValues
     * @see #ListPreference_entries
     * @see #ListPreference_entryValues
     * @see #ListPreference_useSimpleSummaryProvider
     */
    public static final int[] ListPreference={
      0x010100b2, 0x010101f8, 0x7f0301bd, 0x7f0301be, 
      0x7f03046d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int ListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int ListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:entries
     */
    public static final int ListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:entryValues
     */
    public static final int ListPreference_entryValues=3;
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:useSimpleSummaryProvider
     */
    public static final int ListPreference_useSimpleSummaryProvider=4;
    /**
     * Attributes that can be used with a LoadingImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LoadingImageView_circleCrop com.kotlinbaseapplication:circleCrop}</code></td><td></td></tr>
     * <tr><td><code>{@link #LoadingImageView_imageAspectRatio com.kotlinbaseapplication:imageAspectRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #LoadingImageView_imageAspectRatioAdjust com.kotlinbaseapplication:imageAspectRatioAdjust}</code></td><td></td></tr>
     * </table>
     * @see #LoadingImageView_circleCrop
     * @see #LoadingImageView_imageAspectRatio
     * @see #LoadingImageView_imageAspectRatioAdjust
     */
    public static final int[] LoadingImageView={
      0x7f030106, 0x7f03022a, 0x7f03022b
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#circleCrop}
     * attribute's value can be found in the {@link #LoadingImageView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:circleCrop
     */
    public static final int LoadingImageView_circleCrop=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#imageAspectRatio}
     * attribute's value can be found in the {@link #LoadingImageView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:imageAspectRatio
     */
    public static final int LoadingImageView_imageAspectRatio=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#imageAspectRatioAdjust}
     * attribute's value can be found in the {@link #LoadingImageView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjust_height</td><td>2</td><td></td></tr>
     * <tr><td>adjust_width</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:imageAspectRatioAdjust
     */
    public static final int LoadingImageView_imageAspectRatioAdjust=2;
    /**
     * Attributes that can be used with a MapAttrs.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MapAttrs_ambientEnabled com.kotlinbaseapplication:ambientEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_cameraBearing com.kotlinbaseapplication:cameraBearing}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_cameraMaxZoomPreference com.kotlinbaseapplication:cameraMaxZoomPreference}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_cameraMinZoomPreference com.kotlinbaseapplication:cameraMinZoomPreference}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_cameraTargetLat com.kotlinbaseapplication:cameraTargetLat}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_cameraTargetLng com.kotlinbaseapplication:cameraTargetLng}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_cameraTilt com.kotlinbaseapplication:cameraTilt}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_cameraZoom com.kotlinbaseapplication:cameraZoom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_latLngBoundsNorthEastLatitude com.kotlinbaseapplication:latLngBoundsNorthEastLatitude}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_latLngBoundsNorthEastLongitude com.kotlinbaseapplication:latLngBoundsNorthEastLongitude}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_latLngBoundsSouthWestLatitude com.kotlinbaseapplication:latLngBoundsSouthWestLatitude}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_latLngBoundsSouthWestLongitude com.kotlinbaseapplication:latLngBoundsSouthWestLongitude}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_liteMode com.kotlinbaseapplication:liteMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_mapType com.kotlinbaseapplication:mapType}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_uiCompass com.kotlinbaseapplication:uiCompass}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_uiMapToolbar com.kotlinbaseapplication:uiMapToolbar}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_uiRotateGestures com.kotlinbaseapplication:uiRotateGestures}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_uiScrollGestures com.kotlinbaseapplication:uiScrollGestures}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_uiScrollGesturesDuringRotateOrZoom com.kotlinbaseapplication:uiScrollGesturesDuringRotateOrZoom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_uiTiltGestures com.kotlinbaseapplication:uiTiltGestures}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_uiZoomControls com.kotlinbaseapplication:uiZoomControls}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_uiZoomGestures com.kotlinbaseapplication:uiZoomGestures}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_useViewLifecycle com.kotlinbaseapplication:useViewLifecycle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MapAttrs_zOrderOnTop com.kotlinbaseapplication:zOrderOnTop}</code></td><td></td></tr>
     * </table>
     * @see #MapAttrs_ambientEnabled
     * @see #MapAttrs_cameraBearing
     * @see #MapAttrs_cameraMaxZoomPreference
     * @see #MapAttrs_cameraMinZoomPreference
     * @see #MapAttrs_cameraTargetLat
     * @see #MapAttrs_cameraTargetLng
     * @see #MapAttrs_cameraTilt
     * @see #MapAttrs_cameraZoom
     * @see #MapAttrs_latLngBoundsNorthEastLatitude
     * @see #MapAttrs_latLngBoundsNorthEastLongitude
     * @see #MapAttrs_latLngBoundsSouthWestLatitude
     * @see #MapAttrs_latLngBoundsSouthWestLongitude
     * @see #MapAttrs_liteMode
     * @see #MapAttrs_mapType
     * @see #MapAttrs_uiCompass
     * @see #MapAttrs_uiMapToolbar
     * @see #MapAttrs_uiRotateGestures
     * @see #MapAttrs_uiScrollGestures
     * @see #MapAttrs_uiScrollGesturesDuringRotateOrZoom
     * @see #MapAttrs_uiTiltGestures
     * @see #MapAttrs_uiZoomControls
     * @see #MapAttrs_uiZoomGestures
     * @see #MapAttrs_useViewLifecycle
     * @see #MapAttrs_zOrderOnTop
     */
    public static final int[] MapAttrs={
      0x7f030044, 0x7f0300a7, 0x7f0300a8, 0x7f0300a9, 
      0x7f0300aa, 0x7f0300ab, 0x7f0300ac, 0x7f0300ad, 
      0x7f03025d, 0x7f03025e, 0x7f03025f, 0x7f030260, 
      0x7f0302b9, 0x7f0302bc, 0x7f030461, 0x7f030462, 
      0x7f030463, 0x7f030464, 0x7f030465, 0x7f030466, 
      0x7f030467, 0x7f030468, 0x7f03046e, 0x7f030489
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ambientEnabled}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ambientEnabled
     */
    public static final int MapAttrs_ambientEnabled=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#cameraBearing}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:cameraBearing
     */
    public static final int MapAttrs_cameraBearing=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#cameraMaxZoomPreference}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:cameraMaxZoomPreference
     */
    public static final int MapAttrs_cameraMaxZoomPreference=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#cameraMinZoomPreference}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:cameraMinZoomPreference
     */
    public static final int MapAttrs_cameraMinZoomPreference=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#cameraTargetLat}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:cameraTargetLat
     */
    public static final int MapAttrs_cameraTargetLat=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#cameraTargetLng}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:cameraTargetLng
     */
    public static final int MapAttrs_cameraTargetLng=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#cameraTilt}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:cameraTilt
     */
    public static final int MapAttrs_cameraTilt=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#cameraZoom}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:cameraZoom
     */
    public static final int MapAttrs_cameraZoom=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#latLngBoundsNorthEastLatitude}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:latLngBoundsNorthEastLatitude
     */
    public static final int MapAttrs_latLngBoundsNorthEastLatitude=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#latLngBoundsNorthEastLongitude}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:latLngBoundsNorthEastLongitude
     */
    public static final int MapAttrs_latLngBoundsNorthEastLongitude=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#latLngBoundsSouthWestLatitude}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:latLngBoundsSouthWestLatitude
     */
    public static final int MapAttrs_latLngBoundsSouthWestLatitude=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#latLngBoundsSouthWestLongitude}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:latLngBoundsSouthWestLongitude
     */
    public static final int MapAttrs_latLngBoundsSouthWestLongitude=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#liteMode}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:liteMode
     */
    public static final int MapAttrs_liteMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#mapType}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>hybrid</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>normal</td><td>1</td><td></td></tr>
     * <tr><td>satellite</td><td>2</td><td></td></tr>
     * <tr><td>terrain</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:mapType
     */
    public static final int MapAttrs_mapType=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#uiCompass}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:uiCompass
     */
    public static final int MapAttrs_uiCompass=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#uiMapToolbar}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:uiMapToolbar
     */
    public static final int MapAttrs_uiMapToolbar=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#uiRotateGestures}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:uiRotateGestures
     */
    public static final int MapAttrs_uiRotateGestures=16;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#uiScrollGestures}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:uiScrollGestures
     */
    public static final int MapAttrs_uiScrollGestures=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#uiScrollGesturesDuringRotateOrZoom}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:uiScrollGesturesDuringRotateOrZoom
     */
    public static final int MapAttrs_uiScrollGesturesDuringRotateOrZoom=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#uiTiltGestures}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:uiTiltGestures
     */
    public static final int MapAttrs_uiTiltGestures=19;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#uiZoomControls}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:uiZoomControls
     */
    public static final int MapAttrs_uiZoomControls=20;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#uiZoomGestures}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:uiZoomGestures
     */
    public static final int MapAttrs_uiZoomGestures=21;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#useViewLifecycle}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:useViewLifecycle
     */
    public static final int MapAttrs_useViewLifecycle=22;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#zOrderOnTop}
     * attribute's value can be found in the {@link #MapAttrs} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:zOrderOnTop
     */
    public static final int MapAttrs_zOrderOnTop=23;
    /**
     * Attributes that can be used with a MaterialAlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetBottom com.kotlinbaseapplication:backgroundInsetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetEnd com.kotlinbaseapplication:backgroundInsetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetStart com.kotlinbaseapplication:backgroundInsetStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetTop com.kotlinbaseapplication:backgroundInsetTop}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAlertDialog_backgroundInsetBottom
     * @see #MaterialAlertDialog_backgroundInsetEnd
     * @see #MaterialAlertDialog_backgroundInsetStart
     * @see #MaterialAlertDialog_backgroundInsetTop
     */
    public static final int[] MaterialAlertDialog={
      0x7f030059, 0x7f03005a, 0x7f03005b, 0x7f03005c
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#backgroundInsetBottom}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:backgroundInsetBottom
     */
    public static final int MaterialAlertDialog_backgroundInsetBottom=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#backgroundInsetEnd}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:backgroundInsetEnd
     */
    public static final int MaterialAlertDialog_backgroundInsetEnd=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#backgroundInsetStart}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:backgroundInsetStart
     */
    public static final int MaterialAlertDialog_backgroundInsetStart=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#backgroundInsetTop}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:backgroundInsetTop
     */
    public static final int MaterialAlertDialog_backgroundInsetTop=3;
    /**
     * Attributes that can be used with a MaterialAlertDialogTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle com.kotlinbaseapplication:materialAlertDialogBodyTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTheme com.kotlinbaseapplication:materialAlertDialogTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle com.kotlinbaseapplication:materialAlertDialogTitleIconStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle com.kotlinbaseapplication:materialAlertDialogTitlePanelStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle com.kotlinbaseapplication:materialAlertDialogTitleTextStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTheme
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle
     */
    public static final int[] MaterialAlertDialogTheme={
      0x7f0302bd, 0x7f0302be, 0x7f0302bf, 0x7f0302c0, 
      0x7f0302c1
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#materialAlertDialogBodyTextStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:materialAlertDialogBodyTextStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#materialAlertDialogTheme}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:materialAlertDialogTheme
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTheme=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#materialAlertDialogTitleIconStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:materialAlertDialogTitleIconStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#materialAlertDialogTitlePanelStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:materialAlertDialogTitlePanelStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#materialAlertDialogTitleTextStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:materialAlertDialogTitleTextStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle=4;
    /**
     * Attributes that can be used with a MaterialAutoCompleteTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAutoCompleteTextView_android_inputType android:inputType}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAutoCompleteTextView_android_inputType
     */
    public static final int[] MaterialAutoCompleteTextView={
      0x01010220
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#inputType}
     * attribute's value can be found in the {@link #MaterialAutoCompleteTextView} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int MaterialAutoCompleteTextView_android_inputType=0;
    /**
     * Attributes that can be used with a MaterialButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButton_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTint com.kotlinbaseapplication:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTintMode com.kotlinbaseapplication:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_cornerRadius com.kotlinbaseapplication:cornerRadius}</code></td><td>Specifies the radius for the corners of the button.</td></tr>
     * <tr><td><code>{@link #MaterialButton_elevation com.kotlinbaseapplication:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #MaterialButton_icon com.kotlinbaseapplication:icon}</code></td><td>Icon drawable to display at the start of this view.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconGravity com.kotlinbaseapplication:iconGravity}</code></td><td>Specifies how the icon should be positioned on the X axis.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconPadding com.kotlinbaseapplication:iconPadding}</code></td><td>Padding between icon and button text.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconSize com.kotlinbaseapplication:iconSize}</code></td><td>Specifies the width and height to use for the icon drawable.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTint com.kotlinbaseapplication:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTintMode com.kotlinbaseapplication:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_rippleColor com.kotlinbaseapplication:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_shapeAppearance com.kotlinbaseapplication:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialButton_shapeAppearanceOverlay com.kotlinbaseapplication:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeColor com.kotlinbaseapplication:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeWidth com.kotlinbaseapplication:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButton_android_background
     * @see #MaterialButton_android_insetLeft
     * @see #MaterialButton_android_insetRight
     * @see #MaterialButton_android_insetTop
     * @see #MaterialButton_android_insetBottom
     * @see #MaterialButton_android_checkable
     * @see #MaterialButton_backgroundTint
     * @see #MaterialButton_backgroundTintMode
     * @see #MaterialButton_cornerRadius
     * @see #MaterialButton_elevation
     * @see #MaterialButton_icon
     * @see #MaterialButton_iconGravity
     * @see #MaterialButton_iconPadding
     * @see #MaterialButton_iconSize
     * @see #MaterialButton_iconTint
     * @see #MaterialButton_iconTintMode
     * @see #MaterialButton_rippleColor
     * @see #MaterialButton_shapeAppearance
     * @see #MaterialButton_shapeAppearanceOverlay
     * @see #MaterialButton_strokeColor
     * @see #MaterialButton_strokeWidth
     */
    public static final int[] MaterialButton={
      0x010100d4, 0x010101b7, 0x010101b8, 0x010101b9, 
      0x010101ba, 0x010101e5, 0x7f030060, 0x7f030061, 
      0x7f030161, 0x7f0301ad, 0x7f030220, 0x7f030222, 
      0x7f030223, 0x7f030224, 0x7f030227, 0x7f030228, 
      0x7f030374, 0x7f030387, 0x7f03038a, 0x7f0303bf, 
      0x7f0303c0
    };
    /**
     * <p>
     * @attr description
     * Background for the MaterialButton. If this is set to a drawable or color, MaterialButton
     * will respect this background and not create its own MaterialShapeDrawable for the
     * background. This means that the insets, shape appearance, and stroke will be ignored.
     * If this attribute is not set or is @empty or @null, a MaterialShapeDrawable will be used
     * for the background based on the insets, shape appearance, and stroke.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int MaterialButton_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static final int MaterialButton_android_insetLeft=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static final int MaterialButton_android_insetRight=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static final int MaterialButton_android_insetTop=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static final int MaterialButton_android_insetBottom=4;
    /**
     * <p>
     * @attr description
     * Whether the button can be checked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MaterialButton_android_checkable=5;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundTint
     */
    public static final int MaterialButton_backgroundTint=6;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:backgroundTintMode
     */
    public static final int MaterialButton_backgroundTintMode=7;
    /**
     * <p>
     * @attr description
     * Specifies the radius for the corners of the button. Default is 0, for non-rounded corners.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:cornerRadius
     */
    public static final int MaterialButton_cornerRadius=8;
    /**
     * <p>
     * @attr description
     * Elevation for the MaterialButton.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:elevation
     */
    public static final int MaterialButton_elevation=9;
    /**
     * <p>
     * @attr description
     * Icon drawable to display at the start of this view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:icon
     */
    public static final int MaterialButton_icon=10;
    /**
     * <p>
     * @attr description
     * Specifies how the icon should be positioned on the X axis.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td>Push icon to the end of the button.</td></tr>
     * <tr><td>start</td><td>1</td><td>Push icon to the start of the button.</td></tr>
     * <tr><td>textEnd</td><td>4</td><td>Push the icon to the end of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textStart</td><td>2</td><td>Push the icon to the start of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textTop</td><td>20</td><td>Push the icon to the top of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>top</td><td>10</td><td>Push the icon to the top of the button.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:iconGravity
     */
    public static final int MaterialButton_iconGravity=11;
    /**
     * <p>
     * @attr description
     * Padding between icon and button text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:iconPadding
     */
    public static final int MaterialButton_iconPadding=12;
    /**
     * <p>
     * @attr description
     * Specifies the width and height to use for the icon drawable.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:iconSize
     */
    public static final int MaterialButton_iconSize=13;
    /**
     * <p>
     * @attr description
     * Tint for icon drawable to display.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:iconTint
     */
    public static final int MaterialButton_iconTint=14;
    /**
     * <p>
     * @attr description
     * Tint mode for icon drawable to display.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:iconTintMode
     */
    public static final int MaterialButton_iconTintMode=15;
    /**
     * <p>
     * @attr description
     * Ripple color for the button. This may be a color state list, if the desired ripple color
     * should be stateful. Attribute type definition is in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:rippleColor
     */
    public static final int MaterialButton_rippleColor=16;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for MaterialButton. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearance
     */
    public static final int MaterialButton_shapeAppearance=17;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for MaterialButton. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearanceOverlay
     */
    public static final int MaterialButton_shapeAppearanceOverlay=18;
    /**
     * <p>
     * @attr description
     * Specifies the color used to draw the path outline of the button. Attribute type definition
     * is in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:strokeColor
     */
    public static final int MaterialButton_strokeColor=19;
    /**
     * <p>
     * @attr description
     * Width of the stroke path of the button. Default is 0. Attribute type definition is in
     * resources package.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:strokeWidth
     */
    public static final int MaterialButton_strokeWidth=20;
    /**
     * Attributes that can be used with a MaterialButtonToggleGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_checkedButton com.kotlinbaseapplication:checkedButton}</code></td><td>The id of the child button that should be checked by default within this button group.</td></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_selectionRequired com.kotlinbaseapplication:selectionRequired}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_singleSelection com.kotlinbaseapplication:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButtonToggleGroup_checkedButton
     * @see #MaterialButtonToggleGroup_selectionRequired
     * @see #MaterialButtonToggleGroup_singleSelection
     */
    public static final int[] MaterialButtonToggleGroup={
      0x7f0300e9, 0x7f030385, 0x7f03039a
    };
    /**
     * <p>
     * @attr description
     * The id of the child button that should be checked by default within this button group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:checkedButton
     */
    public static final int MaterialButtonToggleGroup_checkedButton=0;
    /**
     * <p>
     * @attr description
     * Whether we prevent all child buttons from being deselected.
     * It's false by default.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:selectionRequired
     */
    public static final int MaterialButtonToggleGroup_selectionRequired=1;
    /**
     * <p>
     * @attr description
     * Whether only a single button in this group is allowed to be checked at any time. By
     * default, this is false and multiple buttons in this group are allowed to be checked at
     * once.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:singleSelection
     */
    public static final int MaterialButtonToggleGroup_singleSelection=2;
    /**
     * Attributes that can be used with a MaterialCalendar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCalendar_android_windowFullscreen android:windowFullscreen}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayInvalidStyle com.kotlinbaseapplication:dayInvalidStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_daySelectedStyle com.kotlinbaseapplication:daySelectedStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayStyle com.kotlinbaseapplication:dayStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayTodayStyle com.kotlinbaseapplication:dayTodayStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_nestedScrollable com.kotlinbaseapplication:nestedScrollable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_rangeFillColor com.kotlinbaseapplication:rangeFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearSelectedStyle com.kotlinbaseapplication:yearSelectedStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearStyle com.kotlinbaseapplication:yearStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearTodayStyle com.kotlinbaseapplication:yearTodayStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCalendar_android_windowFullscreen
     * @see #MaterialCalendar_dayInvalidStyle
     * @see #MaterialCalendar_daySelectedStyle
     * @see #MaterialCalendar_dayStyle
     * @see #MaterialCalendar_dayTodayStyle
     * @see #MaterialCalendar_nestedScrollable
     * @see #MaterialCalendar_rangeFillColor
     * @see #MaterialCalendar_yearSelectedStyle
     * @see #MaterialCalendar_yearStyle
     * @see #MaterialCalendar_yearTodayStyle
     */
    public static final int[] MaterialCalendar={
      0x0101020d, 0x7f03017b, 0x7f03017c, 0x7f03017d, 
      0x7f03017e, 0x7f030319, 0x7f03036a, 0x7f030486, 
      0x7f030487, 0x7f030488
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowFullscreen}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowFullscreen
     */
    public static final int MaterialCalendar_android_windowFullscreen=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#dayInvalidStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dayInvalidStyle
     */
    public static final int MaterialCalendar_dayInvalidStyle=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#daySelectedStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:daySelectedStyle
     */
    public static final int MaterialCalendar_daySelectedStyle=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#dayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dayStyle
     */
    public static final int MaterialCalendar_dayStyle=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#dayTodayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dayTodayStyle
     */
    public static final int MaterialCalendar_dayTodayStyle=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#nestedScrollable}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:nestedScrollable
     */
    public static final int MaterialCalendar_nestedScrollable=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#rangeFillColor}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:rangeFillColor
     */
    public static final int MaterialCalendar_rangeFillColor=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#yearSelectedStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:yearSelectedStyle
     */
    public static final int MaterialCalendar_yearSelectedStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#yearStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:yearStyle
     */
    public static final int MaterialCalendar_yearStyle=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#yearTodayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:yearTodayStyle
     */
    public static final int MaterialCalendar_yearTodayStyle=9;
    /**
     * Attributes that can be used with a MaterialCalendarItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemFillColor com.kotlinbaseapplication:itemFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemShapeAppearance com.kotlinbaseapplication:itemShapeAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemShapeAppearanceOverlay com.kotlinbaseapplication:itemShapeAppearanceOverlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemStrokeColor com.kotlinbaseapplication:itemStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemStrokeWidth com.kotlinbaseapplication:itemStrokeWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemTextColor com.kotlinbaseapplication:itemTextColor}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCalendarItem_android_insetLeft
     * @see #MaterialCalendarItem_android_insetRight
     * @see #MaterialCalendarItem_android_insetTop
     * @see #MaterialCalendarItem_android_insetBottom
     * @see #MaterialCalendarItem_itemFillColor
     * @see #MaterialCalendarItem_itemShapeAppearance
     * @see #MaterialCalendarItem_itemShapeAppearanceOverlay
     * @see #MaterialCalendarItem_itemStrokeColor
     * @see #MaterialCalendarItem_itemStrokeWidth
     * @see #MaterialCalendarItem_itemTextColor
     */
    public static final int[] MaterialCalendarItem={
      0x010101b7, 0x010101b8, 0x010101b9, 0x010101ba, 
      0x7f03023e, 0x7f030247, 0x7f030248, 0x7f03024f, 
      0x7f030250, 0x7f030254
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static final int MaterialCalendarItem_android_insetLeft=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static final int MaterialCalendarItem_android_insetRight=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static final int MaterialCalendarItem_android_insetTop=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static final int MaterialCalendarItem_android_insetBottom=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#itemFillColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemFillColor
     */
    public static final int MaterialCalendarItem_itemFillColor=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#itemShapeAppearance}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemShapeAppearance
     */
    public static final int MaterialCalendarItem_itemShapeAppearance=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#itemShapeAppearanceOverlay}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemShapeAppearanceOverlay
     */
    public static final int MaterialCalendarItem_itemShapeAppearanceOverlay=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#itemStrokeColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemStrokeColor
     */
    public static final int MaterialCalendarItem_itemStrokeColor=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#itemStrokeWidth}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemStrokeWidth
     */
    public static final int MaterialCalendarItem_itemStrokeWidth=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemTextColor
     */
    public static final int MaterialCalendarItem_itemTextColor=9;
    /**
     * Attributes that can be used with a MaterialCardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCardView_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_cardForegroundColor com.kotlinbaseapplication:cardForegroundColor}</code></td><td>Foreground color for CardView.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIcon com.kotlinbaseapplication:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconMargin com.kotlinbaseapplication:checkedIconMargin}</code></td><td>Check icon margin for Checkable Cards</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconSize com.kotlinbaseapplication:checkedIconSize}</code></td><td>Check icon size for Checkable Cards</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconTint com.kotlinbaseapplication:checkedIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_rippleColor com.kotlinbaseapplication:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_shapeAppearance com.kotlinbaseapplication:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_shapeAppearanceOverlay com.kotlinbaseapplication:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_state_dragged com.kotlinbaseapplication:state_dragged}</code></td><td>State when a Card is being dragged.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeColor com.kotlinbaseapplication:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeWidth com.kotlinbaseapplication:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCardView_android_checkable
     * @see #MaterialCardView_cardForegroundColor
     * @see #MaterialCardView_checkedIcon
     * @see #MaterialCardView_checkedIconMargin
     * @see #MaterialCardView_checkedIconSize
     * @see #MaterialCardView_checkedIconTint
     * @see #MaterialCardView_rippleColor
     * @see #MaterialCardView_shapeAppearance
     * @see #MaterialCardView_shapeAppearanceOverlay
     * @see #MaterialCardView_state_dragged
     * @see #MaterialCardView_strokeColor
     * @see #MaterialCardView_strokeWidth
     */
    public static final int[] MaterialCardView={
      0x010101e5, 0x7f0300b2, 0x7f0300eb, 0x7f0300ed, 
      0x7f0300ee, 0x7f0300ef, 0x7f030374, 0x7f030387, 
      0x7f03038a, 0x7f0303b9, 0x7f0303bf, 0x7f0303c0
    };
    /**
     * <p>
     * @attr description
     * Whether the card can be checked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MaterialCardView_android_checkable=0;
    /**
     * <p>
     * @attr description
     * Foreground color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:cardForegroundColor
     */
    public static final int MaterialCardView_cardForegroundColor=1;
    /**
     * <p>
     * @attr description
     * Check icon drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:checkedIcon
     */
    public static final int MaterialCardView_checkedIcon=2;
    /**
     * <p>
     * @attr description
     * Check icon margin for Checkable Cards
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:checkedIconMargin
     */
    public static final int MaterialCardView_checkedIconMargin=3;
    /**
     * <p>
     * @attr description
     * Check icon size for Checkable Cards
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:checkedIconSize
     */
    public static final int MaterialCardView_checkedIconSize=4;
    /**
     * <p>
     * @attr description
     * Tint color for the checked icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:checkedIconTint
     */
    public static final int MaterialCardView_checkedIconTint=5;
    /**
     * <p>
     * @attr description
     * Ripple color for the Card.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:rippleColor
     */
    public static final int MaterialCardView_rippleColor=6;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for MaterialCardView. Attribute declaration is in the
     * shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearance
     */
    public static final int MaterialCardView_shapeAppearance=7;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for MaterialCardView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearanceOverlay
     */
    public static final int MaterialCardView_shapeAppearanceOverlay=8;
    /**
     * <p>
     * @attr description
     * State when a Card is being dragged.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:state_dragged
     */
    public static final int MaterialCardView_state_dragged=9;
    /**
     * <p>
     * @attr description
     * Specifies the color used to draw the path outline of the card. Attribute type definition is
     * in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:strokeColor
     */
    public static final int MaterialCardView_strokeColor=10;
    /**
     * <p>
     * @attr description
     * Width of the stroke path of the card. Default is 0. Attribute type definition is in
     * resources package.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:strokeWidth
     */
    public static final int MaterialCardView_strokeWidth=11;
    /**
     * Attributes that can be used with a MaterialCheckBox.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCheckBox_buttonTint com.kotlinbaseapplication:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #MaterialCheckBox_useMaterialThemeColors com.kotlinbaseapplication:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCheckBox_buttonTint
     * @see #MaterialCheckBox_useMaterialThemeColors
     */
    public static final int[] MaterialCheckBox={
      0x7f0300a5, 0x7f03046c
    };
    /**
     * <p>
     * @attr description
     * Tint for the checkbox.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonTint
     */
    public static final int MaterialCheckBox_buttonTint=0;
    /**
     * <p>
     * @attr description
     * When set to true, MaterialCheckBox will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:useMaterialThemeColors
     */
    public static final int MaterialCheckBox_useMaterialThemeColors=1;
    /**
     * Attributes that can be used with a MaterialRadioButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialRadioButton_buttonTint com.kotlinbaseapplication:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #MaterialRadioButton_useMaterialThemeColors com.kotlinbaseapplication:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #MaterialRadioButton_buttonTint
     * @see #MaterialRadioButton_useMaterialThemeColors
     */
    public static final int[] MaterialRadioButton={
      0x7f0300a5, 0x7f03046c
    };
    /**
     * <p>
     * @attr description
     * Tint for the radio.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:buttonTint
     */
    public static final int MaterialRadioButton_buttonTint=0;
    /**
     * <p>
     * @attr description
     * When set to true, MaterialRadioButton will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:useMaterialThemeColors
     */
    public static final int MaterialRadioButton_useMaterialThemeColors=1;
    /**
     * Attributes that can be used with a MaterialShape.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialShape_shapeAppearance com.kotlinbaseapplication:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialShape_shapeAppearanceOverlay com.kotlinbaseapplication:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #MaterialShape_shapeAppearance
     * @see #MaterialShape_shapeAppearanceOverlay
     */
    public static final int[] MaterialShape={
      0x7f030387, 0x7f03038a
    };
    /**
     * <p>
     * @attr description
     * Shape appearance style reference to be used to construct a ShapeAppearanceModel.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearance
     */
    public static final int MaterialShape_shapeAppearance=0;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference to be used to modify the shapeAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearanceOverlay
     */
    public static final int MaterialShape_shapeAppearanceOverlay=1;
    /**
     * Attributes that can be used with a MaterialSpinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_alignLabels com.kotlinbaseapplication:ms_alignLabels}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_alwaysShowFloatingLabel com.kotlinbaseapplication:ms_alwaysShowFloatingLabel}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_arrowColor com.kotlinbaseapplication:ms_arrowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_arrowSize com.kotlinbaseapplication:ms_arrowSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_baseColor com.kotlinbaseapplication:ms_baseColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_dropDownHintView com.kotlinbaseapplication:ms_dropDownHintView}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_enableErrorLabel com.kotlinbaseapplication:ms_enableErrorLabel}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_enableFloatingLabel com.kotlinbaseapplication:ms_enableFloatingLabel}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_error com.kotlinbaseapplication:ms_error}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_errorColor com.kotlinbaseapplication:ms_errorColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_floatingLabelColor com.kotlinbaseapplication:ms_floatingLabelColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_floatingLabelText com.kotlinbaseapplication:ms_floatingLabelText}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_highlightColor com.kotlinbaseapplication:ms_highlightColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_hint com.kotlinbaseapplication:ms_hint}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_hintColor com.kotlinbaseapplication:ms_hintColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_hintTextSize com.kotlinbaseapplication:ms_hintTextSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_hintView com.kotlinbaseapplication:ms_hintView}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_isRtl com.kotlinbaseapplication:ms_isRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_multiline com.kotlinbaseapplication:ms_multiline}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_nbErrorLines com.kotlinbaseapplication:ms_nbErrorLines}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_thickness com.kotlinbaseapplication:ms_thickness}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_thickness_error com.kotlinbaseapplication:ms_thickness_error}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialSpinner_ms_typeface com.kotlinbaseapplication:ms_typeface}</code></td><td></td></tr>
     * </table>
     * @see #MaterialSpinner_ms_alignLabels
     * @see #MaterialSpinner_ms_alwaysShowFloatingLabel
     * @see #MaterialSpinner_ms_arrowColor
     * @see #MaterialSpinner_ms_arrowSize
     * @see #MaterialSpinner_ms_baseColor
     * @see #MaterialSpinner_ms_dropDownHintView
     * @see #MaterialSpinner_ms_enableErrorLabel
     * @see #MaterialSpinner_ms_enableFloatingLabel
     * @see #MaterialSpinner_ms_error
     * @see #MaterialSpinner_ms_errorColor
     * @see #MaterialSpinner_ms_floatingLabelColor
     * @see #MaterialSpinner_ms_floatingLabelText
     * @see #MaterialSpinner_ms_highlightColor
     * @see #MaterialSpinner_ms_hint
     * @see #MaterialSpinner_ms_hintColor
     * @see #MaterialSpinner_ms_hintTextSize
     * @see #MaterialSpinner_ms_hintView
     * @see #MaterialSpinner_ms_isRtl
     * @see #MaterialSpinner_ms_multiline
     * @see #MaterialSpinner_ms_nbErrorLines
     * @see #MaterialSpinner_ms_thickness
     * @see #MaterialSpinner_ms_thickness_error
     * @see #MaterialSpinner_ms_typeface
     */
    public static final int[] MaterialSpinner={
      0x7f0302f9, 0x7f0302fa, 0x7f0302fb, 0x7f0302fc, 
      0x7f0302fd, 0x7f0302fe, 0x7f0302ff, 0x7f030300, 
      0x7f030301, 0x7f030302, 0x7f030303, 0x7f030304, 
      0x7f030305, 0x7f030306, 0x7f030307, 0x7f030308, 
      0x7f030309, 0x7f03030a, 0x7f03030b, 0x7f03030c, 
      0x7f03030d, 0x7f03030e, 0x7f03030f
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_alignLabels}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ms_alignLabels
     */
    public static final int MaterialSpinner_ms_alignLabels=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_alwaysShowFloatingLabel}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ms_alwaysShowFloatingLabel
     */
    public static final int MaterialSpinner_ms_alwaysShowFloatingLabel=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_arrowColor}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ms_arrowColor
     */
    public static final int MaterialSpinner_ms_arrowColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_arrowSize}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:ms_arrowSize
     */
    public static final int MaterialSpinner_ms_arrowSize=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_baseColor}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ms_baseColor
     */
    public static final int MaterialSpinner_ms_baseColor=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_dropDownHintView}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ms_dropDownHintView
     */
    public static final int MaterialSpinner_ms_dropDownHintView=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_enableErrorLabel}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ms_enableErrorLabel
     */
    public static final int MaterialSpinner_ms_enableErrorLabel=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_enableFloatingLabel}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ms_enableFloatingLabel
     */
    public static final int MaterialSpinner_ms_enableFloatingLabel=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_error}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ms_error
     */
    public static final int MaterialSpinner_ms_error=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_errorColor}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ms_errorColor
     */
    public static final int MaterialSpinner_ms_errorColor=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_floatingLabelColor}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ms_floatingLabelColor
     */
    public static final int MaterialSpinner_ms_floatingLabelColor=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_floatingLabelText}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ms_floatingLabelText
     */
    public static final int MaterialSpinner_ms_floatingLabelText=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_highlightColor}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ms_highlightColor
     */
    public static final int MaterialSpinner_ms_highlightColor=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_hint}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ms_hint
     */
    public static final int MaterialSpinner_ms_hint=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_hintColor}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ms_hintColor
     */
    public static final int MaterialSpinner_ms_hintColor=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_hintTextSize}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:ms_hintTextSize
     */
    public static final int MaterialSpinner_ms_hintTextSize=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_hintView}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ms_hintView
     */
    public static final int MaterialSpinner_ms_hintView=16;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_isRtl}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ms_isRtl
     */
    public static final int MaterialSpinner_ms_isRtl=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_multiline}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ms_multiline
     */
    public static final int MaterialSpinner_ms_multiline=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_nbErrorLines}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:ms_nbErrorLines
     */
    public static final int MaterialSpinner_ms_nbErrorLines=19;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_thickness}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:ms_thickness
     */
    public static final int MaterialSpinner_ms_thickness=20;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_thickness_error}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:ms_thickness_error
     */
    public static final int MaterialSpinner_ms_thickness_error=21;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ms_typeface}
     * attribute's value can be found in the {@link #MaterialSpinner} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ms_typeface
     */
    public static final int MaterialSpinner_ms_typeface=22;
    /**
     * Attributes that can be used with a MaterialTextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_android_letterSpacing android:letterSpacing}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_android_lineHeight android:lineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_lineHeight com.kotlinbaseapplication:lineHeight}</code></td><td></td></tr>
     * </table>
     * @see #MaterialTextAppearance_android_letterSpacing
     * @see #MaterialTextAppearance_android_lineHeight
     * @see #MaterialTextAppearance_lineHeight
     */
    public static final int[] MaterialTextAppearance={
      0x010104b6, 0x0101057f, 0x7f0302a7
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#letterSpacing}
     * attribute's value can be found in the {@link #MaterialTextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:letterSpacing
     */
    public static final int MaterialTextAppearance_android_letterSpacing=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#lineHeight}
     * attribute's value can be found in the {@link #MaterialTextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:lineHeight
     */
    public static final int MaterialTextAppearance_android_lineHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#lineHeight}
     * attribute's value can be found in the {@link #MaterialTextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:lineHeight
     */
    public static final int MaterialTextAppearance_lineHeight=2;
    /**
     * Attributes that can be used with a MaterialTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextView_android_lineHeight android:lineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextView_lineHeight com.kotlinbaseapplication:lineHeight}</code></td><td></td></tr>
     * </table>
     * @see #MaterialTextView_android_textAppearance
     * @see #MaterialTextView_android_lineHeight
     * @see #MaterialTextView_lineHeight
     */
    public static final int[] MaterialTextView={
      0x01010034, 0x0101057f, 0x7f0302a7
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #MaterialTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int MaterialTextView_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#lineHeight}
     * attribute's value can be found in the {@link #MaterialTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:lineHeight
     */
    public static final int MaterialTextView_android_lineHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#lineHeight}
     * attribute's value can be found in the {@link #MaterialTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:lineHeight
     */
    public static final int MaterialTextView_lineHeight=2;
    /**
     * Attributes that can be used with a MaterialTimePicker.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTimePicker_clockIcon com.kotlinbaseapplication:clockIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTimePicker_keyboardIcon com.kotlinbaseapplication:keyboardIcon}</code></td><td></td></tr>
     * </table>
     * @see #MaterialTimePicker_clockIcon
     * @see #MaterialTimePicker_keyboardIcon
     */
    public static final int[] MaterialTimePicker={
      0x7f030110, 0x7f030257
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#clockIcon}
     * attribute's value can be found in the {@link #MaterialTimePicker} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:clockIcon
     */
    public static final int MaterialTimePicker_clockIcon=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#keyboardIcon}
     * attribute's value can be found in the {@link #MaterialTimePicker} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:keyboardIcon
     */
    public static final int MaterialTimePicker_keyboardIcon=1;
    /**
     * Attributes that can be used with a MaterialToolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialToolbar_navigationIconTint com.kotlinbaseapplication:navigationIconTint}</code></td><td></td></tr>
     * </table>
     * @see #MaterialToolbar_navigationIconTint
     */
    public static final int[] MaterialToolbar={
      0x7f030314
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#navigationIconTint}
     * attribute's value can be found in the {@link #MaterialToolbar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:navigationIconTint
     */
    public static final int MaterialToolbar_navigationIconTint=0;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.kotlinbaseapplication:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.kotlinbaseapplication:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.kotlinbaseapplication:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.kotlinbaseapplication:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.kotlinbaseapplication:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.kotlinbaseapplication:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.kotlinbaseapplication:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.kotlinbaseapplication:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.kotlinbaseapplication:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.kotlinbaseapplication:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f03001c, 0x7f03002e, 0x7f030030, 
      0x7f030042, 0x7f03014a, 0x7f030227, 0x7f030228, 
      0x7f03031c, 0x7f03038e, 0x7f03043b
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.kotlinbaseapplication:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.kotlinbaseapplication:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f030361, 
      0x7f0303c1
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a MockView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MockView_mock_diagonalsColor com.kotlinbaseapplication:mock_diagonalsColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_label com.kotlinbaseapplication:mock_label}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_labelBackgroundColor com.kotlinbaseapplication:mock_labelBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_labelColor com.kotlinbaseapplication:mock_labelColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_showDiagonals com.kotlinbaseapplication:mock_showDiagonals}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_showLabel com.kotlinbaseapplication:mock_showLabel}</code></td><td></td></tr>
     * </table>
     * @see #MockView_mock_diagonalsColor
     * @see #MockView_mock_label
     * @see #MockView_mock_labelBackgroundColor
     * @see #MockView_mock_labelColor
     * @see #MockView_mock_showDiagonals
     * @see #MockView_mock_showLabel
     */
    public static final int[] MockView={
      0x7f0302ea, 0x7f0302eb, 0x7f0302ec, 0x7f0302ed, 
      0x7f0302ee, 0x7f0302ef
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#mock_diagonalsColor}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:mock_diagonalsColor
     */
    public static final int MockView_mock_diagonalsColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#mock_label}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:mock_label
     */
    public static final int MockView_mock_label=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#mock_labelBackgroundColor}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:mock_labelBackgroundColor
     */
    public static final int MockView_mock_labelBackgroundColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#mock_labelColor}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:mock_labelColor
     */
    public static final int MockView_mock_labelColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#mock_showDiagonals}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:mock_showDiagonals
     */
    public static final int MockView_mock_showDiagonals=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#mock_showLabel}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:mock_showLabel
     */
    public static final int MockView_mock_showLabel=5;
    /**
     * Attributes that can be used with a Motion.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Motion_animate_relativeTo com.kotlinbaseapplication:animate_relativeTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_drawPath com.kotlinbaseapplication:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_motionPathRotate com.kotlinbaseapplication:motionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_motionStagger com.kotlinbaseapplication:motionStagger}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_pathMotionArc com.kotlinbaseapplication:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_transitionEasing com.kotlinbaseapplication:transitionEasing}</code></td><td></td></tr>
     * </table>
     * @see #Motion_animate_relativeTo
     * @see #Motion_drawPath
     * @see #Motion_motionPathRotate
     * @see #Motion_motionStagger
     * @see #Motion_pathMotionArc
     * @see #Motion_transitionEasing
     */
    public static final int[] Motion={
      0x7f030046, 0x7f03019a, 0x7f0302f2, 0x7f0302f4, 
      0x7f03033f, 0x7f030449
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#animate_relativeTo}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:animate_relativeTo
     */
    public static final int Motion_animate_relativeTo=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#drawPath}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:drawPath
     */
    public static final int Motion_drawPath=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionPathRotate}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionPathRotate
     */
    public static final int Motion_motionPathRotate=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionStagger}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionStagger
     */
    public static final int Motion_motionStagger=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:pathMotionArc
     */
    public static final int Motion_pathMotionArc=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:transitionEasing
     */
    public static final int Motion_transitionEasing=5;
    /**
     * Attributes that can be used with a MotionHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionHelper_onHide com.kotlinbaseapplication:onHide}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionHelper_onShow com.kotlinbaseapplication:onShow}</code></td><td></td></tr>
     * </table>
     * @see #MotionHelper_onHide
     * @see #MotionHelper_onShow
     */
    public static final int[] MotionHelper={
      0x7f03031e, 0x7f030321
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#onHide}
     * attribute's value can be found in the {@link #MotionHelper} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:onHide
     */
    public static final int MotionHelper_onHide=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#onShow}
     * attribute's value can be found in the {@link #MotionHelper} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:onShow
     */
    public static final int MotionHelper_onShow=1;
    /**
     * Attributes that can be used with a MotionLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionLayout_applyMotionScene com.kotlinbaseapplication:applyMotionScene}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_currentState com.kotlinbaseapplication:currentState}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_layoutDescription com.kotlinbaseapplication:layoutDescription}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_motionDebug com.kotlinbaseapplication:motionDebug}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_motionProgress com.kotlinbaseapplication:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_showPaths com.kotlinbaseapplication:showPaths}</code></td><td></td></tr>
     * </table>
     * @see #MotionLayout_applyMotionScene
     * @see #MotionLayout_currentState
     * @see #MotionLayout_layoutDescription
     * @see #MotionLayout_motionDebug
     * @see #MotionLayout_motionProgress
     * @see #MotionLayout_showPaths
     */
    public static final int[] MotionLayout={
      0x7f03004a, 0x7f03016e, 0x7f030263, 0x7f0302f0, 
      0x7f0302f3, 0x7f030392
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#applyMotionScene}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:applyMotionScene
     */
    public static final int MotionLayout_applyMotionScene=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#currentState}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:currentState
     */
    public static final int MotionLayout_currentState=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layoutDescription}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layoutDescription
     */
    public static final int MotionLayout_layoutDescription=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionDebug}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>NO_DEBUG</td><td>0</td><td></td></tr>
     * <tr><td>SHOW_ALL</td><td>3</td><td></td></tr>
     * <tr><td>SHOW_PATH</td><td>2</td><td></td></tr>
     * <tr><td>SHOW_PROGRESS</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:motionDebug
     */
    public static final int MotionLayout_motionDebug=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionProgress}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionProgress
     */
    public static final int MotionLayout_motionProgress=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#showPaths}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:showPaths
     */
    public static final int MotionLayout_showPaths=5;
    /**
     * Attributes that can be used with a MotionScene.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionScene_defaultDuration com.kotlinbaseapplication:defaultDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionScene_layoutDuringTransition com.kotlinbaseapplication:layoutDuringTransition}</code></td><td></td></tr>
     * </table>
     * @see #MotionScene_defaultDuration
     * @see #MotionScene_layoutDuringTransition
     */
    public static final int[] MotionScene={
      0x7f03017f, 0x7f030264
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#defaultDuration}
     * attribute's value can be found in the {@link #MotionScene} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:defaultDuration
     */
    public static final int MotionScene_defaultDuration=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layoutDuringTransition}
     * attribute's value can be found in the {@link #MotionScene} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>honorRequest</td><td>1</td><td></td></tr>
     * <tr><td>ignoreRequest</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layoutDuringTransition
     */
    public static final int MotionScene_layoutDuringTransition=1;
    /**
     * Attributes that can be used with a MotionTelltales.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionTelltales_telltales_tailColor com.kotlinbaseapplication:telltales_tailColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionTelltales_telltales_tailScale com.kotlinbaseapplication:telltales_tailScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionTelltales_telltales_velocityMode com.kotlinbaseapplication:telltales_velocityMode}</code></td><td></td></tr>
     * </table>
     * @see #MotionTelltales_telltales_tailColor
     * @see #MotionTelltales_telltales_tailScale
     * @see #MotionTelltales_telltales_velocityMode
     */
    public static final int[] MotionTelltales={
      0x7f0303f3, 0x7f0303f4, 0x7f0303f5
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#telltales_tailColor}
     * attribute's value can be found in the {@link #MotionTelltales} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:telltales_tailColor
     */
    public static final int MotionTelltales_telltales_tailColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#telltales_tailScale}
     * attribute's value can be found in the {@link #MotionTelltales} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:telltales_tailScale
     */
    public static final int MotionTelltales_telltales_tailScale=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#telltales_velocityMode}
     * attribute's value can be found in the {@link #MotionTelltales} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>layout</td><td>0</td><td></td></tr>
     * <tr><td>postLayout</td><td>1</td><td></td></tr>
     * <tr><td>staticLayout</td><td>3</td><td></td></tr>
     * <tr><td>staticPostLayout</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:telltales_velocityMode
     */
    public static final int MotionTelltales_telltales_velocityMode=2;
    /**
     * Attributes that can be used with a MultiSelectListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entries com.kotlinbaseapplication:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entryValues com.kotlinbaseapplication:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #MultiSelectListPreference_android_entries
     * @see #MultiSelectListPreference_android_entryValues
     * @see #MultiSelectListPreference_entries
     * @see #MultiSelectListPreference_entryValues
     */
    public static final int[] MultiSelectListPreference={
      0x010100b2, 0x010101f8, 0x7f0301bd, 0x7f0301be
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int MultiSelectListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int MultiSelectListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:entries
     */
    public static final int MultiSelectListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:entryValues
     */
    public static final int MultiSelectListPreference_entryValues=3;
    /**
     * Attributes that can be used with a NavAction.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavAction_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavAction_destination com.kotlinbaseapplication:destination}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavAction_enterAnim com.kotlinbaseapplication:enterAnim}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavAction_exitAnim com.kotlinbaseapplication:exitAnim}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavAction_launchSingleTop com.kotlinbaseapplication:launchSingleTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavAction_popEnterAnim com.kotlinbaseapplication:popEnterAnim}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavAction_popExitAnim com.kotlinbaseapplication:popExitAnim}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavAction_popUpTo com.kotlinbaseapplication:popUpTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavAction_popUpToInclusive com.kotlinbaseapplication:popUpToInclusive}</code></td><td></td></tr>
     * </table>
     * @see #NavAction_android_id
     * @see #NavAction_destination
     * @see #NavAction_enterAnim
     * @see #NavAction_exitAnim
     * @see #NavAction_launchSingleTop
     * @see #NavAction_popEnterAnim
     * @see #NavAction_popExitAnim
     * @see #NavAction_popUpTo
     * @see #NavAction_popUpToInclusive
     */
    public static final int[] NavAction={
      0x010100d0, 0x7f030188, 0x7f0301bc, 0x7f0301c6, 
      0x7f030261, 0x7f03034c, 0x7f03034d, 0x7f03034e, 
      0x7f03034f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #NavAction} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int NavAction_android_id=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#destination}
     * attribute's value can be found in the {@link #NavAction} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:destination
     */
    public static final int NavAction_destination=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#enterAnim}
     * attribute's value can be found in the {@link #NavAction} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:enterAnim
     */
    public static final int NavAction_enterAnim=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#exitAnim}
     * attribute's value can be found in the {@link #NavAction} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:exitAnim
     */
    public static final int NavAction_exitAnim=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#launchSingleTop}
     * attribute's value can be found in the {@link #NavAction} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:launchSingleTop
     */
    public static final int NavAction_launchSingleTop=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#popEnterAnim}
     * attribute's value can be found in the {@link #NavAction} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:popEnterAnim
     */
    public static final int NavAction_popEnterAnim=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#popExitAnim}
     * attribute's value can be found in the {@link #NavAction} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:popExitAnim
     */
    public static final int NavAction_popExitAnim=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#popUpTo}
     * attribute's value can be found in the {@link #NavAction} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:popUpTo
     */
    public static final int NavAction_popUpTo=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#popUpToInclusive}
     * attribute's value can be found in the {@link #NavAction} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:popUpToInclusive
     */
    public static final int NavAction_popUpToInclusive=8;
    /**
     * Attributes that can be used with a NavArgument.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavArgument_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavArgument_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavArgument_argType com.kotlinbaseapplication:argType}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavArgument_nullable com.kotlinbaseapplication:nullable}</code></td><td></td></tr>
     * </table>
     * @see #NavArgument_android_name
     * @see #NavArgument_android_defaultValue
     * @see #NavArgument_argType
     * @see #NavArgument_nullable
     */
    public static final int[] NavArgument={
      0x01010003, 0x010101ed, 0x7f03004c, 0x7f03031a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #NavArgument} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int NavArgument_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #NavArgument} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static final int NavArgument_android_defaultValue=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#argType}
     * attribute's value can be found in the {@link #NavArgument} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:argType
     */
    public static final int NavArgument_argType=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#nullable}
     * attribute's value can be found in the {@link #NavArgument} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:nullable
     */
    public static final int NavArgument_nullable=3;
    /**
     * Attributes that can be used with a NavDeepLink.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavDeepLink_android_autoVerify android:autoVerify}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavDeepLink_uri com.kotlinbaseapplication:uri}</code></td><td></td></tr>
     * </table>
     * @see #NavDeepLink_android_autoVerify
     * @see #NavDeepLink_uri
     */
    public static final int[] NavDeepLink={
      0x010104ee, 0x7f03046a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#autoVerify}
     * attribute's value can be found in the {@link #NavDeepLink} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:autoVerify
     */
    public static final int NavDeepLink_android_autoVerify=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#uri}
     * attribute's value can be found in the {@link #NavDeepLink} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:uri
     */
    public static final int NavDeepLink_uri=1;
    /**
     * Attributes that can be used with a NavGraphNavigator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavGraphNavigator_startDestination com.kotlinbaseapplication:startDestination}</code></td><td></td></tr>
     * </table>
     * @see #NavGraphNavigator_startDestination
     */
    public static final int[] NavGraphNavigator={
      0x7f0303b0
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#startDestination}
     * attribute's value can be found in the {@link #NavGraphNavigator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:startDestination
     */
    public static final int NavGraphNavigator_startDestination=0;
    /**
     * Attributes that can be used with a NavHost.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavHost_navGraph com.kotlinbaseapplication:navGraph}</code></td><td></td></tr>
     * </table>
     * @see #NavHost_navGraph
     */
    public static final int[] NavHost={
      0x7f030311
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#navGraph}
     * attribute's value can be found in the {@link #NavHost} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:navGraph
     */
    public static final int NavHost_navGraph=0;
    /**
     * Attributes that can be used with a NavHostFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavHostFragment_defaultNavHost com.kotlinbaseapplication:defaultNavHost}</code></td><td></td></tr>
     * </table>
     * @see #NavHostFragment_defaultNavHost
     */
    public static final int[] NavHostFragment={
      0x7f030180
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#defaultNavHost}
     * attribute's value can be found in the {@link #NavHostFragment} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:defaultNavHost
     */
    public static final int NavHostFragment_defaultNavHost=0;
    /**
     * Attributes that can be used with a NavInclude.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavInclude_graph com.kotlinbaseapplication:graph}</code></td><td></td></tr>
     * </table>
     * @see #NavInclude_graph
     */
    public static final int[] NavInclude={
      0x7f030209
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#graph}
     * attribute's value can be found in the {@link #NavInclude} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:graph
     */
    public static final int NavInclude_graph=0;
    /**
     * Attributes that can be used with a NavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationView_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_fitsSystemWindows android:fitsSystemWindows}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_elevation com.kotlinbaseapplication:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #NavigationView_headerLayout com.kotlinbaseapplication:headerLayout}</code></td><td>Layout resource to inflate as the header</td></tr>
     * <tr><td><code>{@link #NavigationView_itemBackground com.kotlinbaseapplication:itemBackground}</code></td><td>A background drawable to use for navigation items.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemHorizontalPadding com.kotlinbaseapplication:itemHorizontalPadding}</code></td><td>Horizontal padding (left and right) of navigation items, around the icon & text</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconPadding com.kotlinbaseapplication:itemIconPadding}</code></td><td>Padding between the icon and the text for navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconSize com.kotlinbaseapplication:itemIconSize}</code></td><td>The size of the icon navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconTint com.kotlinbaseapplication:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemMaxLines com.kotlinbaseapplication:itemMaxLines}</code></td><td>Makes the TextView of the item text be at most this many lines tall.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeAppearance com.kotlinbaseapplication:itemShapeAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeAppearanceOverlay com.kotlinbaseapplication:itemShapeAppearanceOverlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeFillColor com.kotlinbaseapplication:itemShapeFillColor}</code></td><td>Fill color for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetBottom com.kotlinbaseapplication:itemShapeInsetBottom}</code></td><td>Inset bottom margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetEnd com.kotlinbaseapplication:itemShapeInsetEnd}</code></td><td>Inset end margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetStart com.kotlinbaseapplication:itemShapeInsetStart}</code></td><td>Inset start margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetTop com.kotlinbaseapplication:itemShapeInsetTop}</code></td><td>Inset top margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextAppearance com.kotlinbaseapplication:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextColor com.kotlinbaseapplication:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_menu com.kotlinbaseapplication:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #NavigationView_shapeAppearance com.kotlinbaseapplication:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #NavigationView_shapeAppearanceOverlay com.kotlinbaseapplication:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #NavigationView_android_background
     * @see #NavigationView_android_fitsSystemWindows
     * @see #NavigationView_android_maxWidth
     * @see #NavigationView_elevation
     * @see #NavigationView_headerLayout
     * @see #NavigationView_itemBackground
     * @see #NavigationView_itemHorizontalPadding
     * @see #NavigationView_itemIconPadding
     * @see #NavigationView_itemIconSize
     * @see #NavigationView_itemIconTint
     * @see #NavigationView_itemMaxLines
     * @see #NavigationView_itemShapeAppearance
     * @see #NavigationView_itemShapeAppearanceOverlay
     * @see #NavigationView_itemShapeFillColor
     * @see #NavigationView_itemShapeInsetBottom
     * @see #NavigationView_itemShapeInsetEnd
     * @see #NavigationView_itemShapeInsetStart
     * @see #NavigationView_itemShapeInsetTop
     * @see #NavigationView_itemTextAppearance
     * @see #NavigationView_itemTextColor
     * @see #NavigationView_menu
     * @see #NavigationView_shapeAppearance
     * @see #NavigationView_shapeAppearanceOverlay
     */
    public static final int[] NavigationView={
      0x010100d4, 0x010100dd, 0x0101011f, 0x7f0301ad, 
      0x7f03020c, 0x7f03023d, 0x7f03023f, 0x7f030241, 
      0x7f030242, 0x7f030243, 0x7f030244, 0x7f030247, 
      0x7f030248, 0x7f030249, 0x7f03024a, 0x7f03024b, 
      0x7f03024c, 0x7f03024d, 0x7f030251, 0x7f030254, 
      0x7f0302e3, 0x7f030387, 0x7f03038a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int NavigationView_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fitsSystemWindows}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:fitsSystemWindows
     */
    public static final int NavigationView_android_fitsSystemWindows=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int NavigationView_android_maxWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:elevation
     */
    public static final int NavigationView_elevation=3;
    /**
     * <p>
     * @attr description
     * Layout resource to inflate as the header
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:headerLayout
     */
    public static final int NavigationView_headerLayout=4;
    /**
     * <p>
     * @attr description
     * A background drawable to use for navigation items. If this is set, this overrides the
     * default background drawable for items and the itemShape* attributes will be ignored
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemBackground
     */
    public static final int NavigationView_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Horizontal padding (left and right) of navigation items, around the icon & text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemHorizontalPadding
     */
    public static final int NavigationView_itemHorizontalPadding=6;
    /**
     * <p>
     * @attr description
     * Padding between the icon and the text for navigation items that display an icon
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemIconPadding
     */
    public static final int NavigationView_itemIconPadding=7;
    /**
     * <p>
     * @attr description
     * The size of the icon navigation items that display an icon
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemIconSize
     */
    public static final int NavigationView_itemIconSize=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemIconTint
     */
    public static final int NavigationView_itemIconTint=9;
    /**
     * <p>
     * @attr description
     * Makes the TextView of the item text be at most this many lines tall.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:itemMaxLines
     */
    public static final int NavigationView_itemMaxLines=10;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for the shaped item background. To use the shaped
     * item background, either itemShapeAppearance or itemShapeAppearanceOverlay must be set and
     * itemBackground must be null so that it can be set programmatically.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemShapeAppearance
     */
    public static final int NavigationView_itemShapeAppearance=11;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for item background. To be used to augment
     * attributes declared in itemShapeAppearance. To use the shaped item background, either
     * itemShapeAppearance or itemShapeAppearanceOverlay must be set and itemBackground must be
     * null so that it can be set programmatically.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemShapeAppearanceOverlay
     */
    public static final int NavigationView_itemShapeAppearanceOverlay=12;
    /**
     * <p>
     * @attr description
     * Fill color for the item background shape. Used if itemBackground isn't set and there is an
     * itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemShapeFillColor
     */
    public static final int NavigationView_itemShapeFillColor=13;
    /**
     * <p>
     * @attr description
     * Inset bottom margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemShapeInsetBottom
     */
    public static final int NavigationView_itemShapeInsetBottom=14;
    /**
     * <p>
     * @attr description
     * Inset end margin for the item background shape. Used if itemBackground isn't set and there
     * and there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemShapeInsetEnd
     */
    public static final int NavigationView_itemShapeInsetEnd=15;
    /**
     * <p>
     * @attr description
     * Inset start margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemShapeInsetStart
     */
    public static final int NavigationView_itemShapeInsetStart=16;
    /**
     * <p>
     * @attr description
     * Inset top margin for the item background shape. Used if itemBackground isn't set and there
     * is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:itemShapeInsetTop
     */
    public static final int NavigationView_itemShapeInsetTop=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#itemTextAppearance}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemTextAppearance
     */
    public static final int NavigationView_itemTextAppearance=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:itemTextColor
     */
    public static final int NavigationView_itemTextColor=19;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:menu
     */
    public static final int NavigationView_menu=20;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for NavigationView. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearance
     */
    public static final int NavigationView_shapeAppearance=21;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for NavigationView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearanceOverlay
     */
    public static final int NavigationView_shapeAppearanceOverlay=22;
    /**
     * Attributes that can be used with a Navigator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Navigator_android_label android:label}</code></td><td></td></tr>
     * <tr><td><code>{@link #Navigator_android_id android:id}</code></td><td></td></tr>
     * </table>
     * @see #Navigator_android_label
     * @see #Navigator_android_id
     */
    public static final int[] Navigator={
      0x01010001, 0x010100d0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#label}
     * attribute's value can be found in the {@link #Navigator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:label
     */
    public static final int Navigator_android_label=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Navigator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Navigator_android_id=1;
    /**
     * Attributes that can be used with a OnClick.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #OnClick_clickAction com.kotlinbaseapplication:clickAction}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnClick_targetId com.kotlinbaseapplication:targetId}</code></td><td></td></tr>
     * </table>
     * @see #OnClick_clickAction
     * @see #OnClick_targetId
     */
    public static final int[] OnClick={
      0x7f03010d, 0x7f0303f1
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#clickAction}
     * attribute's value can be found in the {@link #OnClick} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>jumpToEnd</td><td>100</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1000</td><td></td></tr>
     * <tr><td>toggle</td><td>11</td><td></td></tr>
     * <tr><td>transitionToEnd</td><td>1</td><td></td></tr>
     * <tr><td>transitionToStart</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:clickAction
     */
    public static final int OnClick_clickAction=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#targetId}
     * attribute's value can be found in the {@link #OnClick} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:targetId
     */
    public static final int OnClick_targetId=1;
    /**
     * Attributes that can be used with a OnSwipe.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #OnSwipe_dragDirection com.kotlinbaseapplication:dragDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_dragScale com.kotlinbaseapplication:dragScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_dragThreshold com.kotlinbaseapplication:dragThreshold}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_limitBoundsTo com.kotlinbaseapplication:limitBoundsTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_maxAcceleration com.kotlinbaseapplication:maxAcceleration}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_maxVelocity com.kotlinbaseapplication:maxVelocity}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_moveWhenScrollAtTop com.kotlinbaseapplication:moveWhenScrollAtTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_nestedScrollFlags com.kotlinbaseapplication:nestedScrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_onTouchUp com.kotlinbaseapplication:onTouchUp}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_touchAnchorId com.kotlinbaseapplication:touchAnchorId}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_touchAnchorSide com.kotlinbaseapplication:touchAnchorSide}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_touchRegionId com.kotlinbaseapplication:touchRegionId}</code></td><td></td></tr>
     * </table>
     * @see #OnSwipe_dragDirection
     * @see #OnSwipe_dragScale
     * @see #OnSwipe_dragThreshold
     * @see #OnSwipe_limitBoundsTo
     * @see #OnSwipe_maxAcceleration
     * @see #OnSwipe_maxVelocity
     * @see #OnSwipe_moveWhenScrollAtTop
     * @see #OnSwipe_nestedScrollFlags
     * @see #OnSwipe_onTouchUp
     * @see #OnSwipe_touchAnchorId
     * @see #OnSwipe_touchAnchorSide
     * @see #OnSwipe_touchRegionId
     */
    public static final int[] OnSwipe={
      0x7f030197, 0x7f030198, 0x7f030199, 0x7f0302a6, 
      0x7f0302d9, 0x7f0302e0, 0x7f0302f8, 0x7f030318, 
      0x7f030322, 0x7f03043c, 0x7f03043d, 0x7f03043e
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#dragDirection}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>dragDown</td><td>1</td><td></td></tr>
     * <tr><td>dragEnd</td><td>5</td><td></td></tr>
     * <tr><td>dragLeft</td><td>2</td><td></td></tr>
     * <tr><td>dragRight</td><td>3</td><td></td></tr>
     * <tr><td>dragStart</td><td>4</td><td></td></tr>
     * <tr><td>dragUp</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:dragDirection
     */
    public static final int OnSwipe_dragDirection=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#dragScale}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:dragScale
     */
    public static final int OnSwipe_dragScale=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#dragThreshold}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:dragThreshold
     */
    public static final int OnSwipe_dragThreshold=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#limitBoundsTo}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:limitBoundsTo
     */
    public static final int OnSwipe_limitBoundsTo=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#maxAcceleration}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:maxAcceleration
     */
    public static final int OnSwipe_maxAcceleration=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#maxVelocity}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:maxVelocity
     */
    public static final int OnSwipe_maxVelocity=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#moveWhenScrollAtTop}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:moveWhenScrollAtTop
     */
    public static final int OnSwipe_moveWhenScrollAtTop=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#nestedScrollFlags}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disablePostScroll</td><td>1</td><td></td></tr>
     * <tr><td>disableScroll</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:nestedScrollFlags
     */
    public static final int OnSwipe_nestedScrollFlags=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#onTouchUp}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>autoComplete</td><td>0</td><td></td></tr>
     * <tr><td>autoCompleteToEnd</td><td>2</td><td></td></tr>
     * <tr><td>autoCompleteToStart</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>4</td><td></td></tr>
     * <tr><td>decelerateAndComplete</td><td>5</td><td></td></tr>
     * <tr><td>stop</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:onTouchUp
     */
    public static final int OnSwipe_onTouchUp=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#touchAnchorId}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:touchAnchorId
     */
    public static final int OnSwipe_touchAnchorId=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#touchAnchorSide}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>middle</td><td>4</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:touchAnchorSide
     */
    public static final int OnSwipe_touchAnchorSide=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#touchRegionId}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:touchRegionId
     */
    public static final int OnSwipe_touchRegionId=11;
    /**
     * Attributes that can be used with a OtpTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #OtpTextView_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_active_color com.kotlinbaseapplication:bar_active_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_enabled com.kotlinbaseapplication:bar_enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_error_color com.kotlinbaseapplication:bar_error_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_height com.kotlinbaseapplication:bar_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_inactive_color com.kotlinbaseapplication:bar_inactive_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_margin com.kotlinbaseapplication:bar_margin}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_margin_bottom com.kotlinbaseapplication:bar_margin_bottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_margin_left com.kotlinbaseapplication:bar_margin_left}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_margin_right com.kotlinbaseapplication:bar_margin_right}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_margin_top com.kotlinbaseapplication:bar_margin_top}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_bar_success_color com.kotlinbaseapplication:bar_success_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_box_margin com.kotlinbaseapplication:box_margin}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_box_margin_bottom com.kotlinbaseapplication:box_margin_bottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_box_margin_left com.kotlinbaseapplication:box_margin_left}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_box_margin_right com.kotlinbaseapplication:box_margin_right}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_box_margin_top com.kotlinbaseapplication:box_margin_top}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_height com.kotlinbaseapplication:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_hide_otp com.kotlinbaseapplication:hide_otp}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_hide_otp_drawable com.kotlinbaseapplication:hide_otp_drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_length com.kotlinbaseapplication:length}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_otp com.kotlinbaseapplication:otp}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_otp_box_background com.kotlinbaseapplication:otp_box_background}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_otp_box_background_active com.kotlinbaseapplication:otp_box_background_active}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_otp_box_background_error com.kotlinbaseapplication:otp_box_background_error}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_otp_box_background_inactive com.kotlinbaseapplication:otp_box_background_inactive}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_otp_box_background_success com.kotlinbaseapplication:otp_box_background_success}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_otp_text_size com.kotlinbaseapplication:otp_text_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_text_typeface com.kotlinbaseapplication:text_typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpTextView_width com.kotlinbaseapplication:width}</code></td><td></td></tr>
     * </table>
     * @see #OtpTextView_android_textColor
     * @see #OtpTextView_bar_active_color
     * @see #OtpTextView_bar_enabled
     * @see #OtpTextView_bar_error_color
     * @see #OtpTextView_bar_height
     * @see #OtpTextView_bar_inactive_color
     * @see #OtpTextView_bar_margin
     * @see #OtpTextView_bar_margin_bottom
     * @see #OtpTextView_bar_margin_left
     * @see #OtpTextView_bar_margin_right
     * @see #OtpTextView_bar_margin_top
     * @see #OtpTextView_bar_success_color
     * @see #OtpTextView_box_margin
     * @see #OtpTextView_box_margin_bottom
     * @see #OtpTextView_box_margin_left
     * @see #OtpTextView_box_margin_right
     * @see #OtpTextView_box_margin_top
     * @see #OtpTextView_height
     * @see #OtpTextView_hide_otp
     * @see #OtpTextView_hide_otp_drawable
     * @see #OtpTextView_length
     * @see #OtpTextView_otp
     * @see #OtpTextView_otp_box_background
     * @see #OtpTextView_otp_box_background_active
     * @see #OtpTextView_otp_box_background_error
     * @see #OtpTextView_otp_box_background_inactive
     * @see #OtpTextView_otp_box_background_success
     * @see #OtpTextView_otp_text_size
     * @see #OtpTextView_text_typeface
     * @see #OtpTextView_width
     */
    public static final int[] OtpTextView={
      0x01010098, 0x7f030066, 0x7f030067, 0x7f030068, 
      0x7f030069, 0x7f03006a, 0x7f03006b, 0x7f03006c, 
      0x7f03006d, 0x7f03006e, 0x7f03006f, 0x7f030070, 
      0x7f030093, 0x7f030094, 0x7f030095, 0x7f030096, 
      0x7f030097, 0x7f03020d, 0x7f030216, 0x7f030217, 
      0x7f0302a3, 0x7f030325, 0x7f030327, 0x7f030328, 
      0x7f030329, 0x7f03032a, 0x7f03032b, 0x7f03032c, 
      0x7f030414, 0x7f03047b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int OtpTextView_android_textColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_active_color}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:bar_active_color
     */
    public static final int OtpTextView_bar_active_color=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_enabled}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:bar_enabled
     */
    public static final int OtpTextView_bar_enabled=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_error_color}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:bar_error_color
     */
    public static final int OtpTextView_bar_error_color=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_height}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:bar_height
     */
    public static final int OtpTextView_bar_height=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_inactive_color}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:bar_inactive_color
     */
    public static final int OtpTextView_bar_inactive_color=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_margin}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:bar_margin
     */
    public static final int OtpTextView_bar_margin=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_margin_bottom}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:bar_margin_bottom
     */
    public static final int OtpTextView_bar_margin_bottom=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_margin_left}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:bar_margin_left
     */
    public static final int OtpTextView_bar_margin_left=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_margin_right}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:bar_margin_right
     */
    public static final int OtpTextView_bar_margin_right=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_margin_top}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:bar_margin_top
     */
    public static final int OtpTextView_bar_margin_top=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#bar_success_color}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:bar_success_color
     */
    public static final int OtpTextView_bar_success_color=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#box_margin}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:box_margin
     */
    public static final int OtpTextView_box_margin=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#box_margin_bottom}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:box_margin_bottom
     */
    public static final int OtpTextView_box_margin_bottom=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#box_margin_left}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:box_margin_left
     */
    public static final int OtpTextView_box_margin_left=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#box_margin_right}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:box_margin_right
     */
    public static final int OtpTextView_box_margin_right=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#box_margin_top}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:box_margin_top
     */
    public static final int OtpTextView_box_margin_top=16;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#height}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:height
     */
    public static final int OtpTextView_height=17;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#hide_otp}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:hide_otp
     */
    public static final int OtpTextView_hide_otp=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#hide_otp_drawable}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:hide_otp_drawable
     */
    public static final int OtpTextView_hide_otp_drawable=19;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#length}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:length
     */
    public static final int OtpTextView_length=20;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#otp}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:otp
     */
    public static final int OtpTextView_otp=21;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#otp_box_background}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:otp_box_background
     */
    public static final int OtpTextView_otp_box_background=22;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#otp_box_background_active}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:otp_box_background_active
     */
    public static final int OtpTextView_otp_box_background_active=23;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#otp_box_background_error}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:otp_box_background_error
     */
    public static final int OtpTextView_otp_box_background_error=24;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#otp_box_background_inactive}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:otp_box_background_inactive
     */
    public static final int OtpTextView_otp_box_background_inactive=25;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#otp_box_background_success}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:otp_box_background_success
     */
    public static final int OtpTextView_otp_box_background_success=26;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#otp_text_size}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:otp_text_size
     */
    public static final int OtpTextView_otp_text_size=27;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#text_typeface}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:text_typeface
     */
    public static final int OtpTextView_text_typeface=28;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#width}
     * attribute's value can be found in the {@link #OtpTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:width
     */
    public static final int OtpTextView_width=29;
    /**
     * Attributes that can be used with a OtpView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #OtpView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_android_cursorVisible android:cursorVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_android_textAllCaps android:textAllCaps}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpCursorColor com.kotlinbaseapplication:OtpCursorColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpCursorWidth com.kotlinbaseapplication:OtpCursorWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpHideLineWhenFilled com.kotlinbaseapplication:OtpHideLineWhenFilled}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpItemCount com.kotlinbaseapplication:OtpItemCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpItemHeight com.kotlinbaseapplication:OtpItemHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpItemRadius com.kotlinbaseapplication:OtpItemRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpItemSpacing com.kotlinbaseapplication:OtpItemSpacing}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpItemWidth com.kotlinbaseapplication:OtpItemWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpLineColor com.kotlinbaseapplication:OtpLineColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpLineWidth com.kotlinbaseapplication:OtpLineWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpMaskingChar com.kotlinbaseapplication:OtpMaskingChar}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpRtlTextDirection com.kotlinbaseapplication:OtpRtlTextDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpState_filled com.kotlinbaseapplication:OtpState_filled}</code></td><td></td></tr>
     * <tr><td><code>{@link #OtpView_OtpViewType com.kotlinbaseapplication:OtpViewType}</code></td><td></td></tr>
     * </table>
     * @see #OtpView_android_itemBackground
     * @see #OtpView_android_cursorVisible
     * @see #OtpView_android_textAllCaps
     * @see #OtpView_OtpCursorColor
     * @see #OtpView_OtpCursorWidth
     * @see #OtpView_OtpHideLineWhenFilled
     * @see #OtpView_OtpItemCount
     * @see #OtpView_OtpItemHeight
     * @see #OtpView_OtpItemRadius
     * @see #OtpView_OtpItemSpacing
     * @see #OtpView_OtpItemWidth
     * @see #OtpView_OtpLineColor
     * @see #OtpView_OtpLineWidth
     * @see #OtpView_OtpMaskingChar
     * @see #OtpView_OtpRtlTextDirection
     * @see #OtpView_OtpState_filled
     * @see #OtpView_OtpViewType
     */
    public static final int[] OtpView={
      0x01010130, 0x01010152, 0x0101038c, 0x7f030000, 
      0x7f030001, 0x7f030002, 0x7f030003, 0x7f030004, 
      0x7f030005, 0x7f030006, 0x7f030007, 0x7f030008, 
      0x7f030009, 0x7f03000a, 0x7f03000b, 0x7f03000c, 
      0x7f03000d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#itemBackground}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int OtpView_android_itemBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#cursorVisible}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:cursorVisible
     */
    public static final int OtpView_android_cursorVisible=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAllCaps}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:textAllCaps
     */
    public static final int OtpView_android_textAllCaps=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpCursorColor}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:OtpCursorColor
     */
    public static final int OtpView_OtpCursorColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpCursorWidth}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:OtpCursorWidth
     */
    public static final int OtpView_OtpCursorWidth=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpHideLineWhenFilled}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:OtpHideLineWhenFilled
     */
    public static final int OtpView_OtpHideLineWhenFilled=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpItemCount}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:OtpItemCount
     */
    public static final int OtpView_OtpItemCount=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpItemHeight}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:OtpItemHeight
     */
    public static final int OtpView_OtpItemHeight=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpItemRadius}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:OtpItemRadius
     */
    public static final int OtpView_OtpItemRadius=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpItemSpacing}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:OtpItemSpacing
     */
    public static final int OtpView_OtpItemSpacing=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpItemWidth}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:OtpItemWidth
     */
    public static final int OtpView_OtpItemWidth=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpLineColor}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:OtpLineColor
     */
    public static final int OtpView_OtpLineColor=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpLineWidth}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:OtpLineWidth
     */
    public static final int OtpView_OtpLineWidth=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpMaskingChar}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:OtpMaskingChar
     */
    public static final int OtpView_OtpMaskingChar=13;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpRtlTextDirection}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:OtpRtlTextDirection
     */
    public static final int OtpView_OtpRtlTextDirection=14;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpState_filled}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:OtpState_filled
     */
    public static final int OtpView_OtpState_filled=15;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#OtpViewType}
     * attribute's value can be found in the {@link #OtpView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>line</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>2</td><td></td></tr>
     * <tr><td>rectangle</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:OtpViewType
     */
    public static final int OtpView_OtpViewType=16;
    /**
     * Attributes that can be used with a OtpViewTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #OtpViewTheme_otpViewStyle com.kotlinbaseapplication:otpViewStyle}</code></td><td></td></tr>
     * </table>
     * @see #OtpViewTheme_otpViewStyle
     */
    public static final int[] OtpViewTheme={
      0x7f030326
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#otpViewStyle}
     * attribute's value can be found in the {@link #OtpViewTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:otpViewStyle
     */
    public static final int OtpViewTheme_otpViewStyle=0;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.kotlinbaseapplication:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x7f03032d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.kotlinbaseapplication:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f0303b6
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a Preference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Preference_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_persistent android:persistent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_selectable android:selectable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_key android:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_summary android:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_order android:order}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_widgetLayout android:widgetLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_dependency android:dependency}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_shouldDisableView android:shouldDisableView}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_fragment android:fragment}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_singleLineTitle android:singleLineTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_iconSpaceReserved android:iconSpaceReserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_allowDividerAbove com.kotlinbaseapplication:allowDividerAbove}</code></td><td>Whether the preference allows displaying divider on top</td></tr>
     * <tr><td><code>{@link #Preference_allowDividerBelow com.kotlinbaseapplication:allowDividerBelow}</code></td><td>Whether the preference allows displaying divider below it</td></tr>
     * <tr><td><code>{@link #Preference_defaultValue com.kotlinbaseapplication:defaultValue}</code></td><td>The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.</td></tr>
     * <tr><td><code>{@link #Preference_dependency com.kotlinbaseapplication:dependency}</code></td><td>The key of another Preference that this Preference will depend on.</td></tr>
     * <tr><td><code>{@link #Preference_enableCopying com.kotlinbaseapplication:enableCopying}</code></td><td>Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference.</td></tr>
     * <tr><td><code>{@link #Preference_enabled com.kotlinbaseapplication:enabled}</code></td><td>Whether the Preference is enabled.</td></tr>
     * <tr><td><code>{@link #Preference_fragment com.kotlinbaseapplication:fragment}</code></td><td>When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.</td></tr>
     * <tr><td><code>{@link #Preference_icon com.kotlinbaseapplication:icon}</code></td><td>Icon drawable to display at the start of this view.</td></tr>
     * <tr><td><code>{@link #Preference_iconSpaceReserved com.kotlinbaseapplication:iconSpaceReserved}</code></td><td>Whether the space for the preference icon view will be reserved.</td></tr>
     * <tr><td><code>{@link #Preference_isPreferenceVisible com.kotlinbaseapplication:isPreferenceVisible}</code></td><td>Whether the Preference is visible.</td></tr>
     * <tr><td><code>{@link #Preference_key com.kotlinbaseapplication:key}</code></td><td>The key to store the Preference value.</td></tr>
     * <tr><td><code>{@link #Preference_layout com.kotlinbaseapplication:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #Preference_order com.kotlinbaseapplication:order}</code></td><td>The order for the Preference (lower values are to be ordered first).</td></tr>
     * <tr><td><code>{@link #Preference_persistent com.kotlinbaseapplication:persistent}</code></td><td>Whether the Preference stores its value to the shared preferences.</td></tr>
     * <tr><td><code>{@link #Preference_selectable com.kotlinbaseapplication:selectable}</code></td><td>Whether the Preference is selectable.</td></tr>
     * <tr><td><code>{@link #Preference_shouldDisableView com.kotlinbaseapplication:shouldDisableView}</code></td><td>Whether the view of this Preference should be disabled when
     * this Preference is disabled.</td></tr>
     * <tr><td><code>{@link #Preference_singleLineTitle com.kotlinbaseapplication:singleLineTitle}</code></td><td>Whether to use single line for the preference title text.</td></tr>
     * <tr><td><code>{@link #Preference_summary com.kotlinbaseapplication:summary}</code></td><td>The summary for the Preference in a PreferenceActivity screen.</td></tr>
     * <tr><td><code>{@link #Preference_title com.kotlinbaseapplication:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_widgetLayout com.kotlinbaseapplication:widgetLayout}</code></td><td>The layout for the controllable widget portion of a Preference.</td></tr>
     * </table>
     * @see #Preference_android_icon
     * @see #Preference_android_persistent
     * @see #Preference_android_enabled
     * @see #Preference_android_layout
     * @see #Preference_android_title
     * @see #Preference_android_selectable
     * @see #Preference_android_key
     * @see #Preference_android_summary
     * @see #Preference_android_order
     * @see #Preference_android_widgetLayout
     * @see #Preference_android_dependency
     * @see #Preference_android_defaultValue
     * @see #Preference_android_shouldDisableView
     * @see #Preference_android_fragment
     * @see #Preference_android_singleLineTitle
     * @see #Preference_android_iconSpaceReserved
     * @see #Preference_allowDividerAbove
     * @see #Preference_allowDividerBelow
     * @see #Preference_defaultValue
     * @see #Preference_dependency
     * @see #Preference_enableCopying
     * @see #Preference_enabled
     * @see #Preference_fragment
     * @see #Preference_icon
     * @see #Preference_iconSpaceReserved
     * @see #Preference_isPreferenceVisible
     * @see #Preference_key
     * @see #Preference_layout
     * @see #Preference_order
     * @see #Preference_persistent
     * @see #Preference_selectable
     * @see #Preference_shouldDisableView
     * @see #Preference_singleLineTitle
     * @see #Preference_summary
     * @see #Preference_title
     * @see #Preference_widgetLayout
     */
    public static final int[] Preference={
      0x01010002, 0x0101000d, 0x0101000e, 0x010100f2, 
      0x010101e1, 0x010101e6, 0x010101e8, 0x010101e9, 
      0x010101ea, 0x010101eb, 0x010101ec, 0x010101ed, 
      0x010101ee, 0x010102e3, 0x0101055c, 0x01010561, 
      0x7f03003d, 0x7f03003f, 0x7f030183, 0x7f030186, 
      0x7f0301b0, 0x7f0301b1, 0x7f030204, 0x7f030220, 
      0x7f030225, 0x7f030239, 0x7f030255, 0x7f030262, 
      0x7f030323, 0x7f030346, 0x7f030382, 0x7f03038c, 
      0x7f030399, 0x7f0303cb, 0x7f030429, 0x7f03047a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int Preference_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#persistent}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:persistent
     */
    public static final int Preference_android_persistent=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int Preference_android_enabled=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int Preference_android_layout=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int Preference_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:selectable
     */
    public static final int Preference_android_selectable=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#key}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:key
     */
    public static final int Preference_android_key=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int Preference_android_summary=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#order}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:order
     */
    public static final int Preference_android_order=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#widgetLayout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:widgetLayout
     */
    public static final int Preference_android_widgetLayout=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dependency}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dependency
     */
    public static final int Preference_android_dependency=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static final int Preference_android_defaultValue=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shouldDisableView}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:shouldDisableView
     */
    public static final int Preference_android_shouldDisableView=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fragment}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fragment
     */
    public static final int Preference_android_fragment=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#singleLineTitle}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:singleLineTitle
     */
    public static final int Preference_android_singleLineTitle=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#iconSpaceReserved}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:iconSpaceReserved
     */
    public static final int Preference_android_iconSpaceReserved=15;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider on top
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:allowDividerAbove
     */
    public static final int Preference_allowDividerAbove=16;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider below it
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:allowDividerBelow
     */
    public static final int Preference_allowDividerBelow=17;
    /**
     * <p>
     * @attr description
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:defaultValue
     */
    public static final int Preference_defaultValue=18;
    /**
     * <p>
     * @attr description
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:dependency
     */
    public static final int Preference_dependency=19;
    /**
     * <p>
     * @attr description
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:enableCopying
     */
    public static final int Preference_enableCopying=20;
    /**
     * <p>
     * @attr description
     * Whether the Preference is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:enabled
     */
    public static final int Preference_enabled=21;
    /**
     * <p>
     * @attr description
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:fragment
     */
    public static final int Preference_fragment=22;
    /**
     * <p>
     * @attr description
     * The optional icon for the preference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:icon
     */
    public static final int Preference_icon=23;
    /**
     * <p>
     * @attr description
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:iconSpaceReserved
     */
    public static final int Preference_iconSpaceReserved=24;
    /**
     * <p>
     * @attr description
     * Whether the Preference is visible. By default, this is set to true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:isPreferenceVisible
     */
    public static final int Preference_isPreferenceVisible=25;
    /**
     * <p>
     * @attr description
     * The key to store the Preference value.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:key
     */
    public static final int Preference_key=26;
    /**
     * <p>
     * @attr description
     * The layout for the Preference in a PreferenceActivity screen. This should
     * rarely need to be changed, look at widgetLayout instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layout
     */
    public static final int Preference_layout=27;
    /**
     * <p>
     * @attr description
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:order
     */
    public static final int Preference_order=28;
    /**
     * <p>
     * @attr description
     * Whether the Preference stores its value to the shared preferences.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:persistent
     */
    public static final int Preference_persistent=29;
    /**
     * <p>
     * @attr description
     * Whether the Preference is selectable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:selectable
     */
    public static final int Preference_selectable=30;
    /**
     * <p>
     * @attr description
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:shouldDisableView
     */
    public static final int Preference_shouldDisableView=31;
    /**
     * <p>
     * @attr description
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:singleLineTitle
     */
    public static final int Preference_singleLineTitle=32;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:summary
     */
    public static final int Preference_summary=33;
    /**
     * <p>
     * @attr description
     * The title for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:title
     */
    public static final int Preference_title=34;
    /**
     * <p>
     * @attr description
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:widgetLayout
     */
    public static final int Preference_widgetLayout=35;
    /**
     * Attributes that can be used with a PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_allowDividerAfterLastItem com.kotlinbaseapplication:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragment_android_layout
     * @see #PreferenceFragment_android_divider
     * @see #PreferenceFragment_android_dividerHeight
     * @see #PreferenceFragment_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragment={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f03003e
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragment_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragment_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragment_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:allowDividerAfterLastItem
     */
    public static final int PreferenceFragment_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceFragmentCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_allowDividerAfterLastItem com.kotlinbaseapplication:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragmentCompat_android_layout
     * @see #PreferenceFragmentCompat_android_divider
     * @see #PreferenceFragmentCompat_android_dividerHeight
     * @see #PreferenceFragmentCompat_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragmentCompat={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f03003e
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragmentCompat_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragmentCompat_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragmentCompat_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:allowDividerAfterLastItem
     */
    public static final int PreferenceFragmentCompat_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceGroup_android_orderingFromXml android:orderingFromXml}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceGroup_initialExpandedChildrenCount com.kotlinbaseapplication:initialExpandedChildrenCount}</code></td><td>The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden.</td></tr>
     * <tr><td><code>{@link #PreferenceGroup_orderingFromXml com.kotlinbaseapplication:orderingFromXml}</code></td><td>Whether to order the Preference under this group as they appear in the XML file.</td></tr>
     * </table>
     * @see #PreferenceGroup_android_orderingFromXml
     * @see #PreferenceGroup_initialExpandedChildrenCount
     * @see #PreferenceGroup_orderingFromXml
     */
    public static final int[] PreferenceGroup={
      0x010101e7, 0x7f030235, 0x7f030324
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orderingFromXml}
     * attribute's value can be found in the {@link #PreferenceGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:orderingFromXml
     */
    public static final int PreferenceGroup_android_orderingFromXml=0;
    /**
     * <p>
     * @attr description
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:initialExpandedChildrenCount
     */
    public static final int PreferenceGroup_initialExpandedChildrenCount=1;
    /**
     * <p>
     * @attr description
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:orderingFromXml
     */
    public static final int PreferenceGroup_orderingFromXml=2;
    /**
     * Attributes that can be used with a PreferenceImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxHeight com.kotlinbaseapplication:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxWidth com.kotlinbaseapplication:maxWidth}</code></td><td></td></tr>
     * </table>
     * @see #PreferenceImageView_android_maxWidth
     * @see #PreferenceImageView_android_maxHeight
     * @see #PreferenceImageView_maxHeight
     * @see #PreferenceImageView_maxWidth
     */
    public static final int[] PreferenceImageView={
      0x0101011f, 0x01010120, 0x7f0302dd, 0x7f0302e1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int PreferenceImageView_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int PreferenceImageView_android_maxHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:maxHeight
     */
    public static final int PreferenceImageView_maxHeight=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:maxWidth
     */
    public static final int PreferenceImageView_maxWidth=3;
    /**
     * Attributes that can be used with a PreferenceTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceTheme_checkBoxPreferenceStyle com.kotlinbaseapplication:checkBoxPreferenceStyle}</code></td><td>Default style for CheckBoxPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dialogPreferenceStyle com.kotlinbaseapplication:dialogPreferenceStyle}</code></td><td>Default style for DialogPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dropdownPreferenceStyle com.kotlinbaseapplication:dropdownPreferenceStyle}</code></td><td>Default style for DropDownPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_editTextPreferenceStyle com.kotlinbaseapplication:editTextPreferenceStyle}</code></td><td>Default style for EditTextPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryStyle com.kotlinbaseapplication:preferenceCategoryStyle}</code></td><td>Default style for PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryTitleTextAppearance com.kotlinbaseapplication:preferenceCategoryTitleTextAppearance}</code></td><td>The preferred TextAppearance for the title displayed in a PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentCompatStyle com.kotlinbaseapplication:preferenceFragmentCompatStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentListStyle com.kotlinbaseapplication:preferenceFragmentListStyle}</code></td><td>Preference fragment list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentStyle com.kotlinbaseapplication:preferenceFragmentStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceInformationStyle com.kotlinbaseapplication:preferenceInformationStyle}</code></td><td>Default style for informational Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceScreenStyle com.kotlinbaseapplication:preferenceScreenStyle}</code></td><td>Default style for PreferenceScreen.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceStyle com.kotlinbaseapplication:preferenceStyle}</code></td><td>Default style for Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceTheme com.kotlinbaseapplication:preferenceTheme}</code></td><td>Theme for inflating Preference objects</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_seekBarPreferenceStyle com.kotlinbaseapplication:seekBarPreferenceStyle}</code></td><td>Default style for seekbar preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceCompatStyle com.kotlinbaseapplication:switchPreferenceCompatStyle}</code></td><td>Default style for switch compat preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceStyle com.kotlinbaseapplication:switchPreferenceStyle}</code></td><td>Default style for switch preferences.</td></tr>
     * </table>
     * @see #PreferenceTheme_checkBoxPreferenceStyle
     * @see #PreferenceTheme_dialogPreferenceStyle
     * @see #PreferenceTheme_dropdownPreferenceStyle
     * @see #PreferenceTheme_editTextPreferenceStyle
     * @see #PreferenceTheme_preferenceCategoryStyle
     * @see #PreferenceTheme_preferenceCategoryTitleTextAppearance
     * @see #PreferenceTheme_preferenceFragmentCompatStyle
     * @see #PreferenceTheme_preferenceFragmentListStyle
     * @see #PreferenceTheme_preferenceFragmentStyle
     * @see #PreferenceTheme_preferenceInformationStyle
     * @see #PreferenceTheme_preferenceScreenStyle
     * @see #PreferenceTheme_preferenceStyle
     * @see #PreferenceTheme_preferenceTheme
     * @see #PreferenceTheme_seekBarPreferenceStyle
     * @see #PreferenceTheme_switchPreferenceCompatStyle
     * @see #PreferenceTheme_switchPreferenceStyle
     */
    public static final int[] PreferenceTheme={
      0x7f0300e7, 0x7f03018d, 0x7f0301a7, 0x7f0301ab, 
      0x7f030355, 0x7f030356, 0x7f030357, 0x7f030358, 
      0x7f030359, 0x7f03035a, 0x7f03035b, 0x7f03035c, 
      0x7f03035d, 0x7f030380, 0x7f0303d0, 0x7f0303d1
    };
    /**
     * <p>
     * @attr description
     * Default style for CheckBoxPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:checkBoxPreferenceStyle
     */
    public static final int PreferenceTheme_checkBoxPreferenceStyle=0;
    /**
     * <p>
     * @attr description
     * Default style for DialogPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dialogPreferenceStyle
     */
    public static final int PreferenceTheme_dialogPreferenceStyle=1;
    /**
     * <p>
     * @attr description
     * Default style for DropDownPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:dropdownPreferenceStyle
     */
    public static final int PreferenceTheme_dropdownPreferenceStyle=2;
    /**
     * <p>
     * @attr description
     * Default style for EditTextPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:editTextPreferenceStyle
     */
    public static final int PreferenceTheme_editTextPreferenceStyle=3;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceCategory.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:preferenceCategoryStyle
     */
    public static final int PreferenceTheme_preferenceCategoryStyle=4;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:preferenceCategoryTitleTextAppearance
     */
    public static final int PreferenceTheme_preferenceCategoryTitleTextAppearance=5;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:preferenceFragmentCompatStyle
     */
    public static final int PreferenceTheme_preferenceFragmentCompatStyle=6;
    /**
     * <p>
     * @attr description
     * Preference fragment list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:preferenceFragmentListStyle
     */
    public static final int PreferenceTheme_preferenceFragmentListStyle=7;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:preferenceFragmentStyle
     */
    public static final int PreferenceTheme_preferenceFragmentStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for informational Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:preferenceInformationStyle
     */
    public static final int PreferenceTheme_preferenceInformationStyle=9;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceScreen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:preferenceScreenStyle
     */
    public static final int PreferenceTheme_preferenceScreenStyle=10;
    /**
     * <p>
     * @attr description
     * Default style for Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:preferenceStyle
     */
    public static final int PreferenceTheme_preferenceStyle=11;
    /**
     * <p>
     * @attr description
     * Theme for inflating Preference objects
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:preferenceTheme
     */
    public static final int PreferenceTheme_preferenceTheme=12;
    /**
     * <p>
     * @attr description
     * Default style for seekbar preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:seekBarPreferenceStyle
     */
    public static final int PreferenceTheme_seekBarPreferenceStyle=13;
    /**
     * <p>
     * @attr description
     * Default style for switch compat preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:switchPreferenceCompatStyle
     */
    public static final int PreferenceTheme_switchPreferenceCompatStyle=14;
    /**
     * <p>
     * @attr description
     * Default style for switch preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:switchPreferenceStyle
     */
    public static final int PreferenceTheme_switchPreferenceStyle=15;
    /**
     * Attributes that can be used with a PropertySet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PropertySet_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_layout_constraintTag com.kotlinbaseapplication:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_motionProgress com.kotlinbaseapplication:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_visibilityMode com.kotlinbaseapplication:visibilityMode}</code></td><td></td></tr>
     * </table>
     * @see #PropertySet_android_visibility
     * @see #PropertySet_android_alpha
     * @see #PropertySet_layout_constraintTag
     * @see #PropertySet_motionProgress
     * @see #PropertySet_visibilityMode
     */
    public static final int[] PropertySet={
      0x010100dc, 0x0101031f, 0x7f03028a, 0x7f0302f3, 
      0x7f030472
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static final int PropertySet_android_visibility=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int PropertySet_android_alpha=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layout_constraintTag
     */
    public static final int PropertySet_layout_constraintTag=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionProgress}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:motionProgress
     */
    public static final int PropertySet_motionProgress=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#visibilityMode}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ignore</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:visibilityMode
     */
    public static final int PropertySet_visibilityMode=4;
    /**
     * Attributes that can be used with a RadialViewGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RadialViewGroup_materialCircleRadius com.kotlinbaseapplication:materialCircleRadius}</code></td><td></td></tr>
     * </table>
     * @see #RadialViewGroup_materialCircleRadius
     */
    public static final int[] RadialViewGroup={
      0x7f0302d4
    };
    /**
     * <p>
     * @attr description
     * Radius indicating how far away from the center of the group the
     * children are positioned
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:materialCircleRadius
     */
    public static final int RadialViewGroup_materialCircleRadius=0;
    /**
     * Attributes that can be used with a RangeSlider.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RangeSlider_minSeparation com.kotlinbaseapplication:minSeparation}</code></td><td>If there is more than one thumb, and the slider is
     * not discrete the thumbs will be separated by this dimen</td></tr>
     * <tr><td><code>{@link #RangeSlider_values com.kotlinbaseapplication:values}</code></td><td></td></tr>
     * </table>
     * @see #RangeSlider_minSeparation
     * @see #RangeSlider_values
     */
    public static final int[] RangeSlider={
      0x7f0302e7, 0x7f03046f
    };
    /**
     * <p>
     * @attr description
     * If there is more than one thumb, and the slider is
     * not discrete the thumbs will be separated by this dimen
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:minSeparation
     */
    public static final int RangeSlider_minSeparation=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#values}
     * attribute's value can be found in the {@link #RangeSlider} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:values
     */
    public static final int RangeSlider_values=1;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.kotlinbaseapplication:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.kotlinbaseapplication:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x7f03032f, 0x7f030335
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_clipToPadding android:clipToPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.kotlinbaseapplication:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.kotlinbaseapplication:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.kotlinbaseapplication:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.kotlinbaseapplication:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.kotlinbaseapplication:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.kotlinbaseapplication:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.kotlinbaseapplication:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.kotlinbaseapplication:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.kotlinbaseapplication:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_clipToPadding
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100eb, 0x010100f1, 0x7f0301da, 
      0x7f0301db, 0x7f0301dc, 0x7f0301dd, 0x7f0301de, 
      0x7f030265, 0x7f030373, 0x7f0303a0, 0x7f0303ad
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#clipToPadding}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:clipToPadding
     */
    public static final int RecyclerView_android_clipToPadding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=7;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:layoutManager
     */
    public static final int RecyclerView_layoutManager=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:spanCount
     */
    public static final int RecyclerView_spanCount=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=11;
    /**
     * Attributes that can be used with a ScrimInsetsFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrimInsetsFrameLayout_insetForeground com.kotlinbaseapplication:insetForeground}</code></td><td></td></tr>
     * </table>
     * @see #ScrimInsetsFrameLayout_insetForeground
     */
    public static final int[] ScrimInsetsFrameLayout={
      0x7f030236
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#insetForeground}
     * attribute's value can be found in the {@link #ScrimInsetsFrameLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:insetForeground
     */
    public static final int ScrimInsetsFrameLayout_insetForeground=0;
    /**
     * Attributes that can be used with a ScrollingViewBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrollingViewBehavior_Layout_behavior_overlapTop com.kotlinbaseapplication:behavior_overlapTop}</code></td><td>The amount that the scrolling view should overlap the bottom of any AppBarLayout</td></tr>
     * </table>
     * @see #ScrollingViewBehavior_Layout_behavior_overlapTop
     */
    public static final int[] ScrollingViewBehavior_Layout={
      0x7f03007b
    };
    /**
     * <p>
     * @attr description
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:behavior_overlapTop
     */
    public static final int ScrollingViewBehavior_Layout_behavior_overlapTop=0;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.kotlinbaseapplication:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.kotlinbaseapplication:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.kotlinbaseapplication:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.kotlinbaseapplication:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.kotlinbaseapplication:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.kotlinbaseapplication:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.kotlinbaseapplication:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.kotlinbaseapplication:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.kotlinbaseapplication:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.kotlinbaseapplication:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.kotlinbaseapplication:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.kotlinbaseapplication:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.kotlinbaseapplication:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f030112, 0x7f030143, 0x7f030181, 0x7f030208, 
      0x7f030229, 0x7f030262, 0x7f030367, 0x7f030368, 
      0x7f03037c, 0x7f03037d, 0x7f0303c2, 0x7f0303ca, 
      0x7f030473
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SeekBarPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_max android:max}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_adjustable com.kotlinbaseapplication:adjustable}</code></td><td>Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_min com.kotlinbaseapplication:min}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_seekBarIncrement com.kotlinbaseapplication:seekBarIncrement}</code></td><td>Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_showSeekBarValue com.kotlinbaseapplication:showSeekBarValue}</code></td><td>Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_updatesContinuously com.kotlinbaseapplication:updatesContinuously}</code></td><td>Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged.</td></tr>
     * </table>
     * @see #SeekBarPreference_android_layout
     * @see #SeekBarPreference_android_max
     * @see #SeekBarPreference_adjustable
     * @see #SeekBarPreference_min
     * @see #SeekBarPreference_seekBarIncrement
     * @see #SeekBarPreference_showSeekBarValue
     * @see #SeekBarPreference_updatesContinuously
     */
    public static final int[] SeekBarPreference={
      0x010100f2, 0x01010136, 0x7f030032, 0x7f0302e4, 
      0x7f03037f, 0x7f030393, 0x7f030469
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SeekBarPreference_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#max}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:max
     */
    public static final int SeekBarPreference_android_max=1;
    /**
     * <p>
     * @attr description
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:adjustable
     */
    public static final int SeekBarPreference_adjustable=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#min}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:min
     */
    public static final int SeekBarPreference_min=3;
    /**
     * <p>
     * @attr description
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:seekBarIncrement
     */
    public static final int SeekBarPreference_seekBarIncrement=4;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:showSeekBarValue
     */
    public static final int SeekBarPreference_showSeekBarValue=5;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:updatesContinuously
     */
    public static final int SeekBarPreference_updatesContinuously=6;
    /**
     * Attributes that can be used with a SelectableRoundedImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SelectableRoundedImageView_android_scaleType android:scaleType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SelectableRoundedImageView_sriv_border_color com.kotlinbaseapplication:sriv_border_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #SelectableRoundedImageView_sriv_border_width com.kotlinbaseapplication:sriv_border_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #SelectableRoundedImageView_sriv_left_bottom_corner_radius com.kotlinbaseapplication:sriv_left_bottom_corner_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #SelectableRoundedImageView_sriv_left_top_corner_radius com.kotlinbaseapplication:sriv_left_top_corner_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #SelectableRoundedImageView_sriv_oval com.kotlinbaseapplication:sriv_oval}</code></td><td></td></tr>
     * <tr><td><code>{@link #SelectableRoundedImageView_sriv_right_bottom_corner_radius com.kotlinbaseapplication:sriv_right_bottom_corner_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #SelectableRoundedImageView_sriv_right_top_corner_radius com.kotlinbaseapplication:sriv_right_top_corner_radius}</code></td><td></td></tr>
     * </table>
     * @see #SelectableRoundedImageView_android_scaleType
     * @see #SelectableRoundedImageView_sriv_border_color
     * @see #SelectableRoundedImageView_sriv_border_width
     * @see #SelectableRoundedImageView_sriv_left_bottom_corner_radius
     * @see #SelectableRoundedImageView_sriv_left_top_corner_radius
     * @see #SelectableRoundedImageView_sriv_oval
     * @see #SelectableRoundedImageView_sriv_right_bottom_corner_radius
     * @see #SelectableRoundedImageView_sriv_right_top_corner_radius
     */
    public static final int[] SelectableRoundedImageView={
      0x0101011d, 0x7f0303a6, 0x7f0303a7, 0x7f0303a8, 
      0x7f0303a9, 0x7f0303aa, 0x7f0303ab, 0x7f0303ac
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleType}
     * attribute's value can be found in the {@link #SelectableRoundedImageView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>5</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>7</td><td></td></tr>
     * <tr><td>fitCenter</td><td>3</td><td></td></tr>
     * <tr><td>fitEnd</td><td>4</td><td></td></tr>
     * <tr><td>fitStart</td><td>2</td><td></td></tr>
     * <tr><td>fitXY</td><td>1</td><td></td></tr>
     * <tr><td>matrix</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:scaleType
     */
    public static final int SelectableRoundedImageView_android_scaleType=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#sriv_border_color}
     * attribute's value can be found in the {@link #SelectableRoundedImageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:sriv_border_color
     */
    public static final int SelectableRoundedImageView_sriv_border_color=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#sriv_border_width}
     * attribute's value can be found in the {@link #SelectableRoundedImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:sriv_border_width
     */
    public static final int SelectableRoundedImageView_sriv_border_width=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#sriv_left_bottom_corner_radius}
     * attribute's value can be found in the {@link #SelectableRoundedImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:sriv_left_bottom_corner_radius
     */
    public static final int SelectableRoundedImageView_sriv_left_bottom_corner_radius=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#sriv_left_top_corner_radius}
     * attribute's value can be found in the {@link #SelectableRoundedImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:sriv_left_top_corner_radius
     */
    public static final int SelectableRoundedImageView_sriv_left_top_corner_radius=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#sriv_oval}
     * attribute's value can be found in the {@link #SelectableRoundedImageView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:sriv_oval
     */
    public static final int SelectableRoundedImageView_sriv_oval=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#sriv_right_bottom_corner_radius}
     * attribute's value can be found in the {@link #SelectableRoundedImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:sriv_right_bottom_corner_radius
     */
    public static final int SelectableRoundedImageView_sriv_right_bottom_corner_radius=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#sriv_right_top_corner_radius}
     * attribute's value can be found in the {@link #SelectableRoundedImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:sriv_right_top_corner_radius
     */
    public static final int SelectableRoundedImageView_sriv_right_top_corner_radius=7;
    /**
     * Attributes that can be used with a ShapeAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamily com.kotlinbaseapplication:cornerFamily}</code></td><td>Corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyBottomLeft com.kotlinbaseapplication:cornerFamilyBottomLeft}</code></td><td>Bottom left corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyBottomRight com.kotlinbaseapplication:cornerFamilyBottomRight}</code></td><td>Bottom right corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyTopLeft com.kotlinbaseapplication:cornerFamilyTopLeft}</code></td><td>Top left corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyTopRight com.kotlinbaseapplication:cornerFamilyTopRight}</code></td><td>Top right corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSize com.kotlinbaseapplication:cornerSize}</code></td><td>Corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeBottomLeft com.kotlinbaseapplication:cornerSizeBottomLeft}</code></td><td>Bottom left corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeBottomRight com.kotlinbaseapplication:cornerSizeBottomRight}</code></td><td>Bottom right corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeTopLeft com.kotlinbaseapplication:cornerSizeTopLeft}</code></td><td>Top left corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeTopRight com.kotlinbaseapplication:cornerSizeTopRight}</code></td><td>Top right corner size to be used in the ShapeAppearance.</td></tr>
     * </table>
     * @see #ShapeAppearance_cornerFamily
     * @see #ShapeAppearance_cornerFamilyBottomLeft
     * @see #ShapeAppearance_cornerFamilyBottomRight
     * @see #ShapeAppearance_cornerFamilyTopLeft
     * @see #ShapeAppearance_cornerFamilyTopRight
     * @see #ShapeAppearance_cornerSize
     * @see #ShapeAppearance_cornerSizeBottomLeft
     * @see #ShapeAppearance_cornerSizeBottomRight
     * @see #ShapeAppearance_cornerSizeTopLeft
     * @see #ShapeAppearance_cornerSizeTopRight
     */
    public static final int[] ShapeAppearance={
      0x7f03015c, 0x7f03015d, 0x7f03015e, 0x7f03015f, 
      0x7f030160, 0x7f030162, 0x7f030163, 0x7f030164, 
      0x7f030165, 0x7f030166
    };
    /**
     * <p>
     * @attr description
     * Corner family to be used in the ShapeAppearance. All corners default to this value
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:cornerFamily
     */
    public static final int ShapeAppearance_cornerFamily=0;
    /**
     * <p>
     * @attr description
     * Bottom left corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:cornerFamilyBottomLeft
     */
    public static final int ShapeAppearance_cornerFamilyBottomLeft=1;
    /**
     * <p>
     * @attr description
     * Bottom right corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:cornerFamilyBottomRight
     */
    public static final int ShapeAppearance_cornerFamilyBottomRight=2;
    /**
     * <p>
     * @attr description
     * Top left corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:cornerFamilyTopLeft
     */
    public static final int ShapeAppearance_cornerFamilyTopLeft=3;
    /**
     * <p>
     * @attr description
     * Top right corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:cornerFamilyTopRight
     */
    public static final int ShapeAppearance_cornerFamilyTopRight=4;
    /**
     * <p>
     * @attr description
     * Corner size to be used in the ShapeAppearance. All corners default to this value
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:cornerSize
     */
    public static final int ShapeAppearance_cornerSize=5;
    /**
     * <p>
     * @attr description
     * Bottom left corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:cornerSizeBottomLeft
     */
    public static final int ShapeAppearance_cornerSizeBottomLeft=6;
    /**
     * <p>
     * @attr description
     * Bottom right corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:cornerSizeBottomRight
     */
    public static final int ShapeAppearance_cornerSizeBottomRight=7;
    /**
     * <p>
     * @attr description
     * Top left corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:cornerSizeTopLeft
     */
    public static final int ShapeAppearance_cornerSizeTopLeft=8;
    /**
     * <p>
     * @attr description
     * Top right corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.kotlinbaseapplication:cornerSizeTopRight
     */
    public static final int ShapeAppearance_cornerSizeTopRight=9;
    /**
     * Attributes that can be used with a ShapeableImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPadding com.kotlinbaseapplication:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingBottom com.kotlinbaseapplication:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingEnd com.kotlinbaseapplication:contentPaddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingLeft com.kotlinbaseapplication:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingRight com.kotlinbaseapplication:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingStart com.kotlinbaseapplication:contentPaddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingTop com.kotlinbaseapplication:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_shapeAppearance com.kotlinbaseapplication:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_shapeAppearanceOverlay com.kotlinbaseapplication:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_strokeColor com.kotlinbaseapplication:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShapeableImageView_strokeWidth com.kotlinbaseapplication:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #ShapeableImageView_contentPadding
     * @see #ShapeableImageView_contentPaddingBottom
     * @see #ShapeableImageView_contentPaddingEnd
     * @see #ShapeableImageView_contentPaddingLeft
     * @see #ShapeableImageView_contentPaddingRight
     * @see #ShapeableImageView_contentPaddingStart
     * @see #ShapeableImageView_contentPaddingTop
     * @see #ShapeableImageView_shapeAppearance
     * @see #ShapeableImageView_shapeAppearanceOverlay
     * @see #ShapeableImageView_strokeColor
     * @see #ShapeableImageView_strokeWidth
     */
    public static final int[] ShapeableImageView={
      0x7f030151, 0x7f030152, 0x7f030153, 0x7f030154, 
      0x7f030155, 0x7f030156, 0x7f030157, 0x7f030387, 
      0x7f03038a, 0x7f0303bf, 0x7f0303c0
    };
    /**
     * <p>
     * @attr description
     * Attributes for padding the image, since android:padding is applied to the background
     * for ShapeableImageView
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPadding
     */
    public static final int ShapeableImageView_contentPadding=0;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingBottom
     */
    public static final int ShapeableImageView_contentPaddingBottom=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#contentPaddingEnd}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingEnd
     */
    public static final int ShapeableImageView_contentPaddingEnd=2;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingLeft
     */
    public static final int ShapeableImageView_contentPaddingLeft=3;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingRight
     */
    public static final int ShapeableImageView_contentPaddingRight=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#contentPaddingStart}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingStart
     */
    public static final int ShapeableImageView_contentPaddingStart=5;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentPaddingTop
     */
    public static final int ShapeableImageView_contentPaddingTop=6;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for ShapeableImageView. Attribute declaration is in the
     * shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearance
     */
    public static final int ShapeableImageView_shapeAppearance=7;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for ShapeableImageView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearanceOverlay
     */
    public static final int ShapeableImageView_shapeAppearanceOverlay=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#strokeColor}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:strokeColor
     */
    public static final int ShapeableImageView_strokeColor=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:strokeWidth
     */
    public static final int ShapeableImageView_strokeWidth=10;
    /**
     * Attributes that can be used with a SignInButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SignInButton_buttonSize com.kotlinbaseapplication:buttonSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #SignInButton_colorScheme com.kotlinbaseapplication:colorScheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #SignInButton_scopeUris com.kotlinbaseapplication:scopeUris}</code></td><td></td></tr>
     * </table>
     * @see #SignInButton_buttonSize
     * @see #SignInButton_colorScheme
     * @see #SignInButton_scopeUris
     */
    public static final int[] SignInButton={
      0x7f0300a2, 0x7f030132, 0x7f030378
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#buttonSize}
     * attribute's value can be found in the {@link #SignInButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>icon_only</td><td>2</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * <tr><td>wide</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:buttonSize
     */
    public static final int SignInButton_buttonSize=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#colorScheme}
     * attribute's value can be found in the {@link #SignInButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>dark</td><td>0</td><td></td></tr>
     * <tr><td>light</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:colorScheme
     */
    public static final int SignInButton_colorScheme=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#scopeUris}
     * attribute's value can be found in the {@link #SignInButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:scopeUris
     */
    public static final int SignInButton_scopeUris=2;
    /**
     * Attributes that can be used with a Slider.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Slider_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_value android:value}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_stepSize android:stepSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_valueFrom android:valueFrom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_valueTo android:valueTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_haloColor com.kotlinbaseapplication:haloColor}</code></td><td>The color of the slider's halo.</td></tr>
     * <tr><td><code>{@link #Slider_haloRadius com.kotlinbaseapplication:haloRadius}</code></td><td>The radius of the halo.</td></tr>
     * <tr><td><code>{@link #Slider_labelBehavior com.kotlinbaseapplication:labelBehavior}</code></td><td>Determines if Slider should increase its default height to include space for the label.</td></tr>
     * <tr><td><code>{@link #Slider_labelStyle com.kotlinbaseapplication:labelStyle}</code></td><td>The style used for the label TooltipDrawable.</td></tr>
     * <tr><td><code>{@link #Slider_thumbColor com.kotlinbaseapplication:thumbColor}</code></td><td>The color of the slider's thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbElevation com.kotlinbaseapplication:thumbElevation}</code></td><td>The elevation of the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbRadius com.kotlinbaseapplication:thumbRadius}</code></td><td>The radius of the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbStrokeColor com.kotlinbaseapplication:thumbStrokeColor}</code></td><td>The stroke color for the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbStrokeWidth com.kotlinbaseapplication:thumbStrokeWidth}</code></td><td>The stroke width for the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_tickColor com.kotlinbaseapplication:tickColor}</code></td><td>The color of the slider's tick marks.</td></tr>
     * <tr><td><code>{@link #Slider_tickColorActive com.kotlinbaseapplication:tickColorActive}</code></td><td>The color of the slider's tick marks for the active portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_tickColorInactive com.kotlinbaseapplication:tickColorInactive}</code></td><td>The color of the slider's tick marks for the inactive portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_tickVisible com.kotlinbaseapplication:tickVisible}</code></td><td>Whether to show the tick marks.</td></tr>
     * <tr><td><code>{@link #Slider_trackColor com.kotlinbaseapplication:trackColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_trackColorActive com.kotlinbaseapplication:trackColorActive}</code></td><td>The color of active portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_trackColorInactive com.kotlinbaseapplication:trackColorInactive}</code></td><td>The color of inactive portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_trackHeight com.kotlinbaseapplication:trackHeight}</code></td><td>The height of the track.</td></tr>
     * </table>
     * @see #Slider_android_enabled
     * @see #Slider_android_value
     * @see #Slider_android_stepSize
     * @see #Slider_android_valueFrom
     * @see #Slider_android_valueTo
     * @see #Slider_haloColor
     * @see #Slider_haloRadius
     * @see #Slider_labelBehavior
     * @see #Slider_labelStyle
     * @see #Slider_thumbColor
     * @see #Slider_thumbElevation
     * @see #Slider_thumbRadius
     * @see #Slider_thumbStrokeColor
     * @see #Slider_thumbStrokeWidth
     * @see #Slider_tickColor
     * @see #Slider_tickColorActive
     * @see #Slider_tickColorInactive
     * @see #Slider_tickVisible
     * @see #Slider_trackColor
     * @see #Slider_trackColorActive
     * @see #Slider_trackColorInactive
     * @see #Slider_trackHeight
     */
    public static final int[] Slider={
      0x0101000e, 0x01010024, 0x01010146, 0x010102de, 
      0x010102df, 0x7f03020a, 0x7f03020b, 0x7f030259, 
      0x7f03025a, 0x7f030418, 0x7f030419, 0x7f03041a, 
      0x7f03041b, 0x7f03041c, 0x7f030420, 0x7f030421, 
      0x7f030422, 0x7f030426, 0x7f030440, 0x7f030441, 
      0x7f030442, 0x7f030444
    };
    /**
     * <p>
     * @attr description
     * Whether the Slider is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int Slider_android_enabled=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#value}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:value
     */
    public static final int Slider_android_value=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#stepSize}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:stepSize
     */
    public static final int Slider_android_stepSize=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#valueFrom}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:valueFrom
     */
    public static final int Slider_android_valueFrom=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#valueTo}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:valueTo
     */
    public static final int Slider_android_valueTo=4;
    /**
     * <p>
     * @attr description
     * The color of the slider's halo.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:haloColor
     */
    public static final int Slider_haloColor=5;
    /**
     * <p>
     * @attr description
     * The radius of the halo.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:haloRadius
     */
    public static final int Slider_haloRadius=6;
    /**
     * <p>
     * @attr description
     * Determines if Slider should increase its default height to include space for the label.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>floating</td><td>0</td><td>Mode that draws the label floating above the bounds of this view.</td></tr>
     * <tr><td>gone</td><td>2</td><td>Mode that prevents the label from being drawn</td></tr>
     * <tr><td>withinBounds</td><td>1</td><td>Mode that draws the label within the bounds of the view.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:labelBehavior
     */
    public static final int Slider_labelBehavior=7;
    /**
     * <p>
     * @attr description
     * The style used for the label TooltipDrawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:labelStyle
     */
    public static final int Slider_labelStyle=8;
    /**
     * <p>
     * @attr description
     * The color of the slider's thumb.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:thumbColor
     */
    public static final int Slider_thumbColor=9;
    /**
     * <p>
     * @attr description
     * The elevation of the thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:thumbElevation
     */
    public static final int Slider_thumbElevation=10;
    /**
     * <p>
     * @attr description
     * The radius of the thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:thumbRadius
     */
    public static final int Slider_thumbRadius=11;
    /**
     * <p>
     * @attr description
     * The stroke color for the thumb.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:thumbStrokeColor
     */
    public static final int Slider_thumbStrokeColor=12;
    /**
     * <p>
     * @attr description
     * The stroke width for the thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:thumbStrokeWidth
     */
    public static final int Slider_thumbStrokeWidth=13;
    /**
     * <p>
     * @attr description
     * The color of the slider's tick marks. Only used when the slider is in discrete mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tickColor
     */
    public static final int Slider_tickColor=14;
    /**
     * <p>
     * @attr description
     * The color of the slider's tick marks for the active portion of the track. Only used when
     * the slider is in discrete mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tickColorActive
     */
    public static final int Slider_tickColorActive=15;
    /**
     * <p>
     * @attr description
     * The color of the slider's tick marks for the inactive portion of the track. Only used when
     * the slider is in discrete mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tickColorInactive
     */
    public static final int Slider_tickColorInactive=16;
    /**
     * <p>
     * @attr description
     * Whether to show the tick marks. Only used when the slider is in discrete mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:tickVisible
     */
    public static final int Slider_tickVisible=17;
    /**
     * <p>
     * @attr description
     * The color of the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:trackColor
     */
    public static final int Slider_trackColor=18;
    /**
     * <p>
     * @attr description
     * The color of active portion of the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:trackColorActive
     */
    public static final int Slider_trackColorActive=19;
    /**
     * <p>
     * @attr description
     * The color of inactive portion of the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:trackColorInactive
     */
    public static final int Slider_trackColorInactive=20;
    /**
     * <p>
     * @attr description
     * The height of the track.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:trackHeight
     */
    public static final int Slider_trackHeight=21;
    /**
     * Attributes that can be used with a Snackbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Snackbar_snackbarButtonStyle com.kotlinbaseapplication:snackbarButtonStyle}</code></td><td>Style to use for action button within a Snackbar in this theme.</td></tr>
     * <tr><td><code>{@link #Snackbar_snackbarStyle com.kotlinbaseapplication:snackbarStyle}</code></td><td>Style to use for Snackbars in this theme.</td></tr>
     * <tr><td><code>{@link #Snackbar_snackbarTextViewStyle com.kotlinbaseapplication:snackbarTextViewStyle}</code></td><td>Style to use for message text within a Snackbar in this theme.</td></tr>
     * </table>
     * @see #Snackbar_snackbarButtonStyle
     * @see #Snackbar_snackbarStyle
     * @see #Snackbar_snackbarTextViewStyle
     */
    public static final int[] Snackbar={
      0x7f03039d, 0x7f03039e, 0x7f03039f
    };
    /**
     * <p>
     * @attr description
     * Style to use for action button within a Snackbar in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:snackbarButtonStyle
     */
    public static final int Snackbar_snackbarButtonStyle=0;
    /**
     * <p>
     * @attr description
     * Style to use for Snackbars in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:snackbarStyle
     */
    public static final int Snackbar_snackbarStyle=1;
    /**
     * <p>
     * @attr description
     * Style to use for message text within a Snackbar in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:snackbarTextViewStyle
     */
    public static final int Snackbar_snackbarTextViewStyle=2;
    /**
     * Attributes that can be used with a SnackbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SnackbarLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SnackbarLayout_actionTextColorAlpha com.kotlinbaseapplication:actionTextColorAlpha}</code></td><td>Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_animationMode com.kotlinbaseapplication:animationMode}</code></td><td>Sets the enter and exit animations for a Snackbar.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundOverlayColorAlpha com.kotlinbaseapplication:backgroundOverlayColorAlpha}</code></td><td>Alpha level for the color that is overlaid on top of the background color.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundTint com.kotlinbaseapplication:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundTintMode com.kotlinbaseapplication:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_elevation com.kotlinbaseapplication:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_maxActionInlineWidth com.kotlinbaseapplication:maxActionInlineWidth}</code></td><td></td></tr>
     * </table>
     * @see #SnackbarLayout_android_maxWidth
     * @see #SnackbarLayout_actionTextColorAlpha
     * @see #SnackbarLayout_animationMode
     * @see #SnackbarLayout_backgroundOverlayColorAlpha
     * @see #SnackbarLayout_backgroundTint
     * @see #SnackbarLayout_backgroundTintMode
     * @see #SnackbarLayout_elevation
     * @see #SnackbarLayout_maxActionInlineWidth
     */
    public static final int[] SnackbarLayout={
      0x0101011f, 0x7f03002f, 0x7f030048, 0x7f03005d, 
      0x7f030060, 0x7f030061, 0x7f0301ad, 0x7f0302da
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SnackbarLayout_android_maxWidth=0;
    /**
     * <p>
     * @attr description
     * Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:actionTextColorAlpha
     */
    public static final int SnackbarLayout_actionTextColorAlpha=1;
    /**
     * <p>
     * @attr description
     * Sets the enter and exit animations for a Snackbar.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>Mode that corresponds to the fade in and out animations.</td></tr>
     * <tr><td>slide</td><td>0</td><td>Mode that corresponds to the slide in and out animations.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:animationMode
     */
    public static final int SnackbarLayout_animationMode=2;
    /**
     * <p>
     * @attr description
     * Alpha level for the color that is overlaid on top of the background color. Ignored if
     * backgroundTint is set.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundOverlayColorAlpha
     */
    public static final int SnackbarLayout_backgroundOverlayColorAlpha=3;
    /**
     * <p>
     * @attr description
     * Background tint used by the Snackbar background drawable. Accepts a ColorStateList or
     * ColorInt.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundTint
     */
    public static final int SnackbarLayout_backgroundTint=4;
    /**
     * <p>
     * @attr description
     * Background tint mode used by the Snackbar background drawable.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:backgroundTintMode
     */
    public static final int SnackbarLayout_backgroundTintMode=5;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:elevation
     */
    public static final int SnackbarLayout_elevation=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#maxActionInlineWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:maxActionInlineWidth
     */
    public static final int SnackbarLayout_maxActionInlineWidth=7;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.kotlinbaseapplication:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x7f030352
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a State.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #State_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #State_constraints com.kotlinbaseapplication:constraints}</code></td><td></td></tr>
     * </table>
     * @see #State_android_id
     * @see #State_constraints
     */
    public static final int[] State={
      0x010100d0, 0x7f030148
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #State} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int State_android_id=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#constraints}
     * attribute's value can be found in the {@link #State} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:constraints
     */
    public static final int State_constraints=1;
    /**
     * Attributes that can be used with a StateListDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawable_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawable_android_dither
     * @see #StateListDrawable_android_visible
     * @see #StateListDrawable_android_variablePadding
     * @see #StateListDrawable_android_constantSize
     * @see #StateListDrawable_android_enterFadeDuration
     * @see #StateListDrawable_android_exitFadeDuration
     */
    public static final int[] StateListDrawable={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int StateListDrawable_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int StateListDrawable_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int StateListDrawable_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int StateListDrawable_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int StateListDrawable_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int StateListDrawable_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a StateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawableItem_android_drawable
     */
    public static final int[] StateListDrawableItem={
      0x01010199
    };
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the state. If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int StateListDrawableItem_android_drawable=0;
    /**
     * Attributes that can be used with a StateSet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateSet_defaultState com.kotlinbaseapplication:defaultState}</code></td><td></td></tr>
     * </table>
     * @see #StateSet_defaultState
     */
    public static final int[] StateSet={
      0x7f030182
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#defaultState}
     * attribute's value can be found in the {@link #StateSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:defaultState
     */
    public static final int StateSet_defaultState=0;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.kotlinbaseapplication:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.kotlinbaseapplication:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.kotlinbaseapplication:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.kotlinbaseapplication:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.kotlinbaseapplication:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.kotlinbaseapplication:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.kotlinbaseapplication:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.kotlinbaseapplication:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.kotlinbaseapplication:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.kotlinbaseapplication:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.kotlinbaseapplication:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f030394, 
      0x7f0303a4, 0x7f0303ce, 0x7f0303cf, 0x7f0303d3, 
      0x7f03041d, 0x7f03041e, 0x7f03041f, 0x7f03043f, 
      0x7f030446, 0x7f030447
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a SwitchMaterial.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchMaterial_useMaterialThemeColors com.kotlinbaseapplication:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #SwitchMaterial_useMaterialThemeColors
     */
    public static final int[] SwitchMaterial={
      0x7f03046c
    };
    /**
     * <p>
     * @attr description
     * When set to true, SwitchMaterial will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:useMaterialThemeColors
     */
    public static final int SwitchMaterial_useMaterialThemeColors=0;
    /**
     * Attributes that can be used with a SwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_disableDependentsState com.kotlinbaseapplication:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOff com.kotlinbaseapplication:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOn com.kotlinbaseapplication:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOff com.kotlinbaseapplication:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOn com.kotlinbaseapplication:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreference_android_summaryOn
     * @see #SwitchPreference_android_summaryOff
     * @see #SwitchPreference_android_disableDependentsState
     * @see #SwitchPreference_android_switchTextOn
     * @see #SwitchPreference_android_switchTextOff
     * @see #SwitchPreference_disableDependentsState
     * @see #SwitchPreference_summaryOff
     * @see #SwitchPreference_summaryOn
     * @see #SwitchPreference_switchTextOff
     * @see #SwitchPreference_switchTextOn
     */
    public static final int[] SwitchPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f030191, 0x7f0303cc, 0x7f0303cd, 
      0x7f0303d4, 0x7f0303d5
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreference_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreference_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreference_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:disableDependentsState
     */
    public static final int SwitchPreference_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:summaryOff
     */
    public static final int SwitchPreference_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:summaryOn
     */
    public static final int SwitchPreference_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:switchTextOff
     */
    public static final int SwitchPreference_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:switchTextOn
     */
    public static final int SwitchPreference_switchTextOn=9;
    /**
     * Attributes that can be used with a SwitchPreferenceCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_disableDependentsState com.kotlinbaseapplication:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOff com.kotlinbaseapplication:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOn com.kotlinbaseapplication:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOff com.kotlinbaseapplication:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOn com.kotlinbaseapplication:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreferenceCompat_android_summaryOn
     * @see #SwitchPreferenceCompat_android_summaryOff
     * @see #SwitchPreferenceCompat_android_disableDependentsState
     * @see #SwitchPreferenceCompat_android_switchTextOn
     * @see #SwitchPreferenceCompat_android_switchTextOff
     * @see #SwitchPreferenceCompat_disableDependentsState
     * @see #SwitchPreferenceCompat_summaryOff
     * @see #SwitchPreferenceCompat_summaryOn
     * @see #SwitchPreferenceCompat_switchTextOff
     * @see #SwitchPreferenceCompat_switchTextOn
     */
    public static final int[] SwitchPreferenceCompat={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f030191, 0x7f0303cc, 0x7f0303cd, 
      0x7f0303d4, 0x7f0303d5
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreferenceCompat_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreferenceCompat_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreferenceCompat_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreferenceCompat_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:summaryOff
     */
    public static final int SwitchPreferenceCompat_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:summaryOn
     */
    public static final int SwitchPreferenceCompat_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:switchTextOff
     */
    public static final int SwitchPreferenceCompat_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:switchTextOn
     */
    public static final int SwitchPreferenceCompat_switchTextOn=9;
    /**
     * Attributes that can be used with a TabItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #TabItem_android_icon
     * @see #TabItem_android_layout
     * @see #TabItem_android_text
     */
    public static final int[] TabItem={
      0x01010002, 0x010100f2, 0x0101014f
    };
    /**
     * <p>
     * @attr description
     * Icon to display in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int TabItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * A reference to a layout resource to be displayed in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int TabItem_android_layout=1;
    /**
     * <p>
     * @attr description
     * Text to display in the tab.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int TabItem_android_text=2;
    /**
     * Attributes that can be used with a TabLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabLayout_tabBackground com.kotlinbaseapplication:tabBackground}</code></td><td>Reference to a background to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabContentStart com.kotlinbaseapplication:tabContentStart}</code></td><td>Position in the Y axis from the starting edge that tabs should be positioned from.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabGravity com.kotlinbaseapplication:tabGravity}</code></td><td>Gravity constant for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTint com.kotlinbaseapplication:tabIconTint}</code></td><td>Tint to apply to tab icons, if present.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTintMode com.kotlinbaseapplication:tabIconTintMode}</code></td><td>Blending mode to apply to tab icons.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicator com.kotlinbaseapplication:tabIndicator}</code></td><td>Reference to a drawable to use as selection indicator for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorAnimationDuration com.kotlinbaseapplication:tabIndicatorAnimationDuration}</code></td><td>Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorAnimationMode com.kotlinbaseapplication:tabIndicatorAnimationMode}</code></td><td>The animation mode used to animate the selection indicator between
     * destinations.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorColor com.kotlinbaseapplication:tabIndicatorColor}</code></td><td>Color of the indicator used to show the currently selected tab.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorFullWidth com.kotlinbaseapplication:tabIndicatorFullWidth}</code></td><td>Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorGravity com.kotlinbaseapplication:tabIndicatorGravity}</code></td><td>Gravity constant for tab selection indicator.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorHeight com.kotlinbaseapplication:tabIndicatorHeight}</code></td><td>{@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabInlineLabel com.kotlinbaseapplication:tabInlineLabel}</code></td><td>Whether to display tab labels horizontally inline with icons, or underneath icons.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMaxWidth com.kotlinbaseapplication:tabMaxWidth}</code></td><td>The maximum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMinWidth com.kotlinbaseapplication:tabMinWidth}</code></td><td>The minimum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMode com.kotlinbaseapplication:tabMode}</code></td><td>The behavior mode for the Tabs in this layout</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPadding com.kotlinbaseapplication:tabPadding}</code></td><td>The preferred padding along all edges of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingBottom com.kotlinbaseapplication:tabPaddingBottom}</code></td><td>The preferred padding along the bottom edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingEnd com.kotlinbaseapplication:tabPaddingEnd}</code></td><td>The preferred padding along the end edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingStart com.kotlinbaseapplication:tabPaddingStart}</code></td><td>The preferred padding along the start edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingTop com.kotlinbaseapplication:tabPaddingTop}</code></td><td>The preferred padding along the top edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabRippleColor com.kotlinbaseapplication:tabRippleColor}</code></td><td>Ripple color for the tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabSelectedTextColor com.kotlinbaseapplication:tabSelectedTextColor}</code></td><td>{@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextAppearance com.kotlinbaseapplication:tabTextAppearance}</code></td><td>A reference to a TextAppearance style to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextColor com.kotlinbaseapplication:tabTextColor}</code></td><td>The default text color to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabUnboundedRipple com.kotlinbaseapplication:tabUnboundedRipple}</code></td><td>Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.</td></tr>
     * </table>
     * @see #TabLayout_tabBackground
     * @see #TabLayout_tabContentStart
     * @see #TabLayout_tabGravity
     * @see #TabLayout_tabIconTint
     * @see #TabLayout_tabIconTintMode
     * @see #TabLayout_tabIndicator
     * @see #TabLayout_tabIndicatorAnimationDuration
     * @see #TabLayout_tabIndicatorAnimationMode
     * @see #TabLayout_tabIndicatorColor
     * @see #TabLayout_tabIndicatorFullWidth
     * @see #TabLayout_tabIndicatorGravity
     * @see #TabLayout_tabIndicatorHeight
     * @see #TabLayout_tabInlineLabel
     * @see #TabLayout_tabMaxWidth
     * @see #TabLayout_tabMinWidth
     * @see #TabLayout_tabMode
     * @see #TabLayout_tabPadding
     * @see #TabLayout_tabPaddingBottom
     * @see #TabLayout_tabPaddingEnd
     * @see #TabLayout_tabPaddingStart
     * @see #TabLayout_tabPaddingTop
     * @see #TabLayout_tabRippleColor
     * @see #TabLayout_tabSelectedTextColor
     * @see #TabLayout_tabTextAppearance
     * @see #TabLayout_tabTextColor
     * @see #TabLayout_tabUnboundedRipple
     */
    @Deprecated
    public static final int[] TabLayout={
      0x7f0303d6, 0x7f0303d7, 0x7f0303d8, 0x7f0303d9, 
      0x7f0303da, 0x7f0303db, 0x7f0303dc, 0x7f0303dd, 
      0x7f0303de, 0x7f0303df, 0x7f0303e0, 0x7f0303e1, 
      0x7f0303e2, 0x7f0303e3, 0x7f0303e4, 0x7f0303e5, 
      0x7f0303e6, 0x7f0303e7, 0x7f0303e8, 0x7f0303e9, 
      0x7f0303ea, 0x7f0303eb, 0x7f0303ec, 0x7f0303ee, 
      0x7f0303ef, 0x7f0303f0
    };
    /**
     * <p>
     * @attr description
     * Reference to a background to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tabBackground
     */
    public static final int TabLayout_tabBackground=0;
    /**
     * <p>
     * @attr description
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:tabContentStart
     */
    public static final int TabLayout_tabContentStart=1;
    /**
     * <p>
     * @attr description
     * Gravity constant for tabs.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:tabGravity
     */
    public static final int TabLayout_tabGravity=2;
    /**
     * <p>
     * @attr description
     * Tint to apply to tab icons, if present. This can be a color state list or a color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tabIconTint
     */
    public static final int TabLayout_tabIconTint=3;
    /**
     * <p>
     * @attr description
     * Blending mode to apply to tab icons.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:tabIconTintMode
     */
    public static final int TabLayout_tabIconTintMode=4;
    /**
     * <p>
     * @attr description
     * Reference to a drawable to use as selection indicator for tabs. If this attribute is not
     * specified, indicator defaults to a line along the bottom of the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tabIndicator
     */
    public static final int TabLayout_tabIndicator=5;
    /**
     * <p>
     * @attr description
     * Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:tabIndicatorAnimationDuration
     */
    public static final int TabLayout_tabIndicatorAnimationDuration=6;
    /**
     * <p>
     * @attr description
     * The animation mode used to animate the selection indicator between
     * destinations.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>elastic</td><td>1</td><td>Animate the selection indicator's left and right bounds out of step
     * with each other, decelerating the front and accelerating the back.
     * This causes the indicator to look like it stretches between destinations
     * an then shrinks back down to fit the size of it's target tab.</td></tr>
     * <tr><td>linear</td><td>0</td><td>Animate the selection indicator's left and right bounds in step with
     * each other.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:tabIndicatorAnimationMode
     */
    public static final int TabLayout_tabIndicatorAnimationMode=7;
    /**
     * <p>
     * @attr description
     * Color of the indicator used to show the currently selected tab.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tabIndicatorColor
     */
    public static final int TabLayout_tabIndicatorColor=8;
    /**
     * <p>
     * @attr description
     * Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label. If no text label is
     * present, it will be set to the width of the icon or to a minimum width of 24dp.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:tabIndicatorFullWidth
     */
    public static final int TabLayout_tabIndicatorFullWidth=9;
    /**
     * <p>
     * @attr description
     * Gravity constant for tab selection indicator.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td>Align indicator to the bottom of this tab layout.</td></tr>
     * <tr><td>center</td><td>1</td><td>Align indicator along the center of this tab layout.</td></tr>
     * <tr><td>stretch</td><td>3</td><td>Stretch indicator to match the height and width of a tab item in this layout.</td></tr>
     * <tr><td>top</td><td>2</td><td>Align indicator to the top of this tab layout.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:tabIndicatorGravity
     */
    public static final int TabLayout_tabIndicatorGravity=10;
    /**
     * <p>
     * @attr description
     * {@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height. For example, this can be
     * done by setting the <size> property in a <shape> resource.}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:tabIndicatorHeight
     */
    @Deprecated
    public static final int TabLayout_tabIndicatorHeight=11;
    /**
     * <p>
     * @attr description
     * Whether to display tab labels horizontally inline with icons, or underneath icons.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:tabInlineLabel
     */
    public static final int TabLayout_tabInlineLabel=12;
    /**
     * <p>
     * @attr description
     * The maximum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:tabMaxWidth
     */
    public static final int TabLayout_tabMaxWidth=13;
    /**
     * <p>
     * @attr description
     * The minimum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:tabMinWidth
     */
    public static final int TabLayout_tabMinWidth=14;
    /**
     * <p>
     * @attr description
     * The behavior mode for the Tabs in this layout
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:tabMode
     */
    public static final int TabLayout_tabMode=15;
    /**
     * <p>
     * @attr description
     * The preferred padding along all edges of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:tabPadding
     */
    public static final int TabLayout_tabPadding=16;
    /**
     * <p>
     * @attr description
     * The preferred padding along the bottom edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:tabPaddingBottom
     */
    public static final int TabLayout_tabPaddingBottom=17;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:tabPaddingEnd
     */
    public static final int TabLayout_tabPaddingEnd=18;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:tabPaddingStart
     */
    public static final int TabLayout_tabPaddingStart=19;
    /**
     * <p>
     * @attr description
     * The preferred padding along the top edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:tabPaddingTop
     */
    public static final int TabLayout_tabPaddingTop=20;
    /**
     * <p>
     * @attr description
     * Ripple color for the tabs. This may be a color state list, if the desired ripple color
     * should be stateful.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tabRippleColor
     */
    public static final int TabLayout_tabRippleColor=21;
    /**
     * <p>
     * @attr description
     * {@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tabSelectedTextColor
     */
    @Deprecated
    public static final int TabLayout_tabSelectedTextColor=22;
    /**
     * <p>
     * @attr description
     * A reference to a TextAppearance style to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tabTextAppearance
     */
    public static final int TabLayout_tabTextAppearance=23;
    /**
     * <p>
     * @attr description
     * The default text color to be applied to tabs.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:tabTextColor
     */
    public static final int TabLayout_tabTextColor=24;
    /**
     * <p>
     * @attr description
     * Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:tabUnboundedRipple
     */
    public static final int TabLayout_tabUnboundedRipple=25;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textFontWeight android:textFontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.kotlinbaseapplication:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_fontVariationSettings com.kotlinbaseapplication:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.kotlinbaseapplication:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textLocale com.kotlinbaseapplication:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_android_textFontWeight
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_fontVariationSettings
     * @see #TextAppearance_textAllCaps
     * @see #TextAppearance_textLocale
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x01010585, 
      0x7f0301f9, 0x7f030201, 0x7f0303f6, 0x7f030412
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textFontWeight}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:textFontWeight
     */
    public static final int TextAppearance_android_textFontWeight=11;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:fontFamily
     */
    public static final int TextAppearance_fontFamily=12;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available aftear api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:fontVariationSettings
     */
    public static final int TextAppearance_fontVariationSettings=13;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=14;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:textLocale
     */
    public static final int TextAppearance_textLocale=15;
    /**
     * Attributes that can be used with a TextInputEditText.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputEditText_textInputLayoutFocusedRectEnabled com.kotlinbaseapplication:textInputLayoutFocusedRectEnabled}</code></td><td>Whether the TextInputEditText should use the TextInputLayout's focused
     * rectangle instead of its own.</td></tr>
     * </table>
     * @see #TextInputEditText_textInputLayoutFocusedRectEnabled
     */
    public static final int[] TextInputEditText={
      0x7f030410
    };
    /**
     * <p>
     * @attr description
     * Whether the TextInputEditText should use the TextInputLayout's focused
     * rectangle instead of its own.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:textInputLayoutFocusedRectEnabled
     */
    public static final int TextInputEditText_textInputLayoutFocusedRectEnabled=0;
    /**
     * Attributes that can be used with a TextInputLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputLayout_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_hint android:hint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundColor com.kotlinbaseapplication:boxBackgroundColor}</code></td><td>The color to use for the box's background color when in filled box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundMode com.kotlinbaseapplication:boxBackgroundMode}</code></td><td>Whether the text input area should be drawn as a filled box, an outline box, or not as a box.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCollapsedPaddingTop com.kotlinbaseapplication:boxCollapsedPaddingTop}</code></td><td>Value to use for the EditText's collapsed top padding in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomEnd com.kotlinbaseapplication:boxCornerRadiusBottomEnd}</code></td><td>The value to use for the box's bottom end corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomStart com.kotlinbaseapplication:boxCornerRadiusBottomStart}</code></td><td>The value to use for the box's bottom start corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopEnd com.kotlinbaseapplication:boxCornerRadiusTopEnd}</code></td><td>The value to use for the box's top end corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopStart com.kotlinbaseapplication:boxCornerRadiusTopStart}</code></td><td>The value to use for the box's top start corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeColor com.kotlinbaseapplication:boxStrokeColor}</code></td><td>The color to use for the box's stroke when in outline box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeErrorColor com.kotlinbaseapplication:boxStrokeErrorColor}</code></td><td>The color to use for the box's stroke in outline box mode when an error
     * is being displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidth com.kotlinbaseapplication:boxStrokeWidth}</code></td><td>The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidthFocused com.kotlinbaseapplication:boxStrokeWidthFocused}</code></td><td>The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterEnabled com.kotlinbaseapplication:counterEnabled}</code></td><td>Whether the layout is laid out as if the character counter will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterMaxLength com.kotlinbaseapplication:counterMaxLength}</code></td><td>The max length to display in the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextAppearance com.kotlinbaseapplication:counterOverflowTextAppearance}</code></td><td>TextAppearance of the character counter when the text is longer than the max.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextColor com.kotlinbaseapplication:counterOverflowTextColor}</code></td><td>Text color of the character counter when the text is longer than the max.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextAppearance com.kotlinbaseapplication:counterTextAppearance}</code></td><td>TextAppearance of the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextColor com.kotlinbaseapplication:counterTextColor}</code></td><td>Text color of the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconCheckable com.kotlinbaseapplication:endIconCheckable}</code></td><td>Whether the end icon is checkable.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconContentDescription com.kotlinbaseapplication:endIconContentDescription}</code></td><td>Text to set as the content description for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconDrawable com.kotlinbaseapplication:endIconDrawable}</code></td><td>Drawable to use for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconMode com.kotlinbaseapplication:endIconMode}</code></td><td>The end icon mode of the TextInputLayout.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconTint com.kotlinbaseapplication:endIconTint}</code></td><td>Tint color to use for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconTintMode com.kotlinbaseapplication:endIconTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorContentDescription com.kotlinbaseapplication:errorContentDescription}</code></td><td>Text to set as the content description for the error view.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorEnabled com.kotlinbaseapplication:errorEnabled}</code></td><td>Whether the layout is laid out as if an error will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconDrawable com.kotlinbaseapplication:errorIconDrawable}</code></td><td>End icon to be shown when an error is displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconTint com.kotlinbaseapplication:errorIconTint}</code></td><td>Tint color to use for the error icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconTintMode com.kotlinbaseapplication:errorIconTintMode}</code></td><td>Blending mode used to apply the error icon tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextAppearance com.kotlinbaseapplication:errorTextAppearance}</code></td><td>TextAppearance of any error message displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextColor com.kotlinbaseapplication:errorTextColor}</code></td><td>Text color for any error message displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_expandedHintEnabled com.kotlinbaseapplication:expandedHintEnabled}</code></td><td>Whether the hint should occupy the input area when the text field is
     * unpopulated and not focused.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperText com.kotlinbaseapplication:helperText}</code></td><td>The text to display as helper text underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextEnabled com.kotlinbaseapplication:helperTextEnabled}</code></td><td>Whether the layout's helper text functionality is enabled.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextAppearance com.kotlinbaseapplication:helperTextTextAppearance}</code></td><td>TextAppearance of the helper text displayed underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextColor com.kotlinbaseapplication:helperTextTextColor}</code></td><td>Text color of the helper text displayed underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintAnimationEnabled com.kotlinbaseapplication:hintAnimationEnabled}</code></td><td>Whether to animate hint state changes.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintEnabled com.kotlinbaseapplication:hintEnabled}</code></td><td>Whether the layout's floating label functionality is enabled.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextAppearance com.kotlinbaseapplication:hintTextAppearance}</code></td><td>TextAppearance of the hint in the collapsed floating label.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextColor com.kotlinbaseapplication:hintTextColor}</code></td><td>Text color of the hint in the collapsed floating label.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleContentDescription com.kotlinbaseapplication:passwordToggleContentDescription}</code></td><td>Text to set as the content description for the password input visibility toggle.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleDrawable com.kotlinbaseapplication:passwordToggleDrawable}</code></td><td>Drawable to use as the password input visibility toggle icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleEnabled com.kotlinbaseapplication:passwordToggleEnabled}</code></td><td>Whether the view will display a toggle when the EditText has a password.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTint com.kotlinbaseapplication:passwordToggleTint}</code></td><td>Icon to use for the password input visibility toggle
     * Deprecated.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTintMode com.kotlinbaseapplication:passwordToggleTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_placeholderText com.kotlinbaseapplication:placeholderText}</code></td><td>The text to display as placeholder text in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_placeholderTextAppearance com.kotlinbaseapplication:placeholderTextAppearance}</code></td><td>TextAppearance of the placeholder text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_placeholderTextColor com.kotlinbaseapplication:placeholderTextColor}</code></td><td>Text color of the placeholder text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_prefixText com.kotlinbaseapplication:prefixText}</code></td><td>The text to display as prefix text in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_prefixTextAppearance com.kotlinbaseapplication:prefixTextAppearance}</code></td><td>TextAppearance of the prefix text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_prefixTextColor com.kotlinbaseapplication:prefixTextColor}</code></td><td>Text color of the prefix text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_shapeAppearance com.kotlinbaseapplication:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_shapeAppearanceOverlay com.kotlinbaseapplication:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconCheckable com.kotlinbaseapplication:startIconCheckable}</code></td><td>Whether the start icon is checkable.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconContentDescription com.kotlinbaseapplication:startIconContentDescription}</code></td><td>Text to set as the content description for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconDrawable com.kotlinbaseapplication:startIconDrawable}</code></td><td>Drawable to use for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconTint com.kotlinbaseapplication:startIconTint}</code></td><td>Tint color to use for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconTintMode com.kotlinbaseapplication:startIconTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_suffixText com.kotlinbaseapplication:suffixText}</code></td><td>The text to display as suffix text in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_suffixTextAppearance com.kotlinbaseapplication:suffixTextAppearance}</code></td><td>TextAppearance of the suffix text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_suffixTextColor com.kotlinbaseapplication:suffixTextColor}</code></td><td>Text color of the suffix text displayed in the text input area.</td></tr>
     * </table>
     * @see #TextInputLayout_android_enabled
     * @see #TextInputLayout_android_textColorHint
     * @see #TextInputLayout_android_hint
     * @see #TextInputLayout_boxBackgroundColor
     * @see #TextInputLayout_boxBackgroundMode
     * @see #TextInputLayout_boxCollapsedPaddingTop
     * @see #TextInputLayout_boxCornerRadiusBottomEnd
     * @see #TextInputLayout_boxCornerRadiusBottomStart
     * @see #TextInputLayout_boxCornerRadiusTopEnd
     * @see #TextInputLayout_boxCornerRadiusTopStart
     * @see #TextInputLayout_boxStrokeColor
     * @see #TextInputLayout_boxStrokeErrorColor
     * @see #TextInputLayout_boxStrokeWidth
     * @see #TextInputLayout_boxStrokeWidthFocused
     * @see #TextInputLayout_counterEnabled
     * @see #TextInputLayout_counterMaxLength
     * @see #TextInputLayout_counterOverflowTextAppearance
     * @see #TextInputLayout_counterOverflowTextColor
     * @see #TextInputLayout_counterTextAppearance
     * @see #TextInputLayout_counterTextColor
     * @see #TextInputLayout_endIconCheckable
     * @see #TextInputLayout_endIconContentDescription
     * @see #TextInputLayout_endIconDrawable
     * @see #TextInputLayout_endIconMode
     * @see #TextInputLayout_endIconTint
     * @see #TextInputLayout_endIconTintMode
     * @see #TextInputLayout_errorContentDescription
     * @see #TextInputLayout_errorEnabled
     * @see #TextInputLayout_errorIconDrawable
     * @see #TextInputLayout_errorIconTint
     * @see #TextInputLayout_errorIconTintMode
     * @see #TextInputLayout_errorTextAppearance
     * @see #TextInputLayout_errorTextColor
     * @see #TextInputLayout_expandedHintEnabled
     * @see #TextInputLayout_helperText
     * @see #TextInputLayout_helperTextEnabled
     * @see #TextInputLayout_helperTextTextAppearance
     * @see #TextInputLayout_helperTextTextColor
     * @see #TextInputLayout_hintAnimationEnabled
     * @see #TextInputLayout_hintEnabled
     * @see #TextInputLayout_hintTextAppearance
     * @see #TextInputLayout_hintTextColor
     * @see #TextInputLayout_passwordToggleContentDescription
     * @see #TextInputLayout_passwordToggleDrawable
     * @see #TextInputLayout_passwordToggleEnabled
     * @see #TextInputLayout_passwordToggleTint
     * @see #TextInputLayout_passwordToggleTintMode
     * @see #TextInputLayout_placeholderText
     * @see #TextInputLayout_placeholderTextAppearance
     * @see #TextInputLayout_placeholderTextColor
     * @see #TextInputLayout_prefixText
     * @see #TextInputLayout_prefixTextAppearance
     * @see #TextInputLayout_prefixTextColor
     * @see #TextInputLayout_shapeAppearance
     * @see #TextInputLayout_shapeAppearanceOverlay
     * @see #TextInputLayout_startIconCheckable
     * @see #TextInputLayout_startIconContentDescription
     * @see #TextInputLayout_startIconDrawable
     * @see #TextInputLayout_startIconTint
     * @see #TextInputLayout_startIconTintMode
     * @see #TextInputLayout_suffixText
     * @see #TextInputLayout_suffixTextAppearance
     * @see #TextInputLayout_suffixTextColor
     */
    public static final int[] TextInputLayout={
      0x0101000e, 0x0101009a, 0x01010150, 0x7f030088, 
      0x7f030089, 0x7f03008a, 0x7f03008b, 0x7f03008c, 
      0x7f03008d, 0x7f03008e, 0x7f03008f, 0x7f030090, 
      0x7f030091, 0x7f030092, 0x7f030167, 0x7f030168, 
      0x7f030169, 0x7f03016a, 0x7f03016b, 0x7f03016c, 
      0x7f0301b3, 0x7f0301b4, 0x7f0301b5, 0x7f0301b6, 
      0x7f0301b7, 0x7f0301b8, 0x7f0301bf, 0x7f0301c0, 
      0x7f0301c1, 0x7f0301c2, 0x7f0301c3, 0x7f0301c4, 
      0x7f0301c5, 0x7f0301c9, 0x7f03020e, 0x7f03020f, 
      0x7f030210, 0x7f030211, 0x7f030218, 0x7f030219, 
      0x7f03021a, 0x7f03021b, 0x7f03033a, 0x7f03033b, 
      0x7f03033c, 0x7f03033d, 0x7f03033e, 0x7f030348, 
      0x7f030349, 0x7f03034a, 0x7f03035e, 0x7f03035f, 
      0x7f030360, 0x7f030387, 0x7f03038a, 0x7f0303b1, 
      0x7f0303b2, 0x7f0303b3, 0x7f0303b4, 0x7f0303b5, 
      0x7f0303c7, 0x7f0303c8, 0x7f0303c9
    };
    /**
     * <p>
     * @attr description
     * Whether the layout is enabled
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int TextInputLayout_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The text color for the hint when the text field is not activated (such
     * as for the resting and disabled states).
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextInputLayout_android_textColorHint=1;
    /**
     * <p>
     * @attr description
     * The hint to display in the floating label.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:hint
     */
    public static final int TextInputLayout_android_hint=2;
    /**
     * <p>
     * @attr description
     * The color to use for the box's background color when in filled box mode.
     * If a non-stateful color resource is specified, default colors will be used for the hover
     * and disabled states.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:boxBackgroundColor
     */
    public static final int TextInputLayout_boxBackgroundColor=3;
    /**
     * <p>
     * @attr description
     * Whether the text input area should be drawn as a filled box, an outline box, or not as a box.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td>Filled box mode for the text input box.</td></tr>
     * <tr><td>none</td><td>0</td><td>Specifies that there should be no box set on the text input area.</td></tr>
     * <tr><td>outline</td><td>2</td><td>Outline box mode for the text input box.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:boxBackgroundMode
     */
    public static final int TextInputLayout_boxBackgroundMode=4;
    /**
     * <p>
     * @attr description
     * Value to use for the EditText's collapsed top padding in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:boxCollapsedPaddingTop
     */
    public static final int TextInputLayout_boxCollapsedPaddingTop=5;
    /**
     * <p>
     * @attr description
     * The value to use for the box's bottom end corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:boxCornerRadiusBottomEnd
     */
    public static final int TextInputLayout_boxCornerRadiusBottomEnd=6;
    /**
     * <p>
     * @attr description
     * The value to use for the box's bottom start corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:boxCornerRadiusBottomStart
     */
    public static final int TextInputLayout_boxCornerRadiusBottomStart=7;
    /**
     * <p>
     * @attr description
     * The value to use for the box's top end corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:boxCornerRadiusTopEnd
     */
    public static final int TextInputLayout_boxCornerRadiusTopEnd=8;
    /**
     * <p>
     * @attr description
     * The value to use for the box's top start corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:boxCornerRadiusTopStart
     */
    public static final int TextInputLayout_boxCornerRadiusTopStart=9;
    /**
     * <p>
     * @attr description
     * The color to use for the box's stroke when in outline box mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:boxStrokeColor
     */
    public static final int TextInputLayout_boxStrokeColor=10;
    /**
     * <p>
     * @attr description
     * The color to use for the box's stroke in outline box mode when an error
     * is being displayed. If not set, it defaults to errorTextColor if on
     * error state, or to counterOverflowTextColor if on overflow state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:boxStrokeErrorColor
     */
    public static final int TextInputLayout_boxStrokeErrorColor=11;
    /**
     * <p>
     * @attr description
     * The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:boxStrokeWidth
     */
    public static final int TextInputLayout_boxStrokeWidth=12;
    /**
     * <p>
     * @attr description
     * The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:boxStrokeWidthFocused
     */
    public static final int TextInputLayout_boxStrokeWidthFocused=13;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if the character counter will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:counterEnabled
     */
    public static final int TextInputLayout_counterEnabled=14;
    /**
     * <p>
     * @attr description
     * The max length to display in the character counter.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:counterMaxLength
     */
    public static final int TextInputLayout_counterMaxLength=15;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter when the text is longer than the max.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:counterOverflowTextAppearance
     */
    public static final int TextInputLayout_counterOverflowTextAppearance=16;
    /**
     * <p>
     * @attr description
     * Text color of the character counter when the text is longer than the max.
     * If set, this takes precedence over counterOverflowTextAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:counterOverflowTextColor
     */
    public static final int TextInputLayout_counterOverflowTextColor=17;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:counterTextAppearance
     */
    public static final int TextInputLayout_counterTextAppearance=18;
    /**
     * <p>
     * @attr description
     * Text color of the character counter.
     * If set, this takes precedence over counterTextAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:counterTextColor
     */
    public static final int TextInputLayout_counterTextColor=19;
    /**
     * <p>
     * @attr description
     * Whether the end icon is checkable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:endIconCheckable
     */
    public static final int TextInputLayout_endIconCheckable=20;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the end icon.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:endIconContentDescription
     */
    public static final int TextInputLayout_endIconContentDescription=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the end icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:endIconDrawable
     */
    public static final int TextInputLayout_endIconDrawable=22;
    /**
     * <p>
     * @attr description
     * The end icon mode of the TextInputLayout. It will display one of the end icons detailed
     * below, or no end icon.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clear_text</td><td>2</td><td>The view will display a clear text button while the EditText contains input.</td></tr>
     * <tr><td>custom</td><td>ffffffff</td><td>The view will display a custom icon specified by the user.</td></tr>
     * <tr><td>dropdown_menu</td><td>3</td><td>The view will display a toggle that displays/hides a dropdown menu.</td></tr>
     * <tr><td>none</td><td>0</td><td>No end icon.</td></tr>
     * <tr><td>password_toggle</td><td>1</td><td>The view will display a toggle when the EditText has a password.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:endIconMode
     */
    public static final int TextInputLayout_endIconMode=23;
    /**
     * <p>
     * @attr description
     * Tint color to use for the end icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:endIconTint
     */
    public static final int TextInputLayout_endIconTint=24;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:endIconTintMode
     */
    public static final int TextInputLayout_endIconTintMode=25;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the error view.
     * Should be set when the error message has special characters that a
     * screen reader is not able to announce properly.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:errorContentDescription
     */
    public static final int TextInputLayout_errorContentDescription=26;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if an error will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:errorEnabled
     */
    public static final int TextInputLayout_errorEnabled=27;
    /**
     * <p>
     * @attr description
     * End icon to be shown when an error is displayed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:errorIconDrawable
     */
    public static final int TextInputLayout_errorIconDrawable=28;
    /**
     * <p>
     * @attr description
     * Tint color to use for the error icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:errorIconTint
     */
    public static final int TextInputLayout_errorIconTint=29;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the error icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:errorIconTintMode
     */
    public static final int TextInputLayout_errorIconTintMode=30;
    /**
     * <p>
     * @attr description
     * TextAppearance of any error message displayed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:errorTextAppearance
     */
    public static final int TextInputLayout_errorTextAppearance=31;
    /**
     * <p>
     * @attr description
     * Text color for any error message displayed.
     * If set, this takes precedence over errorTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:errorTextColor
     */
    public static final int TextInputLayout_errorTextColor=32;
    /**
     * <p>
     * @attr description
     * Whether the hint should occupy the input area when the text field is
     * unpopulated and not focused.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:expandedHintEnabled
     */
    public static final int TextInputLayout_expandedHintEnabled=33;
    /**
     * <p>
     * @attr description
     * The text to display as helper text underneath the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:helperText
     */
    public static final int TextInputLayout_helperText=34;
    /**
     * <p>
     * @attr description
     * Whether the layout's helper text functionality is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:helperTextEnabled
     */
    public static final int TextInputLayout_helperTextEnabled=35;
    /**
     * <p>
     * @attr description
     * TextAppearance of the helper text displayed underneath the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:helperTextTextAppearance
     */
    public static final int TextInputLayout_helperTextTextAppearance=36;
    /**
     * <p>
     * @attr description
     * Text color of the helper text displayed underneath the text input area.
     * If set, this takes precedence over helperTextTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:helperTextTextColor
     */
    public static final int TextInputLayout_helperTextTextColor=37;
    /**
     * <p>
     * @attr description
     * Whether to animate hint state changes.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:hintAnimationEnabled
     */
    public static final int TextInputLayout_hintAnimationEnabled=38;
    /**
     * <p>
     * @attr description
     * Whether the layout's floating label functionality is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:hintEnabled
     */
    public static final int TextInputLayout_hintEnabled=39;
    /**
     * <p>
     * @attr description
     * TextAppearance of the hint in the collapsed floating label.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:hintTextAppearance
     */
    public static final int TextInputLayout_hintTextAppearance=40;
    /**
     * <p>
     * @attr description
     * Text color of the hint in the collapsed floating label.
     * If set, this takes precedence over hintTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:hintTextColor
     */
    public static final int TextInputLayout_hintTextColor=41;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the password input visibility toggle.
     * Deprecated. Use endIconContentDescription instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:passwordToggleContentDescription
     */
    public static final int TextInputLayout_passwordToggleContentDescription=42;
    /**
     * <p>
     * @attr description
     * Drawable to use as the password input visibility toggle icon.
     * Deprecated. Use endIconDrawable instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:passwordToggleDrawable
     */
    public static final int TextInputLayout_passwordToggleDrawable=43;
    /**
     * <p>
     * @attr description
     * Whether the view will display a toggle when the EditText has a password.
     * Deprecated. The view's end icon should be specified via endIconMode instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:passwordToggleEnabled
     */
    public static final int TextInputLayout_passwordToggleEnabled=44;
    /**
     * <p>
     * @attr description
     * Icon to use for the password input visibility toggle
     * Deprecated. Use endIconTint instead.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:passwordToggleTint
     */
    public static final int TextInputLayout_passwordToggleTint=45;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     * Deprecated. Use endIconTintMode instead.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:passwordToggleTintMode
     */
    public static final int TextInputLayout_passwordToggleTintMode=46;
    /**
     * <p>
     * @attr description
     * The text to display as placeholder text in the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:placeholderText
     */
    public static final int TextInputLayout_placeholderText=47;
    /**
     * <p>
     * @attr description
     * TextAppearance of the placeholder text displayed in the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:placeholderTextAppearance
     */
    public static final int TextInputLayout_placeholderTextAppearance=48;
    /**
     * <p>
     * @attr description
     * Text color of the placeholder text displayed in the text input area.
     * If set, this takes precedence over placeholderTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:placeholderTextColor
     */
    public static final int TextInputLayout_placeholderTextColor=49;
    /**
     * <p>
     * @attr description
     * The text to display as prefix text in the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:prefixText
     */
    public static final int TextInputLayout_prefixText=50;
    /**
     * <p>
     * @attr description
     * TextAppearance of the prefix text displayed in the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:prefixTextAppearance
     */
    public static final int TextInputLayout_prefixTextAppearance=51;
    /**
     * <p>
     * @attr description
     * Text color of the prefix text displayed in the text input area.
     * If set, this takes precedence over prefixTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:prefixTextColor
     */
    public static final int TextInputLayout_prefixTextColor=52;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for TextInputLayout. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearance
     */
    public static final int TextInputLayout_shapeAppearance=53;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for TextInputLayout. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:shapeAppearanceOverlay
     */
    public static final int TextInputLayout_shapeAppearanceOverlay=54;
    /**
     * <p>
     * @attr description
     * Whether the start icon is checkable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:startIconCheckable
     */
    public static final int TextInputLayout_startIconCheckable=55;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the start icon.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:startIconContentDescription
     */
    public static final int TextInputLayout_startIconContentDescription=56;
    /**
     * <p>
     * @attr description
     * Drawable to use for the start icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:startIconDrawable
     */
    public static final int TextInputLayout_startIconDrawable=57;
    /**
     * <p>
     * @attr description
     * Tint color to use for the start icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:startIconTint
     */
    public static final int TextInputLayout_startIconTint=58;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:startIconTintMode
     */
    public static final int TextInputLayout_startIconTintMode=59;
    /**
     * <p>
     * @attr description
     * The text to display as suffix text in the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:suffixText
     */
    public static final int TextInputLayout_suffixText=60;
    /**
     * <p>
     * @attr description
     * TextAppearance of the suffix text displayed in the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:suffixTextAppearance
     */
    public static final int TextInputLayout_suffixTextAppearance=61;
    /**
     * <p>
     * @attr description
     * Text color of the suffix text displayed in the text input area.
     * If set, this takes precedence over suffixTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:suffixTextColor
     */
    public static final int TextInputLayout_suffixTextColor=62;
    /**
     * Attributes that can be used with a ThemeEnforcement.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ThemeEnforcement_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceMaterialTheme com.kotlinbaseapplication:enforceMaterialTheme}</code></td><td>Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.</td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceTextAppearance com.kotlinbaseapplication:enforceTextAppearance}</code></td><td>Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.</td></tr>
     * </table>
     * @see #ThemeEnforcement_android_textAppearance
     * @see #ThemeEnforcement_enforceMaterialTheme
     * @see #ThemeEnforcement_enforceTextAppearance
     */
    public static final int[] ThemeEnforcement={
      0x01010034, 0x7f0301b9, 0x7f0301ba
    };
    /**
     * <p>
     * @attr description
     * Attribute used to check that a component has a TextAppearance specified on it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int ThemeEnforcement_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.
     * Not all usages of new attributes are problematic in the context of a legacy app theme. You
     * should only use this flag if a particular usage is known to cause a visual glitch or crash.
     * For example, tinting a vector drawable with a non-existent theme attribute is known to
     * crash on pre-21 devices.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:enforceMaterialTheme
     */
    public static final int ThemeEnforcement_enforceMaterialTheme=1;
    /**
     * <p>
     * @attr description
     * Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:enforceTextAppearance
     */
    public static final int ThemeEnforcement_enforceTextAppearance=2;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.kotlinbaseapplication:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.kotlinbaseapplication:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.kotlinbaseapplication:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.kotlinbaseapplication:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.kotlinbaseapplication:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.kotlinbaseapplication:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.kotlinbaseapplication:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.kotlinbaseapplication:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.kotlinbaseapplication:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.kotlinbaseapplication:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.kotlinbaseapplication:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.kotlinbaseapplication:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_menu com.kotlinbaseapplication:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.kotlinbaseapplication:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.kotlinbaseapplication:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.kotlinbaseapplication:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.kotlinbaseapplication:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.kotlinbaseapplication:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.kotlinbaseapplication:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.kotlinbaseapplication:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.kotlinbaseapplication:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.kotlinbaseapplication:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.kotlinbaseapplication:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.kotlinbaseapplication:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.kotlinbaseapplication:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.kotlinbaseapplication:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.kotlinbaseapplication:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.kotlinbaseapplication:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_menu
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f03009f, 0x7f03011a, 
      0x7f03011b, 0x7f03014b, 0x7f03014c, 0x7f03014d, 
      0x7f03014e, 0x7f03014f, 0x7f030150, 0x7f0302ba, 
      0x7f0302bb, 0x7f0302db, 0x7f0302e3, 0x7f030312, 
      0x7f030313, 0x7f030352, 0x7f0303c3, 0x7f0303c4, 
      0x7f0303c5, 0x7f030429, 0x7f03042b, 0x7f03042c, 
      0x7f03042d, 0x7f03042e, 0x7f03042f, 0x7f030430, 
      0x7f030431, 0x7f030432
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Menu resource to inflate to be shown in the toolbar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:menu
     */
    public static final int Toolbar_menu=14;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=15;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:navigationIcon
     */
    public static final int Toolbar_navigationIcon=16;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:popupTheme
     */
    public static final int Toolbar_popupTheme=17;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:subtitle
     */
    public static final int Toolbar_subtitle=18;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=19;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=20;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:title
     */
    public static final int Toolbar_title=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:titleMargin
     */
    public static final int Toolbar_titleMargin=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=25;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=26;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=27;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=28;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:titleTextColor
     */
    public static final int Toolbar_titleTextColor=29;
    /**
     * Attributes that can be used with a Tooltip.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Tooltip_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_padding android:padding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_layout_margin android:layout_margin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_backgroundTint com.kotlinbaseapplication:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * </table>
     * @see #Tooltip_android_textAppearance
     * @see #Tooltip_android_padding
     * @see #Tooltip_android_layout_margin
     * @see #Tooltip_android_minWidth
     * @see #Tooltip_android_minHeight
     * @see #Tooltip_android_text
     * @see #Tooltip_backgroundTint
     */
    public static final int[] Tooltip={
      0x01010034, 0x010100d5, 0x010100f6, 0x0101013f, 
      0x01010140, 0x0101014f, 0x7f030060
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int Tooltip_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#padding}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:padding
     */
    public static final int Tooltip_android_padding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_margin}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_margin
     */
    public static final int Tooltip_android_layout_margin=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int Tooltip_android_minWidth=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Tooltip_android_minHeight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int Tooltip_android_text=5;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundTint
     */
    public static final int Tooltip_backgroundTint=6;
    /**
     * Attributes that can be used with a Transform.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Transform_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_elevation android:elevation}</code></td><td></td></tr>
     * </table>
     * @see #Transform_android_transformPivotX
     * @see #Transform_android_transformPivotY
     * @see #Transform_android_translationX
     * @see #Transform_android_translationY
     * @see #Transform_android_scaleX
     * @see #Transform_android_scaleY
     * @see #Transform_android_rotation
     * @see #Transform_android_rotationX
     * @see #Transform_android_rotationY
     * @see #Transform_android_translationZ
     * @see #Transform_android_elevation
     */
    public static final int[] Transform={
      0x01010320, 0x01010321, 0x01010322, 0x01010323, 
      0x01010324, 0x01010325, 0x01010326, 0x01010327, 
      0x01010328, 0x010103fa, 0x01010440
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static final int Transform_android_transformPivotX=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static final int Transform_android_transformPivotY=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int Transform_android_translationX=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int Transform_android_translationY=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int Transform_android_scaleX=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int Transform_android_scaleY=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int Transform_android_rotation=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int Transform_android_rotationX=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int Transform_android_rotationY=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int Transform_android_translationZ=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int Transform_android_elevation=10;
    /**
     * Attributes that can be used with a Transition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Transition_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_autoTransition com.kotlinbaseapplication:autoTransition}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_constraintSetEnd com.kotlinbaseapplication:constraintSetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_constraintSetStart com.kotlinbaseapplication:constraintSetStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_duration com.kotlinbaseapplication:duration}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_layoutDuringTransition com.kotlinbaseapplication:layoutDuringTransition}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_motionInterpolator com.kotlinbaseapplication:motionInterpolator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_pathMotionArc com.kotlinbaseapplication:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_staggered com.kotlinbaseapplication:staggered}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_transitionDisable com.kotlinbaseapplication:transitionDisable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_transitionFlags com.kotlinbaseapplication:transitionFlags}</code></td><td></td></tr>
     * </table>
     * @see #Transition_android_id
     * @see #Transition_autoTransition
     * @see #Transition_constraintSetEnd
     * @see #Transition_constraintSetStart
     * @see #Transition_duration
     * @see #Transition_layoutDuringTransition
     * @see #Transition_motionInterpolator
     * @see #Transition_pathMotionArc
     * @see #Transition_staggered
     * @see #Transition_transitionDisable
     * @see #Transition_transitionFlags
     */
    public static final int[] Transition={
      0x010100d0, 0x7f030056, 0x7f030145, 0x7f030146, 
      0x7f0301a8, 0x7f030264, 0x7f0302f1, 0x7f03033f, 
      0x7f0303ae, 0x7f030448, 0x7f03044a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Transition_android_id=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#autoTransition}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>animateToEnd</td><td>4</td><td></td></tr>
     * <tr><td>animateToStart</td><td>3</td><td></td></tr>
     * <tr><td>jumpToEnd</td><td>2</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:autoTransition
     */
    public static final int Transition_autoTransition=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#constraintSetEnd}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:constraintSetEnd
     */
    public static final int Transition_constraintSetEnd=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#constraintSetStart}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:constraintSetStart
     */
    public static final int Transition_constraintSetStart=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#duration}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:duration
     */
    public static final int Transition_duration=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#layoutDuringTransition}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>honorRequest</td><td>1</td><td></td></tr>
     * <tr><td>ignoreRequest</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:layoutDuringTransition
     */
    public static final int Transition_layoutDuringTransition=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#motionInterpolator}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>5</td><td></td></tr>
     * <tr><td>easeIn</td><td>1</td><td></td></tr>
     * <tr><td>easeInOut</td><td>0</td><td></td></tr>
     * <tr><td>easeOut</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:motionInterpolator
     */
    public static final int Transition_motionInterpolator=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:pathMotionArc
     */
    public static final int Transition_pathMotionArc=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#staggered}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:staggered
     */
    public static final int Transition_staggered=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionDisable}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:transitionDisable
     */
    public static final int Transition_transitionDisable=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#transitionFlags}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginOnFirstDraw</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:transitionFlags
     */
    public static final int Transition_transitionFlags=10;
    /**
     * Attributes that can be used with a Variant.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Variant_constraints com.kotlinbaseapplication:constraints}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_heightLessThan com.kotlinbaseapplication:region_heightLessThan}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_heightMoreThan com.kotlinbaseapplication:region_heightMoreThan}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_widthLessThan com.kotlinbaseapplication:region_widthLessThan}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_widthMoreThan com.kotlinbaseapplication:region_widthMoreThan}</code></td><td></td></tr>
     * </table>
     * @see #Variant_constraints
     * @see #Variant_region_heightLessThan
     * @see #Variant_region_heightMoreThan
     * @see #Variant_region_widthLessThan
     * @see #Variant_region_widthMoreThan
     */
    public static final int[] Variant={
      0x7f030148, 0x7f03036f, 0x7f030370, 0x7f030371, 
      0x7f030372
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#constraints}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:constraints
     */
    public static final int Variant_constraints=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#region_heightLessThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:region_heightLessThan
     */
    public static final int Variant_region_heightLessThan=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#region_heightMoreThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:region_heightMoreThan
     */
    public static final int Variant_region_heightMoreThan=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#region_widthLessThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:region_widthLessThan
     */
    public static final int Variant_region_widthLessThan=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#region_widthMoreThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:region_widthMoreThan
     */
    public static final int Variant_region_widthMoreThan=4;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.kotlinbaseapplication:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.kotlinbaseapplication:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.kotlinbaseapplication:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x7f030331, 0x7f030334, 
      0x7f030415
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.kotlinbaseapplication:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.kotlinbaseapplication:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x7f030060, 0x7f030061
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewPager2.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewPager2_android_orientation android:orientation}</code></td><td></td></tr>
     * </table>
     * @see #ViewPager2_android_orientation
     */
    public static final int[] ViewPager2={
      0x010100c4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ViewPager2} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int ViewPager2_android_orientation=0;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
    /**
     * Attributes that can be used with a com_facebook_like_view.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #com_facebook_like_view_com_facebook_auxiliary_view_position com.kotlinbaseapplication:com_facebook_auxiliary_view_position}</code></td><td></td></tr>
     * <tr><td><code>{@link #com_facebook_like_view_com_facebook_foreground_color com.kotlinbaseapplication:com_facebook_foreground_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #com_facebook_like_view_com_facebook_horizontal_alignment com.kotlinbaseapplication:com_facebook_horizontal_alignment}</code></td><td></td></tr>
     * <tr><td><code>{@link #com_facebook_like_view_com_facebook_object_id com.kotlinbaseapplication:com_facebook_object_id}</code></td><td></td></tr>
     * <tr><td><code>{@link #com_facebook_like_view_com_facebook_object_type com.kotlinbaseapplication:com_facebook_object_type}</code></td><td></td></tr>
     * <tr><td><code>{@link #com_facebook_like_view_com_facebook_style com.kotlinbaseapplication:com_facebook_style}</code></td><td></td></tr>
     * </table>
     * @see #com_facebook_like_view_com_facebook_auxiliary_view_position
     * @see #com_facebook_like_view_com_facebook_foreground_color
     * @see #com_facebook_like_view_com_facebook_horizontal_alignment
     * @see #com_facebook_like_view_com_facebook_object_id
     * @see #com_facebook_like_view_com_facebook_object_type
     * @see #com_facebook_like_view_com_facebook_style
     */
    public static final int[] com_facebook_like_view={
      0x7f030137, 0x7f030139, 0x7f03013a, 0x7f03013e, 
      0x7f03013f, 0x7f030141
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_auxiliary_view_position}
     * attribute's value can be found in the {@link #com_facebook_like_view} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * <tr><td>inline</td><td>1</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:com_facebook_auxiliary_view_position
     */
    public static final int com_facebook_like_view_com_facebook_auxiliary_view_position=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_foreground_color}
     * attribute's value can be found in the {@link #com_facebook_like_view} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:com_facebook_foreground_color
     */
    public static final int com_facebook_like_view_com_facebook_foreground_color=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_horizontal_alignment}
     * attribute's value can be found in the {@link #com_facebook_like_view} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:com_facebook_horizontal_alignment
     */
    public static final int com_facebook_like_view_com_facebook_horizontal_alignment=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_object_id}
     * attribute's value can be found in the {@link #com_facebook_like_view} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:com_facebook_object_id
     */
    public static final int com_facebook_like_view_com_facebook_object_id=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_object_type}
     * attribute's value can be found in the {@link #com_facebook_like_view} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>open_graph</td><td>1</td><td></td></tr>
     * <tr><td>page</td><td>2</td><td></td></tr>
     * <tr><td>unknown</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:com_facebook_object_type
     */
    public static final int com_facebook_like_view_com_facebook_object_type=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_style}
     * attribute's value can be found in the {@link #com_facebook_like_view} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>box_count</td><td>2</td><td></td></tr>
     * <tr><td>button</td><td>1</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:com_facebook_style
     */
    public static final int com_facebook_like_view_com_facebook_style=5;
    /**
     * Attributes that can be used with a com_facebook_login_view.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #com_facebook_login_view_com_facebook_confirm_logout com.kotlinbaseapplication:com_facebook_confirm_logout}</code></td><td></td></tr>
     * <tr><td><code>{@link #com_facebook_login_view_com_facebook_login_text com.kotlinbaseapplication:com_facebook_login_text}</code></td><td></td></tr>
     * <tr><td><code>{@link #com_facebook_login_view_com_facebook_logout_text com.kotlinbaseapplication:com_facebook_logout_text}</code></td><td></td></tr>
     * <tr><td><code>{@link #com_facebook_login_view_com_facebook_tooltip_mode com.kotlinbaseapplication:com_facebook_tooltip_mode}</code></td><td></td></tr>
     * </table>
     * @see #com_facebook_login_view_com_facebook_confirm_logout
     * @see #com_facebook_login_view_com_facebook_login_text
     * @see #com_facebook_login_view_com_facebook_logout_text
     * @see #com_facebook_login_view_com_facebook_tooltip_mode
     */
    public static final int[] com_facebook_login_view={
      0x7f030138, 0x7f03013c, 0x7f03013d, 0x7f030142
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_confirm_logout}
     * attribute's value can be found in the {@link #com_facebook_login_view} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:com_facebook_confirm_logout
     */
    public static final int com_facebook_login_view_com_facebook_confirm_logout=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_login_text}
     * attribute's value can be found in the {@link #com_facebook_login_view} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:com_facebook_login_text
     */
    public static final int com_facebook_login_view_com_facebook_login_text=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_logout_text}
     * attribute's value can be found in the {@link #com_facebook_login_view} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:com_facebook_logout_text
     */
    public static final int com_facebook_login_view_com_facebook_logout_text=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_tooltip_mode}
     * attribute's value can be found in the {@link #com_facebook_login_view} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>automatic</td><td>0</td><td></td></tr>
     * <tr><td>display_always</td><td>1</td><td></td></tr>
     * <tr><td>never_display</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:com_facebook_tooltip_mode
     */
    public static final int com_facebook_login_view_com_facebook_tooltip_mode=3;
    /**
     * Attributes that can be used with a com_facebook_profile_picture_view.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #com_facebook_profile_picture_view_com_facebook_is_cropped com.kotlinbaseapplication:com_facebook_is_cropped}</code></td><td></td></tr>
     * <tr><td><code>{@link #com_facebook_profile_picture_view_com_facebook_preset_size com.kotlinbaseapplication:com_facebook_preset_size}</code></td><td></td></tr>
     * </table>
     * @see #com_facebook_profile_picture_view_com_facebook_is_cropped
     * @see #com_facebook_profile_picture_view_com_facebook_preset_size
     */
    public static final int[] com_facebook_profile_picture_view={
      0x7f03013b, 0x7f030140
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_is_cropped}
     * attribute's value can be found in the {@link #com_facebook_profile_picture_view} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:com_facebook_is_cropped
     */
    public static final int com_facebook_profile_picture_view_com_facebook_is_cropped=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#com_facebook_preset_size}
     * attribute's value can be found in the {@link #com_facebook_profile_picture_view} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>large</td><td>fffffffc</td><td></td></tr>
     * <tr><td>normal</td><td>fffffffd</td><td></td></tr>
     * <tr><td>small</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.kotlinbaseapplication:com_facebook_preset_size
     */
    public static final int com_facebook_profile_picture_view_com_facebook_preset_size=1;
    /**
     * Attributes that can be used with a fastscroll__fastScroller.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #fastscroll__fastScroller_fastscroll__bubbleColor com.kotlinbaseapplication:fastscroll__bubbleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #fastscroll__fastScroller_fastscroll__bubbleTextAppearance com.kotlinbaseapplication:fastscroll__bubbleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #fastscroll__fastScroller_fastscroll__handleColor com.kotlinbaseapplication:fastscroll__handleColor}</code></td><td></td></tr>
     * </table>
     * @see #fastscroll__fastScroller_fastscroll__bubbleColor
     * @see #fastscroll__fastScroller_fastscroll__bubbleTextAppearance
     * @see #fastscroll__fastScroller_fastscroll__handleColor
     */
    public static final int[] fastscroll__fastScroller={
      0x7f0301df, 0x7f0301e0, 0x7f0301e1
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#fastscroll__bubbleColor}
     * attribute's value can be found in the {@link #fastscroll__fastScroller} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:fastscroll__bubbleColor
     */
    public static final int fastscroll__fastScroller_fastscroll__bubbleColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#fastscroll__bubbleTextAppearance}
     * attribute's value can be found in the {@link #fastscroll__fastScroller} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.kotlinbaseapplication:fastscroll__bubbleTextAppearance
     */
    public static final int fastscroll__fastScroller_fastscroll__bubbleTextAppearance=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#fastscroll__handleColor}
     * attribute's value can be found in the {@link #fastscroll__fastScroller} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:fastscroll__handleColor
     */
    public static final int fastscroll__fastScroller_fastscroll__handleColor=2;
    /**
     * Attributes that can be used with a ucrop_AspectRatioTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ucrop_AspectRatioTextView_ucrop_artv_ratio_title com.kotlinbaseapplication:ucrop_artv_ratio_title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_AspectRatioTextView_ucrop_artv_ratio_x com.kotlinbaseapplication:ucrop_artv_ratio_x}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_AspectRatioTextView_ucrop_artv_ratio_y com.kotlinbaseapplication:ucrop_artv_ratio_y}</code></td><td></td></tr>
     * </table>
     * @see #ucrop_AspectRatioTextView_ucrop_artv_ratio_title
     * @see #ucrop_AspectRatioTextView_ucrop_artv_ratio_x
     * @see #ucrop_AspectRatioTextView_ucrop_artv_ratio_y
     */
    public static final int[] ucrop_AspectRatioTextView={
      0x7f030451, 0x7f030452, 0x7f030453
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_artv_ratio_title}
     * attribute's value can be found in the {@link #ucrop_AspectRatioTextView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.kotlinbaseapplication:ucrop_artv_ratio_title
     */
    public static final int ucrop_AspectRatioTextView_ucrop_artv_ratio_title=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_artv_ratio_x}
     * attribute's value can be found in the {@link #ucrop_AspectRatioTextView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_artv_ratio_x
     */
    public static final int ucrop_AspectRatioTextView_ucrop_artv_ratio_x=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_artv_ratio_y}
     * attribute's value can be found in the {@link #ucrop_AspectRatioTextView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_artv_ratio_y
     */
    public static final int ucrop_AspectRatioTextView_ucrop_artv_ratio_y=2;
    /**
     * Attributes that can be used with a ucrop_UCropView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_aspect_ratio_x com.kotlinbaseapplication:ucrop_aspect_ratio_x}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_aspect_ratio_y com.kotlinbaseapplication:ucrop_aspect_ratio_y}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_circle_dimmed_layer com.kotlinbaseapplication:ucrop_circle_dimmed_layer}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_dimmed_color com.kotlinbaseapplication:ucrop_dimmed_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_frame_color com.kotlinbaseapplication:ucrop_frame_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_frame_stroke_size com.kotlinbaseapplication:ucrop_frame_stroke_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_grid_color com.kotlinbaseapplication:ucrop_grid_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_grid_column_count com.kotlinbaseapplication:ucrop_grid_column_count}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_grid_row_count com.kotlinbaseapplication:ucrop_grid_row_count}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_grid_stroke_size com.kotlinbaseapplication:ucrop_grid_stroke_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_show_frame com.kotlinbaseapplication:ucrop_show_frame}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_show_grid com.kotlinbaseapplication:ucrop_show_grid}</code></td><td></td></tr>
     * <tr><td><code>{@link #ucrop_UCropView_ucrop_show_oval_crop_frame com.kotlinbaseapplication:ucrop_show_oval_crop_frame}</code></td><td></td></tr>
     * </table>
     * @see #ucrop_UCropView_ucrop_aspect_ratio_x
     * @see #ucrop_UCropView_ucrop_aspect_ratio_y
     * @see #ucrop_UCropView_ucrop_circle_dimmed_layer
     * @see #ucrop_UCropView_ucrop_dimmed_color
     * @see #ucrop_UCropView_ucrop_frame_color
     * @see #ucrop_UCropView_ucrop_frame_stroke_size
     * @see #ucrop_UCropView_ucrop_grid_color
     * @see #ucrop_UCropView_ucrop_grid_column_count
     * @see #ucrop_UCropView_ucrop_grid_row_count
     * @see #ucrop_UCropView_ucrop_grid_stroke_size
     * @see #ucrop_UCropView_ucrop_show_frame
     * @see #ucrop_UCropView_ucrop_show_grid
     * @see #ucrop_UCropView_ucrop_show_oval_crop_frame
     */
    public static final int[] ucrop_UCropView={
      0x7f030454, 0x7f030455, 0x7f030456, 0x7f030457, 
      0x7f030458, 0x7f030459, 0x7f03045a, 0x7f03045b, 
      0x7f03045c, 0x7f03045d, 0x7f03045e, 0x7f03045f, 
      0x7f030460
    };
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_aspect_ratio_x}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_aspect_ratio_x
     */
    public static final int ucrop_UCropView_ucrop_aspect_ratio_x=0;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_aspect_ratio_y}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_aspect_ratio_y
     */
    public static final int ucrop_UCropView_ucrop_aspect_ratio_y=1;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_circle_dimmed_layer}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_circle_dimmed_layer
     */
    public static final int ucrop_UCropView_ucrop_circle_dimmed_layer=2;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_dimmed_color}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_dimmed_color
     */
    public static final int ucrop_UCropView_ucrop_dimmed_color=3;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_frame_color}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_frame_color
     */
    public static final int ucrop_UCropView_ucrop_frame_color=4;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_frame_stroke_size}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:ucrop_frame_stroke_size
     */
    public static final int ucrop_UCropView_ucrop_frame_stroke_size=5;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_grid_color}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_grid_color
     */
    public static final int ucrop_UCropView_ucrop_grid_color=6;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_grid_column_count}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_grid_column_count
     */
    public static final int ucrop_UCropView_ucrop_grid_column_count=7;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_grid_row_count}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_grid_row_count
     */
    public static final int ucrop_UCropView_ucrop_grid_row_count=8;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_grid_stroke_size}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.kotlinbaseapplication:ucrop_grid_stroke_size
     */
    public static final int ucrop_UCropView_ucrop_grid_stroke_size=9;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_show_frame}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_show_frame
     */
    public static final int ucrop_UCropView_ucrop_show_frame=10;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_show_grid}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_show_grid
     */
    public static final int ucrop_UCropView_ucrop_show_grid=11;
    /**
     * <p>This symbol is the offset where the {@link com.kotlinbaseapplication.R.attr#ucrop_show_oval_crop_frame}
     * attribute's value can be found in the {@link #ucrop_UCropView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.kotlinbaseapplication:ucrop_show_oval_crop_frame
     */
    public static final int ucrop_UCropView_ucrop_show_oval_crop_frame=12;
  }
  public static final class xml {
    public static final int filepaths=0x7f150000;
    public static final int standalone_badge=0x7f150001;
    public static final int standalone_badge_gravity_bottom_end=0x7f150002;
    public static final int standalone_badge_gravity_bottom_start=0x7f150003;
    public static final int standalone_badge_gravity_top_start=0x7f150004;
    public static final int standalone_badge_offset=0x7f150005;
  }
}